#if( $format == "doc" )
MIME-Version: 1.0
Content-Type: multipart/related; boundary="----=_NextPart_01D506B0.1F52D2B0"
#end

## ======================================================================================================================
## Name: baseline_to_baseline_diff_3col_pdfword.vm 
## 
## Description: Master Template for exporting specifications from Jama to Word and PDF
## ======================================================================================================================
## MODIFICATION HISTORY 
## 
## Date         Revision   Person            Comments 
## -----------  ---------  ----------------  ---------------------------------- 
## 2023-03-07   2.23.1     Anna FitzGerald   - Updated #convertFigures and #formatTables comments 
## 2023-03-15   3.0        Shawnna Williams  - Create baseline to baseline diff
## 2023-08-01   3.1        Anna FitzGerald   - Updated Get Relationships Macro to match Master Word PDF Template 
##                                           - Put conditions around .getResults to prevent Null Pointer Error
##                                           - Fixed argument call to get relationships for added items
##                                           - Updated #formatText macro and #findSourceMHTML with latest macros
## 2023-08-02   3.1.1      Anna FitzGerald   - Reduced maxImageWidth considering images that are taller than wider and must fit in landscape layout 
##                                           - Adjusted styles for more room for comparison tables (margin, font size)
##                                           - Ensured compare relationships show for items that are same version but that have relationship difference
## 2033-08-09   3.1.2      Anna FitzGerald   - Ensured totalRels variables are set to 0 incase no total results are returned so that they 
##                                             do not trigger a null error
## 2023-10-05   3.2        Liam Rotchford    - Updated report logic for gathering baseline items to utilize the new documentSource interface
##                                             method .getContourItemDTOsForBaseline() for latest immutable baselines change to the Jama Connect Tool. 
## 2023-11-21   3.3        Liam Rotchford    - Added new macro #getBaselineItems() for calling logic on larger baseline datasets. 
##                                           - Updated #extractBaselineItems() macro to account for Velocity recursive depth limitation of 20. 
##                                           - Updated #buildRelationshipsCounts() macro to resolve bug with extracting baseline related items following
##                                             Jama 9.6 changes.
## 2023-11-28   3.4        Liam Rotchford    - Updated #extractBaselineItems() & #getBaselineItems() macros to account for the macro depth traversal limit
##                                             to account for the starting depth level, account for the # of extraction calls calculated by the baseline 
##                                             total items and it's relation to the macro recursion depth, and additional early #break calls for better 
##                                             performance as soon as all baseline items have been collected.
## 2023-11-29   3.4.1      Liam Rotchford    - Minor adjustments for baseline extraction items call & #formatAddedItems() macro to gather item global Ids 
##                                             for comparison to ensure item counts for Added items is accurate. 
## 2024-01-18   3.5        Shawnna Williams  Add test runs/cycles to report
##											 SOS-DEF-7380 - Relationship of first added item shows rels for second added item if second added item is blank
##											 SOS-DEF-7382 - HTML encoding for item name in relationship row 
## 2024-01-23   3.5.1      Shawnna Williams  Remove stray parenthesis
## 2024-02-12   3.5.2      Shawnna Williams  Changed it so baseDoc is retrieved from .getDocument (for regular item types). If use .originDocument, built in fields weren't being exported if the item was the current version.
## 2024-02-20   3.5.3      Shawnna Williams  Encode all name fields                                   
## 2024-03-01   3.6        Shawnna Williams  Merge getBaselineItems and extractBaselineItems, merge 3.5 and 3.4 versions                            
## ======================================================================================================================
##
## Report Criteria:
## ---------------------------    
##  * Note: First two criteria are utilized in master template, however if report does not use said criteria 
##            then remove from this list.
##  * Note: If being used this criteria will need to be added to the report configuration.  
##
##      Type:       Display Name:           Report Global Variable:   Function:
##      ----------------------------------------------------------------------------------------------------------------------
##      Baseline	Baseline 1			 	 report_baseline1
##      Baseline    Baseline 2				 report_baseline2
##      Boolean     Include Relationships    includeRelationships
##      Boolean     Include Version Comments report_showComment
##      Boolean     Show Finished Text       report_showFinText
##      Boolean     Exclude Status Field     report_excludeStatus
##    
##
## ======================================================================================================================
##
##
#########################################################################################################################
#########################################################################################################################
##
##  Report Features
#########################################################################################################################
##
##  - Export in HTML, PDF or Word supported
##  - Document properties loaded from custom fields on a set or component
##  - Document Revision Loaded from most recent non-review baseline of the items.  Asterisk added if some items have 
##    changed sinec the msot recent non-review baseline.
##  - Export from project explorer or baseline
##  - Exclude items with a status listed in $excludedStatuses
##  - Numbered captions for figures, tables and equations
##  - Jama hyperlinks to items in the same document converted to Word cross-references
##  - Tables formatted and resized to fit the page width
##  - Images resized to fit the page
##  - All text formatted consistently
##  - Macro for all item types in the Automotive VSO
##
##
#########################################################################################################################
#########################################################################################################################
##
##  Report Issue list
#########################################################################################################################
##  
##  https://jama-arolufs.jamacloud.com/perspective.req#/containers/2444332?projectId=20374
##
#########################################################################################################################
#########################################################################################################################
##
##  Jama Configuration Requirements
#########################################################################################################################
##
##  Valid Export Scenarios
##  - Export Component or Set from Project Explorer 
##  - Export baselined Component or Set from baseline view
##  Required fields for full functionality
##  Set or Component (whichever is the parent of a single document)
##  - Author(s): Text Field
##  - Approvers: Rich Text Field
##  - Document ID: Text Field
##  - Document Status: Text Field or Pick List
##  - Change History: Rich TextText Field
##  All Item Types that could contain Figures, Tables or Equations
##  - Object Type: Pick List containing at least (Text, Figure, Table, Equation)
##
#########################################################################################################################
#########################################################################################################################
##
##  Installation Instructions
#########################################################################################################################
## Add a new report in Jama with the following options:
## 
## Word 
##	-Report Formats: Micosoft Word
##  -Scope: Organization
##  -Organization: Select yours
##  -Visible to Users: true
##  -Context Sensitive: false
## 
## PDF 
##  -Report Formats: PDF 
##  -Scope: Organization
##  -Organization: Select yours
##  -Include Table Of...Contents, Figures, Tables (check all that apply) - false, false
##  -Title Page: true
##  -Visible to Users: true
##  -Context Sensitive: N 
##
#########################################################################################################################
##
##  Report Table of Contents
#########################################################################################################################
##
##  1. DATA_SOURCES
##  2. CONSTANTS
##  3. WORD_HTML_HEAD
##  	3.1 WORD_STYLE_SHEET
##      3.2 WORD_PAGE_DEFINITIONS_STYLE_SHEET 
##  	3.3 WORD_TABLE_STYLE_SHEET
##  4. PDF_HTML_HEAD
##  	4.1 PDF_STYLE_SHEET
##      	4.1.1 PDF_TABLE_OF_STYLE_SHEET 
##          	4.1.1.1 PDF_COUNTERS_STYLE_SHEET 
##      	4.2 PDF_PAGE_DEFINITIONS_STYLE_SHEET 
##  		4.3 PDF_TABLE_STYLE_SHEET
##  5. MACROS
##  	5.1 STANDARD_MACROS
##  	5.2 ITEM_TYPE_MACROS
##  	5.3 BODY_MACRO
##  		5.3.1 WORD_WORKAROUND_HEADER
##  		5.3.2 PDF_HEADER 
##  		5.3.3 TITLE_PAGE
##  		5.3.4 TABLE_OF_CONTENTS
##  		5.3.5 TABLE_OF_FIGURES
##  		5.3.6 TABLE_OF_TABLES
##  		5.3.7 CHANGE_HISTORY
##  		5.3.8 OUTPUT_DOCUMENT_LIST
##  			5.3.8.1 ITEM_TYPE_MAP
##  6. DOCUMENT_INITIALIZATION
##  7. REPORT_BODY
##  8. MS_WORD_OBJECTS
##  9. WORD_HEADER_FOOTER
##  10. WORD_EMBEDDED_FILE_LIST
##
#########################################################################################################################
##
##  Instructions for Customizing
#########################################################################################################################
##  
##  1. Location the section named TITLE_PAGE
##  2. Replace with the content with the desired title page
##  3. Location the section named HEADER_FOOTER
##  4. Replace the header and footer content as desired
##  5. Locate the section named ITEM_TYPE_MAP
##  6. Add a new mapping for the desired item type using an existing format macro or a newly defined one
##  7. Location the section named ITEM_TYPE_MACROS
##  8. Create a macro for the new item types at the end of the list of macros. Use the existing macros as examples.
##
#########################################################################################################################
##
##  1. DATA_SOURCES
##
#########################################################################################################################
##
## Data Sources available without declaration
##-------------------------------------------
## $project
## $documentList
## $baseUrl
##
## Data Sources loaded for this report
##-------------------------------------------
#if( $documentSource ) ##
  ## Jama 8.44 or greater
  ## Jama 8.42 if New Velocity Feature Flag Enabled
  #set( $docDao = $documentSource )
  #set( $documentNodeDao = $documentSource )
  #set( $attachmentDao = $documentSource )
  #set( $attachmentService = $documentSource )
  #set( $relDao = $documentSource )
  #set( $versionDao = $documentSource )
  #set( $testRunDao = $testSource )
  #set( $velocityServiceWrapper = $documentSource )
  #set( $baselineDao = $baselineSource )
##
#else
  ## Jama 8.43 or older
  #set( $docDao = $applicationContext.getBean("documentDao"))
  #set( $documentNodeDao = $applicationContext.getBean("documentNodeDao"))
  #set( $attachmentDao = $applicationContext.getBean("attachmentDao"))
  #set( $attachmentService = $applicationContext.getBean("attachmentService"))
  #set( $relDao = $applicationContext.getBean("relationshipDao") )
  #set( $versionDao = $applicationContext.getBean("versionDao") )
  #set( $testRunDao = $applicationContext.getBean("testRunDao") )
  ## $velocityServiceWrapper is already available
  #set( $baselineDao = $applicationContext.getBean("baseLineDao") )
##
#end
##
## Report Parameters
##-------------------------------------------

#set($compareDocs = [] )
#set($deleted = [] )
#set($docList = [] )
#set($found = 'no')
#set($count=0)
#set($r1 = $mathTool.toInteger($report_baseline1))
#set($r2 = $mathTool.toInteger($report_baseline2))
#set($maxDiff = 50000)
#set($maxedOut="Field is too large for comparison. Maximum number of characters is")
#if($r1 > $r2)
    #set($r1 = $r2)
    #set($r2 = $mathTool.toInteger($report_baseline1))
#end
#if( $report_showFinText != true)
	#set( $report_showFinText = false)
#end
#if( $report_excludeStatus != true)
	#set( $report_excludeStatus = false)
#end
##
#########################################################################################################################
## **********************************************************************************************************************
##
##  2. CONSTANTS
##
##  >>>> Modify global constants for the report here <<<< ##>
##
## **********************************************************************************************************************
#########################################################################################################################
#set( $boundaryString = "------=_NextPart_01D506B0.1F52D2B0") ##
#set( $filePrefix = "file:///C:/D993472D/WordTemplate.fld/") ##
#set( $cmpKey = "CMP") ##
#set( $setKey = "SET") ##
#set( $fldKey = "FLD") ##
#set( $txtKey = "TXT") ##
#set( $objectTypeField = "object_type" ) ##
#set( $timeZone = "America/Los_Angeles" ) ##
##
## Object Types
#set( $informationObjectType = "Information" )
#set( $informationWoHeadingObjectType = "Information without Heading" )
##
## 
## Status values to exlude from export
#set( $excludedStatuses = ["Rejected","Deleted"] ) ##
##
## Maximum image width and height in points.  
## 468 pt is equivalant to 6.5"
## 612 pt is equivalant to 8.5"
#set ($maxPageWidth = 468) ##
#set ($maxPageHeight = 612) ##
#set( $maxImageWidth = 220) ## Keep maxImageWidth below 300 so that an image that is 
## taller than wider does not split table across more than 2 pages in the landscape layout ## 
## 
##

#set( $tableRefNum = 0) ## 'doc' Counter -> Tables
#set( $figureRefNum = 0) ## 'doc' Counter -> Figures 
#set( $equationRefNum = 0) ## 'pdf' or 'doc' Counter -> Equations 

## Automatically include a TOF or TOT for Word if 'true' (PDF select option at time of report install)
#set( $tableOfFigures = false )
#set( $tableOfTables = false )

## All Tables/Figures with captions/figcaptions will be included in the TOT and TOF 
## Automatically include all other Tables/Figures exported regardless of captions/figcaptions
#set( $TOT_includeAllTables = false )
#set( $TOF_includeAllFigures = false )


## Formatting
#set( $tableHeaderBackgroundColor = "#F2F2F2" )
#set( $tableBorderColor = "#7F7F7F" )


## iText PDF does not have Arial, the closest typeface it has is Helvetica
## Arimo is very close in appearance to Arial, and the remote accessible font is linked in the PDF head
#if( $format == "doc" )
	##set( $primaryFont = "Calibri")
	#set( $primaryFont = "Arial")
#elseif( $format == 'pdf') 
	#set( $primaryFont = "Arimo")  	
  	##set( $primaryFont = "Helvetica")
#end

#set( $primaryFontSize = "10pt")
#set( $h1FontSize = "12pt")
#set( $h2FontSize = "11pt")
#set( $h3FontSize = "11pt")
#set( $h4FontSize = "11pt")
#set( $h5FontSize = "11pt")
#set( $h6FontSize = "11pt")
#set( $h7FontSize = "11pt")
#set( $tableCellFontSize = "9pt")

#########################################################################################################################
## **********************************************************************************************************************
#########################################################################################################################
##
#########################################################################################################################
##
##  3. WORD_HTML_HEAD
##
#########################################################################################################################
#if( $format == "doc" )

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="utf-8"

<html xmlns:v=3D"urn:schemas-microsoft-com:vml"
xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml"
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 15">
<meta name=3DOriginator content=3D"Microsoft Word 15">
<link rel=3DFile-List href=3D"WordTemplate.fld/filelist.xml">
<link rel=3DEdit-Time-Data href=3D"WordTemplate.fld/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Jama Software</o:Author>
  <o:LastAuthor>Jama Software</o:LastAuthor>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=3DdataStoreItem href=3D"WordTemplate.fld/item0001.xml" target=3D"WordTemplate.fld/props001.xml">
<link rel=3DthemeData href=3D"WordTemplate.fld/themedata.thmx">
<link rel=3DcolorSchemeMapping href=3D"WordTemplate.fld/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>100</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:EnableOpenTypeKerning/>
   <w:DontFlipMirrorIndents/>
   <w:OverrideTableStyleHps/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val=3D"Cambria Math"/>
   <m:brkBin m:val=3D"before"/>
   <m:brkBinSub m:val=3D"&#45;-"/>
   <m:smallFrac m:val=3D"off"/>
   <m:dispDef/>
   <m:lMargin m:val=3D"0"/>
   <m:rMargin m:val=3D"0"/>
   <m:defJc m:val=3D"centerGroup"/>
   <m:wrapIndent m:val=3D"1440"/>
   <m:intLim m:val=3D"subSup"/>
   <m:naryLim m:val=3D"undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState=3D"false" DefUnhideWhenUsed=3D"false"
  DefSemiHidden=3D"false" DefQFormat=3D"false" DefPriority=3D"99"
  LatentStyleCount=3D"376">
  <w:LsdException Locked=3D"false" Priority=3D"0" QFormat=3D"true" Name=3D"Normal"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"heading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 9"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 9"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 9"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footnote text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"header"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footer"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index heading"/>
  <w:LsdException Locked=3D"false" Priority=3D"35" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"caption"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"table of figures"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"envelope address"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"envelope return"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footnote reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"line number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"page number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"endnote reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"endnote text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"table of authorities"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"macro"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"toa heading"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"10" QFormat=3D"true" Name=3D"Title"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Closing"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Signature"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"Default Paragraph Font"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Message Header"/>
  <w:LsdException Locked=3D"false" Priority=3D"11" QFormat=3D"true" Name=3D"Subtitle"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Salutation"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Date"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text First Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text First Indent 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Note Heading"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Block Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Hyperlink"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"FollowedHyperlink"/>
  <w:LsdException Locked=3D"false" Priority=3D"22" QFormat=3D"true" Name=3D"Strong"/>
  <w:LsdException Locked=3D"false" Priority=3D"20" QFormat=3D"true" Name=3D"Emphasis"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Document Map"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Plain Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"E-mail Signature"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Top of Form"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Bottom of Form"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal (Web)"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Acronym"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Address"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Cite"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Code"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Definition"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Keyboard"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Preformatted"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Sample"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Typewriter"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Variable"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal Table"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation subject"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"No List"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Contemporary"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Elegant"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Professional"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Subtle 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Subtle 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Balloon Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"Table Grid"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Theme"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" Name=3D"Placeholder Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" QFormat=3D"true" Name=3D"No Spacing"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" Name=3D"Revision"/>
  <w:LsdException Locked=3D"false" Priority=3D"34" QFormat=3D"true"
   Name=3D"List Paragraph"/>
  <w:LsdException Locked=3D"false" Priority=3D"29" QFormat=3D"true" Name=3D"Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"30" QFormat=3D"true"
   Name=3D"Intense Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"19" QFormat=3D"true"
   Name=3D"Subtle Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"21" QFormat=3D"true"
   Name=3D"Intense Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"31" QFormat=3D"true"
   Name=3D"Subtle Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"32" QFormat=3D"true"
   Name=3D"Intense Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"33" QFormat=3D"true" Name=3D"Book Title"/>
  <w:LsdException Locked=3D"false" Priority=3D"37" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"Bibliography"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"TOC Heading"/>
  <w:LsdException Locked=3D"false" Priority=3D"41" Name=3D"Plain Table 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"42" Name=3D"Plain Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"43" Name=3D"Plain Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"44" Name=3D"Plain Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"45" Name=3D"Plain Table 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"40" Name=3D"Grid Table Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"46" Name=3D"Grid Table 1 Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark"/>
  <w:LsdException Locked=3D"false" Priority=3D"51" Name=3D"Grid Table 6 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"52" Name=3D"Grid Table 7 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"46" Name=3D"List Table 1 Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark"/>
  <w:LsdException Locked=3D"false" Priority=3D"51" Name=3D"List Table 6 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"52" Name=3D"List Table 7 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Mention"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Smart Hyperlink"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Hashtag"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Unresolved Mention"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Smart Link"/>
 </w:LatentStyles>
</xml><![endif]-->

#########################################################################################################################
##
##  3.1 WORD_STYLE_SHEET
##
#########################################################################################################################
<style>
<!--
 /* Font Definitions */
 @font-face
  {font-family:Wingdings;
  panose-1:5 0 0 0 0 0 0 0 0 0;
  mso-font-charset:77;
  mso-generic-font-family:decorative;
  mso-font-pitch:variable;
  mso-font-signature:3 268435456 0 0 -2147483647 0;}
@font-face
  {font-family:"Cambria Math";
  panose-1:2 4 5 3 5 4 6 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:roman;
  mso-font-pitch:variable;
  mso-font-signature:-536870145 1107305727 0 0 415 0;}
@font-face
  {font-family:"Calibri";
  panose-1:2 15 5 2 2 2 4 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:swiss;
  mso-font-pitch:variable;
  mso-font-signature:-1610611985 1073750139 0 0 159 0;}
@font-face
  {font-family:"Times New Roman \(Body CS\)";
  panose-1:2 11 6 4 2 2 2 2 2 4;
  mso-font-alt:"Times New Roman";
  mso-font-charset:0;
  mso-generic-font-family:roman;
  mso-font-pitch:auto;
  mso-font-signature:0 0 0 0 0 0;}
@font-face
  {font-family:"Helvetica Neue";
  panose-1:2 0 5 3 0 0 0 2 0 4;
  mso-font-charset:0;
  mso-generic-font-family:auto;
  mso-font-pitch:variable;
  mso-font-signature:-452984065 1342208475 16 0 1 0;}
@font-face
  {font-family:Times;
  panose-1:0 0 5 0 0 0 0 2 0 0;
  mso-font-charset:0;
  mso-generic-font-family:auto;
  mso-font-pitch:variable;
  mso-font-signature:-536870145 1342185562 0 0 415 0;}

/* Set the global font family and base font-size */

body {
   font-family:"${primaryFont}",sans-serif;
   font-size:${primaryFontSize};}

 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
  {mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-parent:"";
  margin:3pt 0pt 3pt 0pt;
  mso-pagination:widow-orphan;
  font-family:"${primaryFont}",sans-serif;
  font-size:${primaryFontSize};}
p.error
  {mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-parent:"";
  margin:0pt;
  mso-pagination:widow-orphan;
  color:red;}
h1
  {mso-style-priority:9;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:2pt 0pt 2pt .3in;
  text-indent:-.3in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:1;
  mso-list:l0 level1 lfo1;
  font-size:${h1FontSize};
  mso-font-kerning:0pt;
  font-weight:bold;
text-transform:uppercase;}
h2
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:2pt 0pt 2pt .4in;
  text-indent:-.4in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:2;
  mso-list:l0 level2 lfo1;
  font-size:${h2FontSize};
  font-weight:normal;}
h3
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .5in;
  text-indent:-.5in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:3;
  mso-list:l0 level3 lfo1;
  font-size:${h3FontSize};
  font-weight:normal;}
h4
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .6in;
  text-indent:-.6in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:4;
  mso-list:l0 level4 lfo1;
  font-size:${h4FontSize};
  font-weight:normal;
  font-style:italic;}
h5
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .7in;
  text-indent:-.7in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:5;
  mso-list:l0 level5 lfo1;
  font-size:${h5FontSize};
  font-weight:normal;}
h6
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .8in;
  text-indent:-.8in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:6;
  mso-list:l0 level6 lfo1;
  font-size:${h6FontSize};
  font-weight:normal;}
/*tables of... leaders ->blank,dashed,dotted,heavy,lined,middot */
span {
	.mso-tab-count:blank !important;
}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .8in;
  text-indent:-.8in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:7;
  mso-list:l0 level7 lfo1;
  font-size:${h7FontSize};
  color:#1F3763;
  font-weight:normal;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:6pt 0pt 0pt 0pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:12.0pt;
  font-weight:bold;
  font-style:italic;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:6pt 0pt 0pt 11pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:11.0pt;
  font-weight:normal;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:3pt 0pt 0pt 22pt;
  font-family:"Arial",sans-serif;
  mso-pagination:widow-orphan;
  font-size:10.0pt;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:3pt 0pt 0pt 33pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:10.0pt;}
p.MsoToc5, li.MsoToc5, div.MsoToc5
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:3pt 0pt 0pt 44pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:10.0pt;}
p.MsoToc6, li.MsoToc6, div.MsoToc6
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:3pt 0pt 0pt 55pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:10.0pt;}
p.MsoToc7, li.MsoToc7, div.MsoToc7
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:3pt 0pt 0pt 66pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:10.0pt;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
  {mso-style-priority:99;
  mso-style-qformat:yes;
  margin:0pt;
  mso-pagination:widow-orphan;
  tab-stops:center 3.25in right 6.5in;
  font-size:10.0pt;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
  {mso-style-priority:99;
  mso-style-qformat:yes;
  margin:0pt;
  mso-pagination:widow-orphan;
  tab-stops:center 3.25in right 6.5in;
  font-size:10.0pt;}

p.MsoCaption, li.MsoCaption, div.MsoCaption,span.MsoCaption
 {font-size:9.0pt !important;
  color:#44546A !important;
  font-style:italic !important;
  font-family:'Helvetica',sans-serif !important;
  page-break-inside:avoid !important;
/*  font-weight:bold;*/
  margin:0;
}
p.MsoTitle, li.MsoTitle, div.MsoTitle
  {mso-style-priority:10;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:0pt;
  line-height:normal;
  mso-add-space:auto;
  mso-pagination:widow-orphan;
  font-size:40.0pt;
  color:#4F81BD;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
  {mso-style-priority:11;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  line-height:normal;
  margin:0pt 0pt 3pt 0pt;
  mso-pagination:widow-orphan;
  font-size:12.0pt;}
a:link, span.MsoHyperlink
  {mso-style-priority:99;
  color:#0563C1;
  mso-themecolor:hyperlink;
  text-decoration:underline;
  text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
  {mso-style-noshow:yes;
  mso-style-priority:99;
  color:#954F72;
  mso-themecolor:followedhyperlink;
  text-decoration:underline;
  text-underline:single;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
  {mso-style-priority:34;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin:0pt;
  mso-add-space:auto;
  mso-pagination:widow-orphan;
  font-size:"${primaryFontSize}";}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
  {mso-style-priority:39;
  mso-style-qformat:yes;
  mso-style-parent:"Heading 1";
  mso-style-next:Normal;
  margin:0pt;
  text-align:center;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  font-size:16.0pt;}
p.TableHeader, li.TableHeader, div.TableHeader
  {mso-style-name:"Table Header";
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin:0pt;
  mso-pagination:widow-orphan;
  font-size:"${primaryFontSize}";
  font-weight:bold;}
p.TableCell, li.TableCell, div.TableCell
  {mso-style-name:"Table Cell";
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin:0pt;
  mso-pagination:widow-orphan;
  font-size:${tableCellFontSize};}
ol
  {margin:0pt;}
ul
  {margin:0pt;}
li
  {margin:0pt;}

/* Baseline Diff Styles */ 
span.diff-html-added
	{color:#00A551;
	border:solid #CCFFCC 1.5pt;
	padding:0in;}
span.diff-html-removed
	{color:#EC1C24;
	background:#FCDDDE;}
span.diff-tag-html {
  font-family:"Courier New";
  font-size: 80%;}
span.diff-tag-removed {
  font-size: 100%;
  text-decoration: line-through;
  background-color: #fdc6c6;}  /* light red */

span.diff-tag-added {
  font-size: 100%;
  background-color: #ccffcc; /* light green */}

span.diff-tag-conflict {
  font-size: 100%;
  background-color: #f781be; /* light rose */}

span.diff-html-added {
    font-size: 100%;
    color: #00a551;
    border-bottom: 4pt dotted #00a551;
    border: 2pt solid #ccffcc;}

span.diff-html-removed {
    font-size: 100%;
    background-color: #fcddde; /* light red */
    color: #ec1c24;
    border: 2pt solid #fcddde;}

span.diff-tag-html {
  font-family: 'Space Mono', monospace;
  font-size: 80%;}

.inline-diffs span.diff-html-added {
    background-repeat: no-repeat;}

.inline-diffs span.diff-html-added, .inline-diffs span.diff-html-removed {
    font-size: 100%;
    cursor: pointer;
    padding: 0 0 0 18pt;
    margin-right: 0.2em;
    text-decoration: none;
    cursor: pointer;}

.inline-diffs span.diff-html-removed {
    background-repeat: no-repeat;}

span.diff-html-removed.closed {
    width: 0;
    overflow: hidden;
    display: inline-block;
    height: 1em;}

span.diff-html-added.closed {
    color: inherit;
    overflow: inherit;
    display: inline;
    height: auto;
    width: auto;
    border-bottom: inherit;
    display: inline;}

span.diff-html-changed {
    background-color: #c6c6fd; /* light blue */
    cursor: pointer;}

span.diff-html-conflict {
    background-color: #f781be; /* light rose */}

span.diff-html-selected {
    background-color: #FF8800; /* light orange */
    cursor: pointer;}

span.diff-html-selected img {
    border: 2pt solid #FF8800; /* light orange */}

span.diff-html-added img {
  border: 4pt solid #ccffcc;}

span.diff-html-removed img {
    border: 2pt solid #fdc6c6;
    border-bottom-width: 0;
    border-top-width: 0;}

span.diff-html-changed img {
    border: 2pt dotted #000099;}

div.diff-removed-image, div.diff-added-image, div.diff-conflict-image {
    opacity: 0.55;
    filter: alpha(opacity=55);
    -moz-opacity: 0.55;}

div.diff-removed-image, div.diff-added-image, div.diff-conflict-image {
  margin:4pt;
 }

div.diff-removed-image {
    background-color: #fdc6c6;}

div.diff-added-image {
    background-color: #ccffcc;
    background-repeat: no-repeat;}

div.diff-conflict-image {
    background-color: #f781be;
    background-repeat: no-repeat;}

img.diff-icon {
    background-color: #FF8800;
    width: 16pt;
    height: 16pt;
    border: 0 none;}

table.diff-tooltip-link, table.diff-tooltip-link-changed {
    width: 100%;
    text-align: center;
    vertical-align: middle;}

table.diff-tooltip-link-changed {
    border-top: thin dashed #000000;
    margin-top: 3pt;
    padding-top: 3pt}

td.diff-tooltip-prev {
    text-align: left; }

td.diff-tooltip-next {
    text-align: right;}

table.diffpage-html-firstlast {
    width: 100%;
    Vertical-align: middle;}

div.diff-topbar {
    border-bottom: 2pt solid #FF8800;
    border-left: 1pt solid #FF8800;
    border-right: 1pt solid #FF8800;
    background-color: #FFF5F5;}

a.diffpage-html-a, a.diffpage-html-a:hover, a.diffpage-html-a:link, a.diffpage-html-a:visited, a.diffpage-html-a:active {
    text-decoration: none;
    color: #FF8800;}

.diffpage-html-firstlast a img, .dsydiff-prevnextnav a img {
    vertical-align: middle;}



 /* Table of... List Definitions */
@list l0
  {mso-list-id:1764108000;
  mso-list-template-ids:1094757160;}
@list l0:level1
  {mso-level-style-link:"Heading 1";
  mso-level-text:%1;
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.3in;
  text-indent:-.3in;}
@list l0:level2
  {mso-level-style-link:"Heading 2";
  mso-level-text:"%1\.%2";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.4in;
  text-indent:-.4in;}
@list l0:level3
  {mso-level-style-link:"Heading 3";
  mso-level-text:"%1\.%2\.%3";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.5in;
  text-indent:-.5in;}
@list l0:level4
  {mso-level-style-link:"Heading 4";
  mso-level-text:"%1\.%2\.%3\.%4";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.6in;
  text-indent:-.6in;}
@list l0:level5
  {mso-level-style-link:"Heading 5";
  mso-level-text:"%1\.%2\.%3\.%4\.%5";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.7in;
  text-indent:-.7in;}
@list l0:level6
  {mso-level-style-link:"Heading 6";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.8in;
  text-indent:-.8in;}
@list l0:level7
  {mso-level-style-link:"Heading 7";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.9in;
  text-indent:-.9in;}
@list l0:level8
  {mso-level-style-link:"Heading 8";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:1.0in;
  text-indent:-1.0in;}
@list l0:level9
  {mso-level-style-link:"Heading 9";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8\.%9";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:1.1in;
  text-indent:-1.1in;}

/********************************************************************************************************
		3.2 WORD_PAGE_DEFINITIONS_STYLE_SHEET
********************************************************************************************************/

/* Normal Page Definition */
/*
@page
  {mso-footnote-separator:url("WordTemplate.fld/header.htm") fs;
  mso-footnote-continuation-separator:url("WordTemplate.fld/header.htm") fcs;
  mso-endnote-separator:url("WordTemplate.fld/header.htm") es;
  mso-endnote-continuation-separator:url("WordTemplate.fld/header.htm") ecs;}
@page WordSectionPortrait
  {size:8.5in 11.0in;
  margin:1.0in 1.0in 1.0in 1.0in;
  mso-header-margin:.5in;
  mso-footer-margin:.5in;
  mso-title-page:yes;
  mso-header:url("WordTemplate.fld/header.htm") pageHeader;
  mso-footer:url("WordTemplate.fld/header.htm") pageFooter;
  mso-first-header:url("WordTemplate.fld/header.htm") titlepageheader;
  mso-first-footer:url("WordTemplate.fld/header.htm") titlepagefooter;
  mso-paper-source:0;}
*/
/* Header Import Bug Workaround Page Definition */
@page
  {mso-footnote-separator: fs;
  mso-footnote-continuation-separator: fcs;
  mso-endnote-separator: es;
  mso-endnote-continuation-separator: ecs;}
@page WordSectionPortrait
  {size:8.5in 11.0in;
  margin:1.0in 1.0in 1.0in 1.0in;
  mso-header-margin:.5in;
  mso-footer-margin:.5in;
  mso-title-page:yes;
  mso-header: pageHeader;
  mso-footer: pageFooter;
  mso-first-header: titlepageHeader;
  mso-first-footer: titlepageFooter;
  mso-paper-source:0;}
div.WordSectionPortrait
  {page:WordSectionPortrait;}
@page WordSectionLandscape
  {size:11.0in 8.5in;
  mso-page-orientation:landscape;
  margin:0.5in 0.5in 0.5in .5in;
  mso-header-margin:.5in;
  mso-footer-margin:.5in;
  mso-title-page:yes;
  mso-header: pageHeader;
  mso-footer: pageFooter;
  mso-first-header: titlepageHeader;
  mso-first-footer: titlepageFooter;
  mso-paper-source:0;}
div.WordSectionLandscape
  {page:WordSectionLandscape;}


/********************************************************************************************************
		3.3 WORD_TABLE_STYLE_SHEET
********************************************************************************************************/
table 
  {margin-top:2pt;
  border-collapse: collapse;
  table-layout: fixed;}
th, td
  {padding-left: 2pt;
  padding-right: 2pt;
  text-align:left;
  overflow-wrap:break-word; /*normal | anywhere | break-word | initial | inherit */ 
  white-space:normal !important; 
  font-size:${tableCellFontSize}}
 th
  {background:$tableHeaderBackgroundColor;}
 table.MsoNormalTable
  {mso-style-name:"Table Normal";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-noshow:yes;
  mso-style-priority:99;
  mso-style-parent:"";
  border-collapse:collapse;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-para-margin:0in;
  mso-pagination:widow-orphan;
  font-size:${tableCellFontSize};
  font-family:"${primaryFont}",sans-serif;}
table.MsoTableGrid
  {mso-style-name:"Table Grid";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-priority:39;
  mso-style-unhide:no;
  border:solid $tableBorderColor 1.0pt;
  border-collapse:collapse;
  mso-border-alt:solid $tableBorderColor .5pt;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-border-insideh:.5pt solid $tableBorderColor;
  mso-border-insidev:.5pt solid $tableBorderColor;
  mso-para-margin:0in;
  mso-pagination:widow-orphan;
  font-size:${tableCellFontSize};
  mso-bidi-font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;}
table.TableGridwithHeader
  {table-layout:fixed;
  mso-table-layout-alt:fixed;
  border-collapse:collapse;
  border:none;
  mso-style-name:"Table Grid with Header";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-priority:99;
  mso-style-unhide:no;
  mso-style-parent:"Table Grid";
  border:solid $tableBorderColor 1.0pt;
  mso-border-alt:solid $tableBorderColor .5pt;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-border-insideh:.5pt solid $tableBorderColor;
  mso-border-insidev:.5pt solid $tableBorderColor;
  mso-para-margin:0in;
  mso-pagination:widow-orphan;
  font-size:${tableCellFontSize};
  font-family:"${primaryFont}",sans-serif;}
th.TableHeader
  {border:solid $tableBorderColor .5pt;}
td.TableCell
  {border:solid $tableBorderColor .5pt;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext=3D"edit">
  <o:idmap v:ext=3D"edit" data=3D"1"/>
 </o:shapelayout></xml><![endif]-->

#elseif($format == "pdf")
#########################################################################################################################
##
##  4. PDF_HTML_HEAD
##
#########################################################################################################################
## If the PDF report has remote access fonts, include via a <link> here. Example:
## <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Math&display=swap" rel="stylesheet">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Arimo:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&display=swap" rel="stylesheet">


#########################################################################################################################
##
##  4.1 PDF_STYLE_SHEET
##  
##  iText PDF has 14 standard fonts which can be referenced in the CSS/HTML without an external link: 
##  
##  Courier, Courier-Bold, Courier-Bold Oblique, Courier-Oblique, Helvetica, Helvetica-Bold, Helvetica-Bold Oblique,  
##  Helvetica-Oblique, Times-Roman, Times-Bold,Times-BoldItalic, Times-Italic, Symbol, ZapfDingbats
##  
##  If the client has a typeface that is locally accessible to them, it can be included using @font-face. 
##  Make sure to place within the style tags below, Example:
##  @font-face {
##		font-family: 'rakkasregular';
##		src: url('/Users/krichards/Desktop/Rakkas/Rakkas-Regular.ttf') format('ttf'),
##		url('/Users/krichards/Desktop/Rakkas/Rakkas-Regular.ttf') format('ttf');
##		font-weight: normal;
##		font-style: normal;}  
##
#########################################################################################################################
<style>
/* Style Definitions */

* { 
  font-size:${primaryFontSize};
  font-family:"${primaryFont}",sans-serif;
}

html, body {max-width:8.5in;}

body {margin:auto;
counter-reset: figCapCounter tableCapCounter;} 

#if( $format == 'html')
body {max-width:90%;}
td {padding:3pt;}
#end

/* Font Styles- Note: The PDF ToC will include any content within h1-h6 tags */
p.MsoNormal 
{margin:0;
padding:0;}
p.error
{margin-bottom:.0001pt;
color:red;}
h1
{margin:12pt 0pt 3pt .3in;
text-indent:-.3in;
page-break-after:avoid;
page-break-inside:avoid;
font-size:${h1FontSize};
/*color:#2F5496;*/
font-weight:bold;
text-transform:uppercase;}
h2 
{margin:6pt 0pt 3pt .4in;
text-indent:-.4in;
font-size:${h2FontSize};
page-break-after:avoid;
page-break-inside:avoid;
/*color:#2F5496;*/
font-weight:normal;}
h3 
{margin:6pt 0pt 3pt .5in;
text-indent:-.5in;
font-size:${h3FontSize};
page-break-after:avoid;
page-break-inside:avoid;
/*color:#1F3763;*/
font-weight:normal;}
h4 
{margin:6pt 0pt 3pt .6in;
text-indent:-.6in;
font-size:${h4FontSize};
font-style:italic;
page-break-after:avoid;
page-break-inside:avoid;
/*color:#2F5496;*/
font-weight:normal;}
h5 
{margin:6pt 0pt 3pt .7in;
text-indent:-.7in;
font-size:${h5FontSize};
page-break-after:avoid;
page-break-inside:avoid;
/*color:#2F5496;*/
font-weight:normal;}
h6 
{margin:6pt 0pt 3pt .8in;
text-indent:-.8in;
font-size:${h6FontSize};
page-break-after:avoid;
page-break-inside:avoid;
/*color:#1F3763;*/
font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
{margin:6pt 0pt 3pt .8in;
text-indent:-.8in;
page-break-after:avoid;
font-size:12.0pt;
/*color:#1F3763;*/
font-weight:normal;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
{margin:0pt;
font-size:40.0pt;
color:#4F81BD;
line-height:99%;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
{margin-top:0pt 0pt 3pt 0pt;
font-size:12.0pt;
line-height:75%;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
{ margin:0pt;
  font-size:10.0pt;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
{ margin:0pt;
  font-size:10.0pt;}
p.TableHeader, li.TableHeader, div.TableHeader
{margin:0pt;
font-weight:bold;}
p.TableCell, li.TableCell, div.TableCell
{font-size:10pt;
margin:0pt;
font-size:10pt;}
p.ListParagraph, li.ListParagraph, div.ListParagraph
{margin:0pt;}
ol
{margin:0pt;}
ul
{margin:0pt;}
li
{margin:0pt;}
a:link
{color:#0563C1;
text-decoration:underline;
text-underline:single;}
a:visited
{color:#954F72;
text-decoration:underline;
text-underline:single;}

td {padding:3pt !important;}
 
span {line-height:normal;}
/*Superscript and Subscript */
sub, sup {font-size:7pt;}

/* Images */ 

figure {padding:0;
margin:0;}

img {
max-height:100%;
max-width:100%;
padding:0;
margin:0;
object-fit:contain;
}

.MsoCaption, figcaption, caption 
{font-size:9.0pt;
color:#44546A;
font-style:italic;
page-break-inside:avoid;
margin:0;
/*font-weight:bold;*/
}

figcaption {margin-top:0pt;}

caption {margin-top:6pt;}

/* Baseline Diff Styles */ 
span.diff-html-added
  {color:#00A551;
  border:solid #CCFFCC 1.5pt;
  padding:0in;}
span.diff-html-removed
  {color:#EC1C24;
  background:#FCDDDE;}
span.diff-tag-html {
  font-family:"Courier New";
  font-size: 80%;}
span.diff-tag-removed {
  font-size: 100%;
  text-decoration: line-through;
  background-color: #fdc6c6;}  /* light red */

span.diff-tag-added {
  font-size: 100%;
  background-color: #ccffcc; /* light green */}

span.diff-tag-conflict {
  font-size: 100%;
  background-color: #f781be; /* light rose */}

span.diff-html-added {
    font-size: 100%;
    color: #00a551;
    border-bottom: 4pt dotted #00a551;
    border: 2pt solid #ccffcc;}

span.diff-html-removed {
    font-size: 100%;
    background-color: #fcddde; /* light red */
    color: #ec1c24;
    border: 2pt solid #fcddde;}

span.diff-tag-html {
  font-family: 'Space Mono', monospace;
  font-size: 80%;}

.inline-diffs span.diff-html-added {
    background-repeat: no-repeat;}

.inline-diffs span.diff-html-added, .inline-diffs span.diff-html-removed {
    font-size: 100%;
    cursor: pointer;
    padding: 0 0 0 18pt;
    margin-right: 0.2em;
    text-decoration: none;
    cursor: pointer;}

.inline-diffs span.diff-html-removed {
    background-repeat: no-repeat;}

span.diff-html-removed.closed {
    width: 0;
    overflow: hidden;
    display: inline-block;
    height: 1em;}

span.diff-html-added.closed {
    color: inherit;
    overflow: inherit;
    display: inline;
    height: auto;
    width: auto;
    border-bottom: inherit;
    display: inline;}

span.diff-html-changed {
    background-color: #c6c6fd; /* light blue */
    cursor: pointer;}

span.diff-html-conflict {
    background-color: #f781be; /* light rose */}

span.diff-html-selected {
    background-color: #FF8800; /* light orange */
    cursor: pointer;}

span.diff-html-selected img {
    border: 2pt solid #FF8800; /* light orange */}

span.diff-html-added img {
  border: 4pt solid #ccffcc;}

span.diff-html-removed img {
    border: 2pt solid #fdc6c6;
    border-bottom-width: 0;
    border-top-width: 0;}

span.diff-html-changed img {
    border: 2pt dotted #000099;}

div.diff-removed-image, div.diff-added-image, div.diff-conflict-image {
    opacity: 0.55;
    filter: alpha(opacity=55);
    -moz-opacity: 0.55;}

div.diff-removed-image, div.diff-added-image, div.diff-conflict-image {
  margin:4pt;
 }

div.diff-removed-image {
    background-color: #fdc6c6;}

div.diff-added-image {
    background-color: #ccffcc;
    background-repeat: no-repeat;}

div.diff-conflict-image {
    background-color: #f781be;
    background-repeat: no-repeat;}

img.diff-icon {
    background-color: #FF8800;
    width: 16pt;
    height: 16pt;
    border: 0 none;}

table.diff-tooltip-link, table.diff-tooltip-link-changed {
    width: 100%;
    text-align: center;
    vertical-align: middle;}

table.diff-tooltip-link-changed {
    border-top: thin dashed #000000;
    margin-top: 3pt;
    padding-top: 3pt}

td.diff-tooltip-prev {
    text-align: left; }

td.diff-tooltip-next {
    text-align: right;}

table.diffpage-html-firstlast {
    width: 100%;
    Vertical-align: middle;}

div.diff-topbar {
    border-bottom: 2pt solid #FF8800;
    border-left: 1pt solid #FF8800;
    border-right: 1pt solid #FF8800;
    background-color: #FFF5F5;}

a.diffpage-html-a, a.diffpage-html-a:hover, a.diffpage-html-a:link, a.diffpage-html-a:visited, a.diffpage-html-a:active {
    text-decoration: none;
    color: #FF8800;}

.diffpage-html-firstlast a img, .dsydiff-prevnextnav a img {
    vertical-align: middle;}


/********************************************************************************************************

    4.1.1 PDF_TABLE_OF_STYLE_SHEET 

The TOC, TOT, and TOF can be selected at the time of report installation, 
and will automatically generate to the report, considering these circumstances: 

    o The TOC will include any content with hierarchy of 1-6 (formatted in h1-h6 tags).
    o The TOF will include Figures if they have a figcaption in Jama. 
    o The ToT will include Tables if they have a caption in Jama. 

Use the following Jama Connect classes to style the ToC, ToF, and ToT and trail the CSS property value with !important; 
https://jamaservice.atlassian.net/wiki/spaces/EN/pages/1714126862/iText+Table+of...+Styling
********************************************************************************************************/
/*
.table-of-reference-page-break {
page-break-before: always;
} To overide page-break-before: avoid!important;
*/

.table-of-reference-title {
  font-size:16.0pt !important;
  font-weight:normal !important;
}

.TOC_table-of-contents-item-level1 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:11.5pt !important;
  font-style:italic !important;
  font-weight: 700 !important;
  width: 90% !important;
}

.TOC_table-of-contents-item-level2 {
  font-family:"${primaryFont}",sans-serif !important;
  width: 90% !important;
  font-size:11pt !important;
  font-weight: normal !important;
}

.TOC_table-of-contents-item-level3 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10.5pt !important;
  width: 90% !important;
}

.TOC_table-of-contents-item-level4 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10pt !important;
  width: 90% !important;
}

.TOC_table-of-contents-item-level5 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10pt !important;
  width: 90% !important;
}

.TOC_table-of-contents-item-level6 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10pt !important;
  width: 90% !important;
}

.TOC_table-of-contents-item-level7 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10pt !important;
  width: 90% !important;
}

.TOT_table-of-tables-item,
.TOF_table-of-figures-item {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10pt !important;
  padding: 0 !important;
  overflow:hidden !important;
  width:90% !important;
}


/********************************************************************************************************
    
    3.1.1.1 PDF_COUNTERS_STYLE_SHEET
  
********************************************************************************************************/

/* Report Body Counter */

div.reportBodyCounterContainer {counter-reset:h1Report;}
h1{counter-reset:h2Report;}
h2{counter-reset:h3Report;}
h3{counter-reset:h4Report;}
h4{counter-reset:h5Report;}
h5{counter-reset:h6Report;}
h6{counter-reset:h7Report;}

h1::before 
  {counter-increment: h1Report;
  content: counter( h1Report ) "\0000a0";}
h2::before 
  {counter-increment:h2Report;
  content: counter( h1Report) "." counter(h2Report) "\0000a0";}
h3::before 
  {counter-increment: h3Report;
  content: counter( h1Report) "." counter(h2Report) "." counter(h3Report) "\0000a0";}
h4::before 
  {counter-increment: h4Report;
  content: counter( h1Report) "." counter(h2Report) "." counter(h3Report) "." counter(h4Report) "\0000a0";}
h5::before
  {counter-increment:h5Report;
  content: counter(h1Report) "." counter(h2Report) "." counter(h3Report) "." counter(h4Report) "." counter(h5Report) "\0000a0";}
h6::before
  {counter-increment: h6Report;
  content: counter(h1Report) "." counter(h2Report) "." counter(h3Report) "." counter(h4Report) "." counter(h5Report) "." counter(h6Report) "\0000a0";}
.MsoHeading7::before
  {counter-increment: h7Report;
  content: counter(h1Report) "." counter(h2Report) "." counter(h3Report) "." counter(h4Report) "." counter(h5Report) "." counter(h6Report) "." counter(h7Report) "\0000a0";}
/* Report Body Counter for Figures (counter-reset on the body) */

figcaption::before {
  counter-increment: figCapCounter;
  content: "Figure" "\0000a0" counter(figCapCounter) "\0000a0";
}


/* Report Body Counter For Tables  (counter-reset on the body) */

caption::before {
  counter-increment: tableCapCounter;
  content:"Table" "\0000a0" counter(tableCapCounter) "\0000a0";
}


/* Table of Contents 7 levels of counters */

.tocCounterContainer {
  counter-reset: h1toc h2toc h3toc h4toc h5toc h6toc h7toc; 
}


.TOC_table-of-contents-item-level1-forCount { 
  counter-reset: h2toc h3toc h4toc h5toc h6toc h7toc;
  counter-increment: h1toc;
}
.TOC_table-of-contents-item-level1::before {
  content: counter(h1toc) "\0000a0";
}


.TOC_table-of-contents-item-level2-forCount {
  counter-reset: h3toc h4toc h5toc h6toc h7toc;
  counter-increment: h2toc;
}
.TOC_table-of-contents-item-level2::before {
  content: counter(h1toc) "." counter(h2toc) "\0000a0";
}


.TOC_table-of-contents-item-level3-forCount {
  counter-reset: h4toc h5toc h6toc h7toc;
  counter-increment: h3toc;
}
.TOC_table-of-contents-item-level3::before {
  content: counter(h1toc) "." counter(h2toc) "." counter(h3toc) "\0000a0";
}


.TOC_table-of-contents-item-level4-forCount {
  counter-reset: h5toc h6toc h7toc;
  counter-increment: h4toc;
}
.TOC_table-of-contents-item-level4::before {
  content: counter(h1toc) "." counter(h2toc) "." counter(h3toc) "." counter(h4toc) "\0000a0";
}


.TOC_table-of-contents-item-level5-forCount {
  counter-reset: h6toc h7toc;
  counter-increment: h5toc;
}
.TOC_table-of-contents-item-level5::before {
  content: counter(h1toc) "." counter(h2toc) "." counter(h3toc) "." counter(h4toc) "." counter(h5toc) "\0000a0";
}


.TOC_table-of-contents-item-level6-forCount {
  counter-reset: h7toc;
  counter-increment: h6toc;
}
.TOC_table-of-contents-item-level6::before {
  content: counter(h1toc) "." counter(h2toc) "." counter(h3toc) "." counter(h4toc) "." counter(h5toc) "." counter(h6toc) "\0000a0";
}


.TOC_table-of-contents-item-level7-forCount {
  counter-increment: h7toc;
}
.TOC_table-of-contents-item-level7::before {
  content: counter(h1toc) "." counter(h2toc) "." counter(h3toc) "." counter(h4toc) "." counter(h5toc) "." counter(h6toc) "." counter(h7toc) "\0000a0";
}


/* Table of Figures Counter */

div.tofCounterContainer {
  counter-reset:tableOfFigures;
}

.TOF_table-of-figures-item::before 
  {counter-increment: tableOfFigures;
  content: "Figure" "\0000a0" counter(tableOfFigures) "\0000a0"; 
} 


/* Table of Tables Counter */

div.totCounterContainer {
  counter-reset:tableOfTables;
}

.TOT_table-of-tables-item::before 
  {counter-increment: tableOfTables;
  content: "Table" "\0000a0" counter(tableOfTables) "\0000a0"; 
} 

/********************************************************************************************************
    
    4.1.2 PDF_PAGE_DEFINITIONS_STYLE_SHEET

********************************************************************************************************/

@page  {  
  size:Landscape;  /* Specify page size/orientation, i.e. size: "Landscape"; or size: "A4"; etc. */
  margin: .5in .5in 1.5in .5in; /* set margins to preference */
  @top-center 
  {content: element(pageHeader)}
  @bottom-center 
  {content: element(pageFooter)}
}

@page :first {     
    /* If no diff first page header/footer change to match what you have named pageHeader/pageFooter 
  or comment-out the "@page :first..." block */
  margin: .5in .5in 1.5in .5in;
  @top-center 
  {content: element(titlepageHeader)} 
  @bottom-center 
  {content: element(titlepageFooter)}
}
#pageNumber::after {
    content: counter(page)
}
#totalPages::after {
    content: counter(pages)
}

/* apply margin for the header/footer to the container div.<header/footerClass> */
div.titlepageHeader {
  display: block;
  text-align: center;
  position: running(titlepageHeader);
 }
div.titlepageFooter {
  display: block;
  text-align: center;
  position: running(titlepageFooter);
}
div.pageHeader {
  display: block;
  text-align: center;
  position: running(pageHeader);
}
div.pageFooter {
  display: block;
  text-align: center;
  position: running(pageFooter);
}
/* To center a table vertically and horizontally use margin:auto; */
.pageHeader-table,
.pageFooter-table {
  margin:auto; 
  border:none;
  width:100%;
  height:100%;
}
/********************************************************************************************************
    4.1.3 PDF_TABLE_STYLE_SHEET
********************************************************************************************************/
table 
  {margin-top:2pt;
  border-collapse:collapse;
  table-layout:fixed;}
th, td
  {padding-left:2pt;
  padding-right:2pt;
  text-align:left;
  overflow-wrap:break-word; /*normal | anywhere | break-word | initial | inherit */ 
  white-space:normal !important; 
  font-size:${tableCellFontSize};} 
th
  {background:$tableHeaderBackgroundColor;}
table.MsoNormalTable
  {padding:0in 5.4pt 0in 5.4pt;
  margin:0in;
  font-size:${tableCellFontSize};}
table.MsoTableGrid
  {border:solid $tableBorderColor 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;
  font-size:${tableCellFontSize};}
table.TableGridwithHeader
  {table-layout:fixed;
  border:solid $tableBorderColor 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;
  margin:0in;
  font-size:${tableCellFontSize};}
th.TableHeader
  {border:solid $tableBorderColor .5pt;}
td.TableCell
  {border:solid $tableBorderColor .5pt;}

</style>


#end ##if( $format == "doc")...#elseif($format == "pdf")...## 
</head>
#########################################################################################################################
##
##  5. MACROS
##
#########################################################################################################################
##
#########################################################################################################################
##
##  5.1 STANDARD_MACROS
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getContainer                                                           
##          Inputs: $baselineMode - boolean: user selected.  tells the report if the export was from a baseline or not                                        
##          Creates: $containerDoc - document: creates $containerDoc to used for the remainder of the report
#########################################################################################################################
#macro( getContainer $baselineMode )
##
  #set( $firstDocInList = $documentList[0].document )
  #set( $firstDocInListTypeKey = $firstDocInList.documentType.documentTypeKey )
##
  ## export from a baseline
  #if( $baselineMode )
    #### Debug: Baseline Mode
    ## baseline of a set or component will include the set or component as the first item
    #if( $firstDocInListTypeKey == $cmpKey ||
         $firstDocInListTypeKey == $setKey )
      #set( $containerDoc = $firstDocInList )
    ## if the first item is not a set or component, then the baseline is of a filter
    ## and a meaningful parent is not available
    #else
      #set( $containerDoc = false )
    #end
##
  ## export from the project explorer
  #else
    #### Debug: Non-Baseline Mode
    #set( $docNode = $documentNodeDao.getDocumentNode(5, $documentList[0].document.id) )
    #set( $parentNode = $docNode.getParentNode())
    ## ## Debug: $parentNode.sequence
    ## if the parent is the projec, then assume the user exported from a baseline and forgot
    ## to select Baseline Mode, otherwise get the parent
    #if( $parentNode.globalSortOrder == 1000 )
      #if( $firstDocInListTypeKey == $cmpKey ||
           $firstDocInListTypeKey == $setKey )
        #set( $containerDoc = $firstDocInList )
      #else
        #set( $containerDoc = false )
      #end
    #else
      #set( $parentDoc = $docDao.getDocument($parentNode.refId) )
      #set( $parentTypeKey = $parentDoc.documentType.documentTypeKey )
      #### Debug: $parentTypeKey
      #if( $parentTypeKey == $cmpKey ||
           $parentTypeKey == $setKey )
        #set( $containerDoc = $parentDoc )
      #else
        #set( $containerDoc = false )
      #end
    #end
  #end
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getDocumentRev                                                          
##          Creates: $documentRev - string: name of the baseline that exists on all items with an asterisk if some items 
##                   have changed since the most recent baseline
##                   $baselineId - number: ID of the identified baseline (only 1, even if the items are all in multiple)
#########################################################################################################################
#macro( getDocumentRev )
  ## Build List of all baselines on active items
  #set( $baselineList = [] )
  #set( $baselineId = false )
  #foreach( $vDoc in $documentList )
    #set( $doc = $vDoc.document)
    #set( $docVersion = $versionDao.getVersionByDocumentId($doc.id) )
    #set( $docBaselines = $docVersion.baseLines )
    #foreach( $baseline in $sortTool.sort($docBaselines, "id:desc") )
      ##if( !$baseline.name.contains("Review") && !$baseline.name.contains("REVIEW") )
      #set( $addBaseline = true )
      #foreach( $knownBaseline in $baselineList )
        #if( $knownBaseline.id == $baseline.id ) 
          #set( $addBaseline = false )
        #end
      #end
      #if( $addBaseline )
        #if( $baselineList.add( {"id":$baseline.id, "name":$baseline.name} ) ) #end
      #end
      ##end
    #end
  #end
##
  ##Determine which, if any, baseline exists on all items
  #set( $baselinesOnAllItemsList = [] )
  #foreach( $baseline in $baselineList )
    #set( $baselineOnAllItems = true )
    #foreach( $vDoc in $documentList )
      #set( $doc = $vDoc.document)
      #set( $docVersion = $versionDao.getVersionByDocumentId($doc.id) )
      #set( $docBaselines = $docVersion.baseLines )
      #set( $baselineOnItem = false )
      #foreach( $docBaseline in $docBaselines )
        #if( $docBaseline.id == $baseline.id )
          #set( $baselineOnItem = true )
          #break
        #end
      #end
      #if( !$baselineOnItem )
        #set( $baselineOnAllItems = false )
        #break
      #end
    #end
    #if( $baselineOnAllItems )
      #if( $baselinesOnAllItemsList.add( $baseline ) ) #end
    #end
  #end
##
  ## Determine the Revision info to display
  #if( $baselinesOnAllItemsList.size() > 0 )
    #foreach( $baseline in $baselinesOnAllItemsList )
      #if( $foreach.first )
        #set( $documentRev = $baseline.name )
        #set( $baselineId = $baseline.id )
      #else
        #set( $documentRev = "$documentRev, $baseline.name" )
      #end
    #end
  #elseif( $baselineList.size() > 0 )
    #set( $documentRev = "$baselineList[0].name*" )
    ##set( $baselineId = $baselineList[0].id )
  #else
    #set( $documentRev = "N/A" )
  #end
##
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getBaselineRelationships
##          Input: $orginDocId - ID of a current item
##                 $baselineId - ID of a baseline   
##                 $inDoc - current item
##                 $inDownstream - true provides downstream relationships, false provides upstream relationships    
##          Creates: $returnBaselineRels list of upstream Or downstream baseline relationships 
#########################################################################################################################
#macro( getBaselineRelationships $orginDocId $baselineId $inDoc $inDownstream )
  #set( $start = 0 )
  #set( $count = 20 )
  #set( $versionedRelationships = [] )
  #set( $returnBaselineRels = [])
  #set( $pageSize = 20)
  #set( $relatedIds = [] )
  ##
  #set($baseRelsPage = $velocityServiceWrapper.getRelationships($orginDocId,$baselineId,$start,$count))
  ##
  #set( $totalRels = [])
  #set( $totalRels = $baseRelsPage.getPageInfo().getTotalResults())
  ##DEBUG Baseline Page Info: $baseRelsPage.getPageInfo() <br><br>
  ##DEBUG Baseline Relationship Count: $baseRelsPage.getPageInfo().getTotalResults()<br><br>
  ##DEBUG Baseline Results: $baseRelsPage.getResults() 

  #if( $totalRels && $totalRels > 0)
    #set( $page_count = $mathTool.floor($mathTool.div($totalRels,$pageSize)) )
    #foreach( $page in [0..$page_count])
      #set( $baseRelsPage = $velocityServiceWrapper.getRelationships($orginDocId,$baselineId,$start,$count))
      #set( $baseRelsPageResults = $baseRelsPage.getResults())

      #if( $baseRelsPageResults )
       #set( $success = $versionedRelationships.addAll($baseRelsPageResults ))
      #end 

      #set( $start = $start + $count)

    #end
  #end
  ##
  #foreach( $versionedRelationship in $versionedRelationships )
    #if( $inDownstream ) ## Get Downstream Relationships
      #set( $upItemId = $versionedRelationship.getFromItem().getValue().get(0) )
      #set( $upItemVersion = $versionedRelationship.getFromItem().getValue().get(1) )
      #set( $upDoc = $documentSource.getItem($upItemId, $upItemVersion) ) ## necessary to get by version

      #if( $inDoc.id == $upItemId ) 
        #set( $dnItemId = $versionedRelationship.getToItem().getValue().get(0) )
        #set( $dnItemVersion = $versionedRelationship.getToItem().getValue().get(1) )
        #set( $dnDoc = $velocityServiceWrapper.getItem($dnItemId, $dnItemVersion) )
        #if( !$relatedIds.contains($dnDoc.id) )
          #set( $success = $relatedIds.add($dnDoc.id) )
          #set( $success = $returnBaselineRels.add( {"fromDocument":$inDoc,"toDocument":$dnDoc} ) )
        #end
      #end 

    #else
      #set( $dnItemId = $versionedRelationship.getToItem().getValue().get(0) )
      #set( $dnItemVersion = $versionedRelationship.getToItem().getValue().get(1) )
      #set( $dnDoc = $documentSource.getItem($dnItemId, $dnItemVersion) ) ## necessary to get by version

      #if( $inDoc.id == $dnDoc.id ) ## Get Upstream Relationships
        #set( $upItemId = $versionedRelationship.getFromItem().getValue().get(0) )
        #set( $upItemVersion = $versionedRelationship.getFromItem().getValue().get(1) )
        #set( $upDoc = $documentSource.getItem($upItemId, $upItemVersion) )
        #if( !$relatedIds.contains( $upDoc.id) )
          #set( $success = $relatedIds.add( $upDoc.id) )
          #set( $success = $returnBaselineRels.add( {"fromDocument":$upDoc,"toDocument":$inDoc} ) )
        #end
      #end

    #end 
  #end

#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getRelationships
##          Inputs: $baselineMode - GLOBAL, tells the report if the export was from a baseline or not 
##                  $baselineId - GLOBAL, ID of a baseline       
##                  $inDoc - current item
##                  $inDownstream - true provides downstream relationships, false provides upstream relationships
##          Creates: $returnRels - list of relationships with sub-elements of "fromItem" and "toItem" each of type 
##                   item
#########################################################################################################################
#macro( getRelationships $inDoc $inDownstream $baselineId)
  #set( $returnRels = [] )

  #if( $baselineMode && $baselineId )
      #set( $currentVersion = $inDoc.currentVersion )
      #set( $orginDocId = $currentVersion.originDocument.id )
      #getBaselineRelationships( $orginDocId, $baselineId, $inDoc, $inDownstream ) ## Creates $returnBaselineRels
      ##DEBUG $returnBaselineRels
      #set( $returnRels = $returnBaselineRels )
  #else

    #set( $rels = [] )
    #set ( $rels = $relDao.getRelationshipsForDocument($inDoc.id, $inDownstream) )
    #foreach( $rel in $rels )
      #if( $inDownstream )  ## Get Downstream Relationships
        #if ( $rel.toDocument.active )
          #set( $success = $returnRels.add( $rel ) )
        #end
      #else                 ## Get Upstream Relationships
        #if ( $rel.fromDocument.active )
          #set( $success = $returnRels.add( $rel ) )
        #end
      #end
    #end
  #end
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getDate
##          Input: Java Time Zone ID to determine which timezone to display the date in
##          Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDate $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  #set( $date = $dateTool.format( 'MM/dd/yyyy', $inputDate, $locale, $outTz ))
  $!date
#end
#########################################################################################################################
##          Macro: getDateTime
##          Input: Java Time Zone ID to determine which timezone to display the date in
##          Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDateTime $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  #set( $dateTime = $dateTool.format( 'MM/dd/yyyy hh:mm a', $inputDate, $locale, $outTz ))
  $!dateTime
#end
#########################################################################################################################
##          Macro: getHierarchyLevel
##          Input: $doc - document object
##                 $baselineMode - true: export was from a baseline, false: export was from the project
##                 $baselineId   - ID of the baseline that the items are part of, if in baseline mode
##          Output: $hierarchyLevel - number, which heading level this item is in Jama relative to the container
#########################################################################################################################
#macro( getHierarchyLevel $doc $baselineMode $baselineId )
  #set( $seqSubStrings = [] )
  #set( $hierarchyLevel = 1)
  ## Get hierarchy from the baseline
  #if( $baselineMode )
    #set( $docNodeItem = $documentNodeDao.getDocumentNode(5, $doc.id))
    #set( $docNode = $documentNodeDao.getDocumentNodeForBaseLine(5, $docNodeItem.refId, $baselineId))
  ## Get hierarchy from the project
  #else
    #set( $docNode = $documentNodeDao.getDocumentNode(5, $doc.id))
  #end
  ##Debug: $docNode
  #set( $seqSubStrings = $docNode.sequence.split("\."))
  ##Debug: $seqSubStrings
  #set( $hierarchyLevel = $seqSubStrings.size())
  #if( !$hierarchyLevelTop )
    #set($hierarchyLevelTop = $hierarchyLevel)
  #end
  #set($hierarchyLevel = $hierarchyLevel - $hierarchyLevelTop + 1)
#end
#########################################################################################################################
##          Macro: getStatus
##          Input: $doc - document object
##          Output: $docStatus - status of the item
#########################################################################################################################
#macro( getStatus $doc )
  #set( $docStatus = false )
  #foreach( $docTypeField in $doc.documentType.documentTypeFields )
    #if( $docTypeField.documentField.name == "status" )
      #set ( $docStatus = $doc.status.name )
      #break
    #end
  #end
#end
#########################################################################################################################
##          Macro: getObjectType
##          Input: $doc - document object
##          Output: $docObjectType - value of object_type
#########################################################################################################################
#macro( getObjectType $doc )
  #set( $docObjectType = false )
  #foreach( $docTypeField in $doc.documentType.documentTypeFields )
    #if( $docTypeField.documentField.name == $objectTypeField )
      #set ( $docObjectType = $velocityReportUtil.getValueForField($doc, $objectTypeField, $dateFormat ) )
      #break
    #end
  #end
#end
#########################################################################################################################
##                         Macro: Returns a source string from a description                                         ###
##                          @sText - string: string you searching                                                     ###
##                          @return - array: an array of image sources (url)                                          ###
#########################################################################################################################
#macro( findSourceMHTML $sText )
  #set( $findSourceMHTMLReturn = [])
  #set( $lastImageIndex = $sText.lastIndexOf("<img"))  ##>             
  #set( $startCheck = $sText.indexOf("<img")) ##>  
  #foreach( $x in [$startCheck..$lastImageIndex])
    #if( $x == $sText.indexOf( "<img", $x))  ##>
      #set($end = $sText.indexOf(">", $mathTool.toInteger($x)))
      #set( $imgString = ( $sText.substring( $mathTool.toInteger($x), $mathTool.toInteger($end))))
      #### Debug: $imgString

      #set( $srcStart = $imgString.indexOf("src="))
      #if( $srcStart > -1)
        #set( $srcStart = $srcStart + 5)
        #set( $srcEnd = $imgString.indexOf('"', $srcStart))
        #set($imgSrc = $imgString.substring( $srcStart, $srcEnd ))
        #set($imgSrc = $imgSrc.replaceAll("\?dpi.*$", ""))
        #if( $imgString.indexOf( $baseUrl) > -1 && $imgString.indexOf( "blob:http") == -1)
          #set( $success = $findSourceMHTMLReturn.add( $imgSrc))
        #end
      #end 
    #end
  #end
#end
#########################################################################################################################
##                     Macro: Returns a source with a new cid and appends the base64 image to the end of the file    ###
##                      @sText - array: string of source                                                              ###
##                      @return - array: returns an array of strings of the new image src                             ###
#########################################################################################################################
#macro( imageArrayMTHML $sText )      
  #set( $imageArrayMHTMLReturn = [])
  #set( $imageSizeArrayMHTMLReturn = [])
  #set( $imageBase64ArrayHTMLReturn = [])
  ## Define a figure array if none exists (first image in the doc)
  #if( !$figure ) #set( $figure = [] ) #end
  ## Define a files array if none exists (first image in the doc)
  #if( !$files ) #set( $files = [] ) #end
  ##$return.clear()
  ##set( $sourceArray = [])
  ##SText: $sText<br>
  #foreach( $s in $sText)  
  ##SOURCE: $s, BASEURL: $baseUrl<br>
    #if( $s.indexOf( $baseUrl) > -1)
      #set( $srcEnd = $s.indexOf("attachment/"))
      #if ( $srcEnd < 0 )
        #set( $srcEnd = $s.indexOf("diagram/"))
        #set( $attStart = $srcEnd + 8)
      #else
        #set( $attStart = $srcEnd + 11)
      #end
      #set( $attEnd = $s.indexOf( "/", $attStart))
      #set( $attachmentId = $s.substring( $attStart, $attEnd))
      ##Att. id: $attachmentId<br>
      ##Get file extension
      #set( $fileExtStart = $s.indexOf( ".", $attEnd))
      #set( $fileExtStart = $fileExtStart + 1)
      #set( $fileExt = $s.substring( $fileExtStart, $s.length()))
      #set( $f = "JAMA_IMG_")
      #set( $f = $f.concat($attachmentId))
      #set( $f = $f.concat("."))
      #set( $f = $f.concat($fileExt))
      #set( $file = '<o:File HRef="')
      #set( $file = $file.concat( $f))
      #set( $file = $file.concat('"/>'))
      #if( $files.add( $file)) #end
      #set( $jama_cid = $f)
      #set( $newSourceLink = "cid:")
      #set( $newSourceLink = $newSourceLink.concat( $jama_cid))
      #if( $figure.add( $boundaryString)) #end
      #set( $img_jama_cid = "Content-ID: ")
      #set( $img_jama_cid = $img_jama_cid.concat( $jama_cid))
      #if( $figure.add( $img_jama_cid)) #end
      #if( $figure.add( "Content-Transfer-Encoding: base64 ")) #end
      #set( $contentType =  "Content-Type: image/")
      #set( $contentType = $contentType.concat($fileExt))
      #if( $figure.add( $contentType)) #end
      #if( $figure.add( "")) #end
      #set( $base64Fig = $attachmentService.getBase64Image( $mathTool.toInteger( $attachmentId)))
##
      ## if this a PNG, get the size
      #if( $base64Fig.substring(0, 16) == "iVBORw0KGgoAAAAN")
        #set( $base64ImageHeader = $base64Fig.substring(16, 32) )
        
        #set( $binaryImageHeader = "")
        #foreach( $i in [0..15] )
          #set( $j = $i + 1 )
          #set( $value = $base64ImageHeader.substring($i, $j) )
          ##$value
          #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
          #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
          #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
          #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
          #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
          #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
          #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
          #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
          #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
          #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
          #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
          #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
          #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
          #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
          #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
          #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
          #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
          #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
          #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
          #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
          #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
          #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
          #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
          #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
          #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
          #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
          #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
          #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
          #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
          #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
          #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
          #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
          #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
          #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
          #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
          #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
          #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
          #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
          #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
          #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
          #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
          #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
          #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
          #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
          #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
          #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
          #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
          #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
          #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
          #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
          #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
          #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
          #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
          #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
          #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
          #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
          #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
          #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
          #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
          #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
          #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
          #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
          #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
          #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
        #end
        ##IMAGE HEADER: $binaryImageHeader
        #set( $width = $mathTool.toInteger($binaryImageHeader.substring(32, 33)) * 2147483648 +
                       $mathTool.toInteger($binaryImageHeader.substring(33, 34)) * 1073741824 +
                       $mathTool.toInteger($binaryImageHeader.substring(34, 35)) * 536870912 +
                       $mathTool.toInteger($binaryImageHeader.substring(35, 36)) * 268435456 +
                       $mathTool.toInteger($binaryImageHeader.substring(36, 37)) * 134217728 +
                       $mathTool.toInteger($binaryImageHeader.substring(37, 38)) * 67108864 +
                       $mathTool.toInteger($binaryImageHeader.substring(38, 39)) * 33554432 +
                       $mathTool.toInteger($binaryImageHeader.substring(39, 40)) * 16777216 +
                       $mathTool.toInteger($binaryImageHeader.substring(40, 41)) * 8388608 +
                       $mathTool.toInteger($binaryImageHeader.substring(41, 42)) * 4194304 +
                       $mathTool.toInteger($binaryImageHeader.substring(42, 43)) * 2097152 +
                       $mathTool.toInteger($binaryImageHeader.substring(43, 44)) * 1048576 +
                       $mathTool.toInteger($binaryImageHeader.substring(44, 45)) * 524288 +
                       $mathTool.toInteger($binaryImageHeader.substring(45, 46)) * 262144 +
                       $mathTool.toInteger($binaryImageHeader.substring(46, 47)) * 131072 +
                       $mathTool.toInteger($binaryImageHeader.substring(47, 48)) * 65536 +
                       $mathTool.toInteger($binaryImageHeader.substring(48, 49)) * 32768 +
                       $mathTool.toInteger($binaryImageHeader.substring(49, 50)) * 16384 +
                       $mathTool.toInteger($binaryImageHeader.substring(50, 51)) * 8192 +
                       $mathTool.toInteger($binaryImageHeader.substring(51, 52)) * 4096 +
                       $mathTool.toInteger($binaryImageHeader.substring(52, 53)) * 2048 +
                       $mathTool.toInteger($binaryImageHeader.substring(53, 54)) * 1024 +
                       $mathTool.toInteger($binaryImageHeader.substring(54, 55)) * 512 +
                       $mathTool.toInteger($binaryImageHeader.substring(55, 56)) * 256 +
                       $mathTool.toInteger($binaryImageHeader.substring(56, 57)) * 128 +
                       $mathTool.toInteger($binaryImageHeader.substring(57, 58)) * 64 +
                       $mathTool.toInteger($binaryImageHeader.substring(58, 59)) * 32 +
                       $mathTool.toInteger($binaryImageHeader.substring(59, 60)) * 16 +
                       $mathTool.toInteger($binaryImageHeader.substring(60, 61)) * 8 +
                       $mathTool.toInteger($binaryImageHeader.substring(61, 62)) * 4 +
                       $mathTool.toInteger($binaryImageHeader.substring(62, 63)) * 2 +
                       $mathTool.toInteger($binaryImageHeader.substring(63, 64)) * 1 )
        #set( $height = $mathTool.toInteger($binaryImageHeader.substring(64, 65)) * 2147483648 +
                       $mathTool.toInteger($binaryImageHeader.substring(65, 66)) * 1073741824 +
                       $mathTool.toInteger($binaryImageHeader.substring(66, 67)) * 536870912 +
                       $mathTool.toInteger($binaryImageHeader.substring(67, 68)) * 268435456 +
                       $mathTool.toInteger($binaryImageHeader.substring(68, 69)) * 134217728 +
                       $mathTool.toInteger($binaryImageHeader.substring(69, 70)) * 67108864 +
                       $mathTool.toInteger($binaryImageHeader.substring(70, 71)) * 33554432 +
                       $mathTool.toInteger($binaryImageHeader.substring(71, 72)) * 16777216 +
                       $mathTool.toInteger($binaryImageHeader.substring(72, 73)) * 8388608 +
                       $mathTool.toInteger($binaryImageHeader.substring(73, 74)) * 4194304 +
                       $mathTool.toInteger($binaryImageHeader.substring(74, 75)) * 2097152 +
                       $mathTool.toInteger($binaryImageHeader.substring(75, 76)) * 1048576 +
                       $mathTool.toInteger($binaryImageHeader.substring(76, 77)) * 524288 +
                       $mathTool.toInteger($binaryImageHeader.substring(77, 78)) * 262144 +
                       $mathTool.toInteger($binaryImageHeader.substring(78, 79)) * 131072 +
                       $mathTool.toInteger($binaryImageHeader.substring(79, 80)) * 65536 +
                       $mathTool.toInteger($binaryImageHeader.substring(80, 81)) * 32768 +
                       $mathTool.toInteger($binaryImageHeader.substring(81, 82)) * 16384 +
                       $mathTool.toInteger($binaryImageHeader.substring(82, 83)) * 8192 +
                       $mathTool.toInteger($binaryImageHeader.substring(83, 84)) * 4096 +
                       $mathTool.toInteger($binaryImageHeader.substring(84, 85)) * 2048 +
                       $mathTool.toInteger($binaryImageHeader.substring(85, 86)) * 1024 +
                       $mathTool.toInteger($binaryImageHeader.substring(86, 87)) * 512 +
                       $mathTool.toInteger($binaryImageHeader.substring(87, 88)) * 256 +
                       $mathTool.toInteger($binaryImageHeader.substring(88, 89)) * 128 +
                       $mathTool.toInteger($binaryImageHeader.substring(89, 90)) * 64 +
                       $mathTool.toInteger($binaryImageHeader.substring(90, 91)) * 32 +
                       $mathTool.toInteger($binaryImageHeader.substring(91, 92)) * 16 +
                       $mathTool.toInteger($binaryImageHeader.substring(92, 93)) * 8 +
                       $mathTool.toInteger($binaryImageHeader.substring(93, 94)) * 4 +
                       $mathTool.toInteger($binaryImageHeader.substring(94, 95)) * 2 +
                       $mathTool.toInteger($binaryImageHeader.substring(95, 96)) * 1 )
        #if( $imageSizeArrayMHTMLReturn.add( {"width":$width, "height":$height}) ) #end
      #elseif( $fileExt == "svg" || $fileExt == "SVG" )
        #set( $binaryImageHeader = "")
        #foreach( $i in [0..2000] )
          #set( $j = $i + 1 )
          #set( $value = $base64Fig.substring($i, $j) )
          ##$value
          #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
          #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
          #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
          #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
          #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
          #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
          #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
          #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
          #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
          #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
          #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
          #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
          #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
          #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
          #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
          #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
          #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
          #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
          #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
          #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
          #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
          #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
          #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
          #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
          #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
          #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
          #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
          #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
          #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
          #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
          #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
          #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
          #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
          #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
          #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
          #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
          #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
          #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
          #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
          #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
          #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
          #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
          #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
          #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
          #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
          #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
          #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
          #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
          #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
          #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
          #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
          #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
          #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
          #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
          #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
          #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
          #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
          #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
          #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
          #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
          #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
          #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
          #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
          #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
        #end
        ##IMAGE HEADER: $binaryImageHeader
        #set( $byteCount = $binaryImageHeader.length() / 8 -  1 )
        #set( $ascii = "" )
        #foreach( $byte in [0..$byteCount] )
          #set( $i = $byte * 8)
          #set( $j = $i + 8 )
          #set( $value = $binaryImageHeader.substring($i, $j) )
          #if( $value == "00100000") #set($ascii = "${ascii} ")
          #elseif( $value == "00100001") #set($ascii = "${ascii}!")
          #elseif( $value == "00100010") #set($ascii = "${ascii}$escapeTool.getQuote()")
          #elseif( $value == "00100011") #set($ascii = "${ascii}#")
          #elseif( $value == "00100100") #set($ascii = "${ascii}$")
          #elseif( $value == "00100101") #set($ascii = "${ascii}%")
          #elseif( $value == "00100110") #set($ascii = "${ascii}&")
          #elseif( $value == "00100111") #set($ascii = "${ascii}'")
          #elseif( $value == "00101000") #set($ascii = "${ascii}(")
          #elseif( $value == "00101001") #set($ascii = "${ascii})")
          #elseif( $value == "00101010") #set($ascii = "${ascii}*")
          #elseif( $value == "00101011") #set($ascii = "${ascii}+")
          #elseif( $value == "00101100") #set($ascii = "${ascii},")
          #elseif( $value == "00101101") #set($ascii = "${ascii}-")
          #elseif( $value == "00101110") #set($ascii = "${ascii}.")
          #elseif( $value == "00101111") #set($ascii = "${ascii}/")
          #elseif( $value == "00110000") #set($ascii = "${ascii}0")
          #elseif( $value == "00110001") #set($ascii = "${ascii}1")
          #elseif( $value == "00110010") #set($ascii = "${ascii}2")
          #elseif( $value == "00110011") #set($ascii = "${ascii}3")
          #elseif( $value == "00110100") #set($ascii = "${ascii}4")
          #elseif( $value == "00110101") #set($ascii = "${ascii}5")
          #elseif( $value == "00110110") #set($ascii = "${ascii}6")
          #elseif( $value == "00110111") #set($ascii = "${ascii}7")
          #elseif( $value == "00111000") #set($ascii = "${ascii}8")
          #elseif( $value == "00111001") #set($ascii = "${ascii}9")
          #elseif( $value == "00111010") #set($ascii = "${ascii}:")
          #elseif( $value == "00111011") #set($ascii = "${ascii};")
          #elseif( $value == "00111100") #set($ascii = "${ascii}<")
          #elseif( $value == "00111101") #set($ascii = "${ascii}=")
          #elseif( $value == "00111110") #set($ascii = "${ascii}>")
          #elseif( $value == "00111111") #set($ascii = "${ascii}?")
          #elseif( $value == "01000000") #set($ascii = "${ascii}@")
          #elseif( $value == "01000001") #set($ascii = "${ascii}A")
          #elseif( $value == "01000010") #set($ascii = "${ascii}B")
          #elseif( $value == "01000011") #set($ascii = "${ascii}C")
          #elseif( $value == "01000100") #set($ascii = "${ascii}D")
          #elseif( $value == "01000101") #set($ascii = "${ascii}E")
          #elseif( $value == "01000110") #set($ascii = "${ascii}F")
          #elseif( $value == "01000111") #set($ascii = "${ascii}G")
          #elseif( $value == "01001000") #set($ascii = "${ascii}H")
          #elseif( $value == "01001001") #set($ascii = "${ascii}I")
          #elseif( $value == "01001010") #set($ascii = "${ascii}J")
          #elseif( $value == "01001011") #set($ascii = "${ascii}K")
          #elseif( $value == "01001100") #set($ascii = "${ascii}L")
          #elseif( $value == "01001101") #set($ascii = "${ascii}M")
          #elseif( $value == "01001110") #set($ascii = "${ascii}N")
          #elseif( $value == "01001111") #set($ascii = "${ascii}O")
          #elseif( $value == "01010000") #set($ascii = "${ascii}P")
          #elseif( $value == "01010001") #set($ascii = "${ascii}Q")
          #elseif( $value == "01010010") #set($ascii = "${ascii}R")
          #elseif( $value == "01010011") #set($ascii = "${ascii}S")
          #elseif( $value == "01010100") #set($ascii = "${ascii}T")
          #elseif( $value == "01010101") #set($ascii = "${ascii}U")
          #elseif( $value == "01010110") #set($ascii = "${ascii}V")
          #elseif( $value == "01010111") #set($ascii = "${ascii}W")
          #elseif( $value == "01011000") #set($ascii = "${ascii}X")
          #elseif( $value == "01011001") #set($ascii = "${ascii}Y")
          #elseif( $value == "01011010") #set($ascii = "${ascii}Z")
          #elseif( $value == "01011011") #set($ascii = "${ascii}[")
          #elseif( $value == "01011100") #set($ascii = "${ascii}$escapeTool.getBackslash()")
          #elseif( $value == "01011101") #set($ascii = "${ascii}]")
          #elseif( $value == "01011110") #set($ascii = "${ascii}^")
          #elseif( $value == "01011111") #set($ascii = "${ascii}_")
          #elseif( $value == "01100000") #set($ascii = "${ascii}`")
          #elseif( $value == "01100001") #set($ascii = "${ascii}a")
          #elseif( $value == "01100010") #set($ascii = "${ascii}b")
          #elseif( $value == "01100011") #set($ascii = "${ascii}c")
          #elseif( $value == "01100100") #set($ascii = "${ascii}d")
          #elseif( $value == "01100101") #set($ascii = "${ascii}e")
          #elseif( $value == "01100110") #set($ascii = "${ascii}f")
          #elseif( $value == "01100111") #set($ascii = "${ascii}g")
          #elseif( $value == "01101000") #set($ascii = "${ascii}h")
          #elseif( $value == "01101001") #set($ascii = "${ascii}i")
          #elseif( $value == "01101010") #set($ascii = "${ascii}j")
          #elseif( $value == "01101011") #set($ascii = "${ascii}k")
          #elseif( $value == "01101100") #set($ascii = "${ascii}l")
          #elseif( $value == "01101101") #set($ascii = "${ascii}m")
          #elseif( $value == "01101110") #set($ascii = "${ascii}n")
          #elseif( $value == "01101111") #set($ascii = "${ascii}o")
          #elseif( $value == "01110000") #set($ascii = "${ascii}p")
          #elseif( $value == "01110001") #set($ascii = "${ascii}q")
          #elseif( $value == "01110010") #set($ascii = "${ascii}r")
          #elseif( $value == "01110011") #set($ascii = "${ascii}s")
          #elseif( $value == "01110100") #set($ascii = "${ascii}t")
          #elseif( $value == "01110101") #set($ascii = "${ascii}u")
          #elseif( $value == "01110110") #set($ascii = "${ascii}v")
          #elseif( $value == "01110111") #set($ascii = "${ascii}w")
          #elseif( $value == "01111000") #set($ascii = "${ascii}x")
          #elseif( $value == "01111001") #set($ascii = "${ascii}y")
          #elseif( $value == "01111010") #set($ascii = "${ascii}z")
          #elseif( $value == "01111011") #set($ascii = "${ascii}{")
          #elseif( $value == "01111100") #set($ascii = "${ascii}|")
          #elseif( $value == "01111101") #set($ascii = "${ascii}}")
          #elseif( $value == "01111110") #set($ascii = "${ascii}~") #end
        #end
        #set( $height = $ascii.replaceAll('(?s).*?<svg.*?height="(\d*).*?".*?>','$1') )
        #set( $width = $ascii.replaceAll('(?s).*?<svg.*?width="(\d*).*?".*?>','$1') )
        #if( $imageSizeArrayMHTMLReturn.add( {"width":$width, "height":$height}) ) #end
      #else
        #if( $imageSizeArrayMHTMLReturn.add( {"width":false, "height":false}) ) #end
      #end
      #if( $figure.add( $base64Fig)) #end
      #if( $figure.add( "")) #end
      #if( $base64Fig )
        #set( $imageData = "data:image/" )
        #set( $imageData = $imageData.concat($fileExt) )
        #set( $imageData = $imageData.concat(";base64, ") )
        #set( $imageData = $imageData.concat($base64Fig) )
      #else
        #set( $imageData = "" )
      #end
      #if( $imageBase64ArrayHTMLReturn.add( $imageData)) #end
    #else ##Return the same source
      #set( $newSourceLink = "")
    #end
    #if( $imageArrayMHTMLReturn.add( $newSourceLink)) #end
  #end
#end
##                                                                                                               
#########################################################################################################################
##                  Macro: DOC format Convert Figures to Word shapes, resize and format considering img location      ###
##                         PDF format Convert Figures to base66, resize, and format considering img location          ###
##                         $input - string: string passed to the macro containing img tags                            ###
##                         $maxWidth - number: maximum allowed width of images, resize if greater                     ###
##                         Returns string with images converted to base64                                             ###
##                  Sub-macros by format:                                                                             ### 
##                        #formatEquation_DOC, #formatEquation_PDF                                                    ### 
##                        #formatImgInTable_DOC, #formatImgInTable_PDF                                                ### 
##                        #formatFigWithCaptions_DOC, #formatFigWithCaptions_PDF                                      ###         
##                        #formatImgWithOptionForCaptions_DOC, #formatImgWithOptionForCaptions_PDF (will              ###
##                        automatically include figure captions for all figures if $TOF_includeAllFigures is true     ### 
##                        so that all figures will be included in the TOF)                                            ### 
##                                                                                                                    ###
#########################################################################################################################
#macro( convertFigures $input $maxWidth )
  ## clear any previous values
  #set( $width = false )
  #set( $height = false )
  #set( $targetWidth = false )
  #set( $targetHeight = false )
##

  #if( !$maxPageHeight )
    #set($maxHeight = 575)
  #else
    #set($maxHeight = $maxPageHeight )
  #end

  ## Create the initial output string
  #set( $output = $input )
##
  ## process if there is at least one image tag in the string
  #if( $input.indexOf("<img") > -1 )
##
    ## Create a list of all image Urls in the string
    #findSourceMHTML( $input )
    #set( $imgUrls = $findSourceMHTMLReturn)
    #### Debug imgUrls: $imgUrls
##
    ## Embedded each image in the MTHML output, create a list of the sources
    ## and create a list of the image sizes for PNG images
    #imageArrayMTHML( $imgUrls )
    #set( $imgSources = $imageArrayMHTMLReturn )
    #set( $imageSizes = $imageSizeArrayMHTMLReturn )
    #set( $imageBase64s = $imageBase64ArrayHTMLReturn )

    #### Debug imgSources: $imgSources

    ## For each identified image
    ## 	- 'doc' format replace the HTML img tag with Word Shape 
    ## 	- 'pdf' format replace the HTML img tag with base64

    #foreach( $imgSource in $imgSources)
		#set( $imgIndex = $foreach.index )

		## if the image is not already base64 encoded
		#if( $imgUrls.get($imgIndex).indexOf(";base64") == -1 )
		## Locate the position of this image
			#set( $sourcePosition = $input.indexOf($imgUrls.get($imgIndex)) )
			#set( $inputStart = $input.lastIndexOf("<img", $sourcePosition) )
			#set( $inputEnd = $input.indexOf(">", $sourcePosition) )
			#if( $inputStart > -1 && $inputEnd > -1 )
			    #set( $inputImage = "" )
			    #set( $inputImage = $input.substring($inputStart, $inputEnd) )
			##
				## Determine the size of the image stored in HTML
				#if( $inputImage.indexOf( "height=") > -1 && $inputImage.indexOf( "width=") > -1)
					#set($height = $inputImage.replaceAll('(?s).*?height="([0-9]*)".*','$1'))
					#set($width = $inputImage.replaceAll('(?s).*?width="([0-9]*)".*','$1'))
					## If no image size is found in HTML, use the image size extracted directly from the image
					## Only works for PNGs. Non-PNGs return a height and width of false
				#elseif( $imageSizes.size() > $imgIndex )
					#set( $height = $imageSizes.get($imgIndex).height )
					#set( $width = $imageSizes.get($imgIndex).width )
				#end
			  	#### Debug: width=$width, height=$height
			##
			  
			  ## if a hight and width are known, resize the image appropriately
			  	#if( $height && $width )
					## Adjust extracted values from px to pt to accuratly compare to max page dimensions: ((1px = 1/96th of 1in) - (1pt = 1/72 of 1in))
					#set( $widthInt = $mathTool.toNumber($width) * 0.75 )
					#set( $heightInt = $mathTool.toNumber($height) * 0.75)
					#### Debug: $widthInt x $heightInt
					##
					#set ($aspectRatio = 1.5)
					#set ($aspectRatio = $mathTool.toDouble($widthInt) / $mathTool.toDouble($heightInt))
					#### Debug Aspect Ratio: $aspectRatio
					##
					## if the image is a formula created by Wiris and less than the max width, reduce the size to 75%
					#if( $input.indexOf("Wirisformula") > -1 && $widthInt <= $maxWidth )
					    #set( $targetWidth = $mathTool.mul($widthInt, 0.75) )
					    #set( $targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio) )
					##
					## if the image is higher than allowed, resize
					#elseif( $heightInt > $maxHeight )
					    #set ($targetHeight = $maxHeight)
					    #set ($targetWidth = $mathTool.mul($mathTool.toNumber($targetHeight), $aspectRatio))
					##
					  ## if the image is still wider than allowed, resize again
					    #if( $targetWidth > $maxWidth )
					        #set ($targetWidth = $maxWidth)
					        #set ($targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio))
					    #end
					##
					## if the image is wider than allowed, resize
					#elseif( $widthInt > $maxWidth )
					  	#set ($targetWidth = $maxWidth)
					  	#set ($targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio))
					##
					  ## if the image is still higher than allowed, resize again
					  	#if( $targetHeight > $maxHeight )
					    	#set ($targetHeight = $maxHeight)
					    	#set ($targetWidth = $mathTool.mul($mathTool.toNumber($targetHeight), $aspectRatio))
					  	#end
					#else
					  	#set ($targetWidth = $widthInt)
					  	#set ($targetHeight = $heightInt)
					#end

				#else
					## if no height and width found set to 1/2 max expecting a 4:3 ratio
					## PDF has auto responsive heights and therefore needs only the targetWidth, but Word shapes must have a both edge values
					#set( $targetWidth = 234 )
					#set( $targetHeight = 176 )
				#end      

				## find string for use in final replace all
				#set( $find = "(?s)<img{^>}*?$imgUrls.get($imgIndex){^>}*?>" )
				#set( $find = $find.replaceAll("\/", "\\/") )
				#set( $find = $find.replaceAll("\{", "[") )
				#set( $find = $find.replaceAll("\}", "]") )
				
				##Debug find: $find <br>

			    #######################################################################################
				## Find Img Location 
				##             - utilize $find to determine img position in rich text to ensure proper
				##               replacement format  
				#######################################################################################
				#set( $imgInTable = false )
				#set( $imgInFigure = false)
				#set( $isImgInTable = $input )
				#set( $isImgInFig = $input )
				
  				#set( $isImgInTable = $isImgInTable.replaceAll( "<td.*?>.*?$find.*?<\/td>", "[imgInTable]"))
				
				#if( $isImgInTable.contains("[imgInTable]"))
					#set( $imgInTable = true )
				#else
					#set( $isImgInFig = $isImgInFig.replaceAll("<figure.*?>.*?$find", "[imgInFigTags]"))
					#if( $isImgInFig.contains( "[imgInFigTags]"))
						#set( $imgInFigure = true )   
					#end
				#end 
	
				#######################################################################################
				## Img Alignment 
				##             - utilize $find to locate alignment on the img and store it in $imgAlign
				#######################################################################################
				#set( $isThereAlignment = $input )
				#set( $imgAlign = $input )

				#if( $imgInFigure )
					#set( $isThereAlignment = $isThereAlignment.replaceAll("<(figure|div).*?(text-align|float):(\w*?).*?>.*?$find", "[align]"))
					#if( $isThereAlignment.contains("[align]"))
						#set( $imgAlign = $imgAlign.replaceAll("[^*]*?<(figure|div).*?(text-align|float):(\w*).*$find(?:.*)", "$3" ))
						#set( $imgAlign = $imgAlign.trim())
					#else
						#set( $imgAlign = 'left')
					#end 
				#else
					#set( $isThereAlignment = $isThereAlignment.replaceAll("<(p|div).*?(text-align:)(\w*?).*?>.*?$find", "[align]"))
					#if( $isThereAlignment.contains("[align]"))
						#set( $imgAlign = $imgAlign.replaceAll("[^*]*?<(p|div).*?text-align:(\w*).*$find(?:.*)", "$2" ))
						#set( $imgAlign = $imgAlign.trim())
					#else 
						#set( $imgAlign ='left')
					#end
				#end 

				#if( $format == 'pdf')
					#if( $imgAlign == 'center')
						#set( $imgAlignMargin = 'margin:auto !important;')
					#elseif( $imgAlign == 'right')
						#set( $imgAlignMargin = 'margin-left:auto !important;margin-right:0pt !important;')
					#else 
						#set( $imgAlignMargin = 'margin:0;')
					#end 
				#end 

				#######################################################################################
				## Figcaption Alignment
				##         - set the default alignment (Figcaptions in Jama are left aligned and unless
				##           an img is centered )
				#######################################################################################

				#if( $imgAlign == 'center')
					#set( $figCapAlign = 'center')
				#else 
					#set( $figCapAlign = 'center') ## Set default figCaption alignment here 
				#end 
				
				##DEBUG IMG ALIGN $imgAlign <br>

				#######################################################################################
				## Figcaption Content 
				##         - locate figcaption content on the img and store it in $figCaptionContent
				#######################################################################################
				#set( $figCaptionContent = $input)
				#set( $figCaptionContent = $figCaptionContent.replaceAll("\n|\t", ""))

				#if( $imgInFigure)
			      	#set( $figCaptionContent = $input.replaceAll("[^*]*?$find.*?(<figcaption.*?>)(.*?\s*?|.*\n*?|.*\t*?)(<\/figcaption>)(?:.*)", "$1$2$3"))

			      	#set( $figCaptionContent = $figCaptionContent.replaceAll("<\/figcaption>",""))
			      	#set( $figCaptionContent = $figCaptionContent.replaceAll("<figcaption>",""))
			    #end 

			    ## DEBUG FIG CAP CONTENT $figCaptionContent <br>

				#######################################################################################
				## - Word img and figcaption $replace handling: One of the following macros will 
				##			set $replace accordingly with the Word Shape $imgSource of that img.
				#######################################################################################
				#if( $format == "doc")

					#if( $find.contains("equation"))
						#formatEquation_DOC( $targetWidth $targetHeight $imgSource $imgAlign )

					#elseif( $imgInTable )
						#formatImgInTable_DOC( $targetWidth $targetHeight $imgSource )

					#elseif( $imgInFigure )
						#formatFigWithCaptions_DOC( $targetWidth $targetHeight $imgSource $imgAlign $figCapAlign $figCaptionContent )
						
					#else 				
						#formatImgWithOptionForCaptions_DOC( $targetWidth $targetHeight $imgSource $imgAlign $figCapAlign)

					#end 

				#######################################################################################
				## - PDF img and figcaption $replace handling: One of the following macros will 
				##		                  set $replace accordingly with the base64 of that img.
				#######################################################################################
				#elseif( $format == "pdf" || $format =='html') 
			    ## FOR BASELINE TO BASELINE COMPARE ALL IMGS OUTPUT TO TABLE FORMAT AS SUCH ##
					##if( $find.contains("equation"))
						##formatEquation_PDF( $imgIndex $targetWidth $imageBase64s $imgAlignMargin )
					
					##elseif( $imgInTable ) 
						#formatImgInTable_PDF( $imgIndex $targetWidth $imageBase64s ) 

					##elseif( $imgInFigure )
						##formatFigWithCaptions_PDF( $imgIndex $targetWidth $imageBase64s $imgAlignMargin $figCapAlign $figCaptionContent )
			
					##else 
						##formatImgWithOptionForCaptions_PDF( $imgIndex $targetWidth $imageBase64s $imgAlignMargin $figCapAlign )    

					##end 
				#end 
		   	
		        ########################################################################################
		        ## - Now that $replace is set with the proper replacement format, 
		        ##   it is utilized to officially $replace the img in the rich text $output string
		        ########################################################################################
		   		#if( $imgInFigure )
		   			#set( $output = $output.replaceAll( "(<figure.*?>|<div.*?>)(.*\s*?|.*\n*?|.*\t*?)($find.*?)(<figcaption.*?>)(.*?\s*?.*?\s*?)(<\/figcaption>)(.*\s*?|.*\n*?|.*\t*?)(<\/figure>|<\/div>)", "$3"))
		   			#set( $output = $output.replaceAll( $find, $replace))	
				#else
			        #set( $output = $output.replaceAll( $find, $replace ))
			    #end 
			    

        #end ##if( $inputStart > -1 && $inputEnd > -1 )
      #end 	##if( $imgUrls.get($imgIndex).indexOf(";base64") == -1 )
    #end  ##foreach( $imgSource in $imgSources)
  #end ##if( $input.indexOf("<img") > -1 )
  ##------------------------
  ##  Return String        #
  ##------------------------
  $output
#end
##
###################################################################################################################
##                                                                                                               ##
##  DOC Format Image Replace Macros ( Sub macros of #convertFigures )                                            ##
##  #formatEquation_DOC, #formatImgInTable_DOC, #formatFigWithCaptions_DOC, #formatImgWithOptionForCaptions_DOC  ## 
##  Return: $replace                                                                                             ##
##                                                                                                               ## 
###################################################################################################################
##--------------------------##  
##  formatEquation_DOC
##  - formats equation 
##--------------------------##  
#macro( formatEquation_DOC $targetWidth $targetHeight $imgSource $imgAlign)
	#set( $tableWidth = $targetWidth +50)
	#set( $equationRefNum = $equationRefNum +1)

	#set( $replace = "<table align=$imgAlign class='invisibleTableContainsFIGURE' border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;margin:0;width:${tableWidth};'><tr><td style='margin:0;text-align:right;'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--><span class=MsoCaption>eq. $equationRefNum</span></td></tr></table>")
#end 
#* If creating bookmark for caption, code to utilize:
<div align='$imgAlign' class=MsoCaption style='page-break-inside:avoid;'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--><span style='mso-tab-count:1'><a name='_FIG${$equationRefNum}''>eq.</a><span style='mso-spacerun:yes'></span><!--[if supportFields]><span style='mso-bookmark:_FIG${$equationRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_FIG${$equationRefNum}'><span style='mso-spacerun:yes'></span>SEQ Equation \* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_FIG${$equationRefNum}'><span style='mso-no-proof:yes'>$equationRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_FIG${$equationRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_FIG${$equationRefNum}'></span></span></p></div>
*#
##
##---------------------------------------------## 
##  formatImgInTable_DOC
##  - formats image ready to insert into table 
##---------------------------------------------## 
#macro( formatImgInTable_DOC $targetWidth $targetHeight $imgSource ) 

	#set( $replace = "<!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]-->" )
#end
## 
##---------------------------------------------## 
##  formatFigWithCaptions_DOC
##  - formats figure with figure captions
##---------------------------------------------## 
#macro( formatFigWithCaptions_DOC $targetWidth $targetHeight $imgSource $imgAlign $figCapAlign $figCaptionContent)

	#set( $tableWidth = $targetWidth +1)
	#set( $figureRefNum = $figureRefNum + 1)

  	#set( $replace = "<table align=$imgAlign class='invisibleTableContainsFIGURE' border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;margin:0'><tr><td style='text-align:center;width:${tableWidth}pt;margin:0;'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square;margin:0'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--><p class=MsoCaption style='margin-top:-10pt;text-align:$figCapAlign;'><a name='_FIG${figureRefNum}'>Figure </a><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_FIG${figureRefNum}'>SEQ Figure \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'><span style='mso-no-proof:yes'>$figureRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'></span> $figCaptionContent</p></td></tr></table>" )

#end 
##
##---------------------------------------------------------------------------------------------------------------------##
##  formatImgWithOptionForCaptions_DOC
##  1. considering img is not in fig tags w/ figcaptions, option to format img with captions and include in the TOF 
##     - consider another parameter that may store figcaption content whether utilizing the document name, a field, or 
##        extracted rich text content 
##---------------------------------------------------------------------------------------------------------------------##	
#macro( formatImgWithOptionForCaptions_DOC $targetWidth $targetHeight $imgSource $imgAlign $figCapAlign )
#set( $tableWidth = $targetWidth +1)

	#if( $TOF_includeAllFigures )
		
		## Add Figcaptions to All Images and Include in the TOF ##  
		#set( $figureRefNum = $figureRefNum + 1)

	    #set( $replace = "<table align=$imgAlign class='invisibleTableContainsFIGURE' border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;margin:0'><tr><td style='text-align:center;width:${tableWidth}pt;margin:0'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square;margin:0'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--><p class=MsoCaption style='margin-top:-10pt;text-align:$figCapAlign'><a name='_FIG${figureRefNum}'>Figure </a><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_FIG${figureRefNum}'>SEQ Figure \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'><span style='mso-no-proof:yes'>$figureRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'></span></p></td></tr></table>" )
	#else

	    ## No Extra Figcaptions No Inclusion in TOF ## 
	    
	    #set( $replace = "<!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]-->" )
	#end 

#end
##
###################################################################################################################
##                                                                                                               ##
##  PDF Format Image Replace Macros ( Sub macros of #convertFigures )                                            ##
##  #formatEquation_PDF, #formatImgInTable_PDF, #formatFigWithCaptions_PDF, #formatImgWithOptionForCaptions_PDF  ## 
##  Return: $replace                                                                                             ##
##                                                                                                               ## 
###################################################################################################################
##--------------------------## 
##  formatEquation_PDF
##  1. formats equation 
##--------------------------## 
#macro( formatEquation_PDF $imgIndex $targetWidth $imageBase64s $imgAlignMargin)

	#set( $equationRefNum = $equationRefNum +1)
	#set( $replace = "<div style='display:block;$imgAlignMargin'><div style='display:inline-block'><figure style='height:auto;width:${targetWidth}pt'><img src='$imageBase64s.get($imgIndex) style='width=${targetWidth} !important;height:auto;object-fit:contain;'/></figure></div><div style='display:inline-block'><p class=MsoCaption style='text-align:left;'>eq. ${equationRefNum}</p></div></div>")
#end 
##
##---------------------------------------------## 
##  formatImgInTable_PDF
##  - formats image ready to insert into table 
##---------------------------------------------## 
#macro( formatImgInTable_PDF $imgIndex $targetWidth $imageBase64s ) 

    #set( $replace = "<img src='$imageBase64s.get($imgIndex)' style='height:auto;width:${targetWidth}pt;object-fit:scale-down;'/>" )

#end 
##
##---------------------------------------------## 
##  formatFigWithCaptions_PDF
##  - formats figure with figure captions
##---------------------------------------------## 
#macro( formatFigWithCaptions_PDF $imgIndex $targetWidth $imageBase64s $imgAlignMargin $figCapAlign $figCaptionContent )    

    #set( $replace = "<figure style='height:auto;width:${targetWidth}pt!important;text-align:$figCapAlign !important;$imgAlignMargin'><img src='$imageBase64s.get($imgIndex) style='width=100% !important;height:auto;object-fit:contain;'/><figcaption style='margin-top:-4pt'>$!figCaptionContent</figcaption></figure>")
#end
##
##---------------------------------------------------------------------------------------------------------------------##
##  formatImgWithOptionForCaptions_PDF
##  1. considering img is not in fig tags w/ figcaptions, option to format img with captions and include in the TOF 
##     - consider another parameter that may store figcaption content whether utilizing the document name, a field, or 
##        extracted rich text content 
##---------------------------------------------------------------------------------------------------------------------##
#macro( formatImgWithOptionForCaptions_PDF $imgIndex $targetWidth $imageBase64s $imgAlignMargin $figCapAlign )

	#if( $TOF_includeAllFigures )

		## Add Figcaptions to All Images and Include in the TOF ##  
		#set( $figureRefNum = $figureRefNum + 1)
		#set( $replace = "<figure style='height:auto;width:${targetWidth}pt;text-align:$figCapAlign !important;$imgAlignMargin'><img src='$imageBase64s.get($imgIndex) style='width=100% !important;height:auto;object-fit:contain;'/><figcaption style='margin-top:-4pt'></figcaption></figure>")

	#else 

		## No Extra Figcaptions No Inclusion in TOF ## 
		#set( $replace = "<figure style='height:auto;width:${targetWidth}pt;text-align:$figCapAlign !important;$imgAlignMargin'><img src='$imageBase64s.get($imgIndex) style='width=100% !important;height:auto;object-fit:contain;'/></figure>")
	#end 
#end 
##
#########################################################################################################################
##
##          START WORK IN PROGRESS
## 
#########################################################################################################################

#########################################################################################################################
##          Macro: Extracts image size from image source, if possible, in case there is no size specified in html     ###
##                      $base64Source - base64 source for the image                                                   ###
##                      $imageSizeReturn - size of image                                                              ###
#########################################################################################################################
#macro( getImageSize $base64Source )
  ## if this a PNG, get the size
  #if( $base64Source.substring(0, 16) == "iVBORw0KGgoAAAAN")
    #set( $base64ImageHeader = $base64Source.substring(16, 32) )
    
    #set( $binaryImageHeader = "")
    #foreach( $i in [0..15] )
      #set( $j = $i + 1 )
      #set( $value = $base64ImageHeader.substring($i, $j) )
      ##$value
      #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
      #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
      #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
      #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
      #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
      #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
      #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
      #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
      #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
      #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
      #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
      #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
      #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
      #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
      #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
      #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
      #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
      #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
      #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
      #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
      #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
      #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
      #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
      #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
      #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
      #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
      #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
      #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
      #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
      #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
      #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
      #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
      #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
      #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
      #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
      #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
      #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
      #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
      #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
      #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
      #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
      #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
      #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
      #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
      #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
      #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
      #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
      #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
      #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
      #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
      #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
      #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
      #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
      #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
      #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
      #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
      #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
      #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
      #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
      #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
      #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
      #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
      #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
      #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
    #end
    ##IMAGE HEADER: $binaryImageHeader
    #set( $width = $mathTool.toInteger($binaryImageHeader.substring(32, 33)) * 2147483648 +
                   $mathTool.toInteger($binaryImageHeader.substring(33, 34)) * 1073741824 +
                   $mathTool.toInteger($binaryImageHeader.substring(34, 35)) * 536870912 +
                   $mathTool.toInteger($binaryImageHeader.substring(35, 36)) * 268435456 +
                   $mathTool.toInteger($binaryImageHeader.substring(36, 37)) * 134217728 +
                   $mathTool.toInteger($binaryImageHeader.substring(37, 38)) * 67108864 +
                   $mathTool.toInteger($binaryImageHeader.substring(38, 39)) * 33554432 +
                   $mathTool.toInteger($binaryImageHeader.substring(39, 40)) * 16777216 +
                   $mathTool.toInteger($binaryImageHeader.substring(40, 41)) * 8388608 +
                   $mathTool.toInteger($binaryImageHeader.substring(41, 42)) * 4194304 +
                   $mathTool.toInteger($binaryImageHeader.substring(42, 43)) * 2097152 +
                   $mathTool.toInteger($binaryImageHeader.substring(43, 44)) * 1048576 +
                   $mathTool.toInteger($binaryImageHeader.substring(44, 45)) * 524288 +
                   $mathTool.toInteger($binaryImageHeader.substring(45, 46)) * 262144 +
                   $mathTool.toInteger($binaryImageHeader.substring(46, 47)) * 131072 +
                   $mathTool.toInteger($binaryImageHeader.substring(47, 48)) * 65536 +
                   $mathTool.toInteger($binaryImageHeader.substring(48, 49)) * 32768 +
                   $mathTool.toInteger($binaryImageHeader.substring(49, 50)) * 16384 +
                   $mathTool.toInteger($binaryImageHeader.substring(50, 51)) * 8192 +
                   $mathTool.toInteger($binaryImageHeader.substring(51, 52)) * 4096 +
                   $mathTool.toInteger($binaryImageHeader.substring(52, 53)) * 2048 +
                   $mathTool.toInteger($binaryImageHeader.substring(53, 54)) * 1024 +
                   $mathTool.toInteger($binaryImageHeader.substring(54, 55)) * 512 +
                   $mathTool.toInteger($binaryImageHeader.substring(55, 56)) * 256 +
                   $mathTool.toInteger($binaryImageHeader.substring(56, 57)) * 128 +
                   $mathTool.toInteger($binaryImageHeader.substring(57, 58)) * 64 +
                   $mathTool.toInteger($binaryImageHeader.substring(58, 59)) * 32 +
                   $mathTool.toInteger($binaryImageHeader.substring(59, 60)) * 16 +
                   $mathTool.toInteger($binaryImageHeader.substring(60, 61)) * 8 +
                   $mathTool.toInteger($binaryImageHeader.substring(61, 62)) * 4 +
                   $mathTool.toInteger($binaryImageHeader.substring(62, 63)) * 2 +
                   $mathTool.toInteger($binaryImageHeader.substring(63, 64)) * 1 )
    #set( $height = $mathTool.toInteger($binaryImageHeader.substring(64, 65)) * 2147483648 +
                   $mathTool.toInteger($binaryImageHeader.substring(65, 66)) * 1073741824 +
                   $mathTool.toInteger($binaryImageHeader.substring(66, 67)) * 536870912 +
                   $mathTool.toInteger($binaryImageHeader.substring(67, 68)) * 268435456 +
                   $mathTool.toInteger($binaryImageHeader.substring(68, 69)) * 134217728 +
                   $mathTool.toInteger($binaryImageHeader.substring(69, 70)) * 67108864 +
                   $mathTool.toInteger($binaryImageHeader.substring(70, 71)) * 33554432 +
                   $mathTool.toInteger($binaryImageHeader.substring(71, 72)) * 16777216 +
                   $mathTool.toInteger($binaryImageHeader.substring(72, 73)) * 8388608 +
                   $mathTool.toInteger($binaryImageHeader.substring(73, 74)) * 4194304 +
                   $mathTool.toInteger($binaryImageHeader.substring(74, 75)) * 2097152 +
                   $mathTool.toInteger($binaryImageHeader.substring(75, 76)) * 1048576 +
                   $mathTool.toInteger($binaryImageHeader.substring(76, 77)) * 524288 +
                   $mathTool.toInteger($binaryImageHeader.substring(77, 78)) * 262144 +
                   $mathTool.toInteger($binaryImageHeader.substring(78, 79)) * 131072 +
                   $mathTool.toInteger($binaryImageHeader.substring(79, 80)) * 65536 +
                   $mathTool.toInteger($binaryImageHeader.substring(80, 81)) * 32768 +
                   $mathTool.toInteger($binaryImageHeader.substring(81, 82)) * 16384 +
                   $mathTool.toInteger($binaryImageHeader.substring(82, 83)) * 8192 +
                   $mathTool.toInteger($binaryImageHeader.substring(83, 84)) * 4096 +
                   $mathTool.toInteger($binaryImageHeader.substring(84, 85)) * 2048 +
                   $mathTool.toInteger($binaryImageHeader.substring(85, 86)) * 1024 +
                   $mathTool.toInteger($binaryImageHeader.substring(86, 87)) * 512 +
                   $mathTool.toInteger($binaryImageHeader.substring(87, 88)) * 256 +
                   $mathTool.toInteger($binaryImageHeader.substring(88, 89)) * 128 +
                   $mathTool.toInteger($binaryImageHeader.substring(89, 90)) * 64 +
                   $mathTool.toInteger($binaryImageHeader.substring(90, 91)) * 32 +
                   $mathTool.toInteger($binaryImageHeader.substring(91, 92)) * 16 +
                   $mathTool.toInteger($binaryImageHeader.substring(92, 93)) * 8 +
                   $mathTool.toInteger($binaryImageHeader.substring(93, 94)) * 4 +
                   $mathTool.toInteger($binaryImageHeader.substring(94, 95)) * 2 +
                   $mathTool.toInteger($binaryImageHeader.substring(95, 96)) * 1 )
    #set( $imageSizeReturn = {"width":$width, "height":$height} )
  #else
    #set( $imageSizeReturn = {"width": false, "height": false} )
  #end
#end
#########################################################################################################################
##                     Macro: Embeds attached images as base64                                                        ###
##                      $jamaUrl - Url of an attached image in Jama                                                   ###
##                      $returnSource - Replacement source ID for the now embedded image                              ###
##                      $returnBase64Image - Base64 encoded image 
#########################################################################################################################
#macro( embedImage $jamaUrl )      
  #set( $returnSource = false )
  ## Define a figure array if none exists (first image in the doc)
  #if( !$figure ) #set( $figure = [] ) #end
  ## Define a files array if none exists (first image in the doc)
  #if( !$files ) #set( $files = [] ) #end

  #if( $jamaUrl )
    ## Get attachment ID and file extension
    #set( $srcEnd = $jamaUrl.indexOf("attachment/"))
    #if ( $srcEnd < 0 )
      #set( $srcEnd = $jamaUrl.indexOf("diagram/"))
      #set( $attStart = $srcEnd + 8)
    #else
      #set( $attStart = $srcEnd + 11)
    #end
    #set( $attEnd = $jamaUrl.indexOf( "/", $attStart))
    #set( $attachmentId = $jamaUrl.substring( $attStart, $attEnd))
    #set( $fileExtStart = $jamaUrl.indexOf( ".", $attEnd))
    #set( $fileExtStart = $fileExtStart + 1)
    #set( $fileExt = $jamaUrl.substring( $fileExtStart, $s.length()))
    ## Create new file name, File List Entry and Embedded file
    #set( $f = "JAMA_IMG_")
    #set( $f = $f.concat($attachmentId))
    #set( $f = $f.concat("."))
    #set( $f = $f.concat($fileExt))
    #set( $file = '<o:File HRef="')
    #set( $file = $file.concat( $f))
    #set( $file = $file.concat('"/>'))
    #if( $files.add( $file)) #end
    #set( $jama_cid = $f)
    #set( $newSourceLink = "cid:")
    #set( $newSourceLink = $newSourceLink.concat( $jama_cid))
    #if( $figure.add( $boundaryString)) #end
    #set( $img_jama_cid = "Content-ID: ")
    #set( $img_jama_cid = $img_jama_cid.concat( $jama_cid))
    #if( $figure.add( $img_jama_cid)) #end
    #if( $figure.add( "Content-Transfer-Encoding: base64 ")) #end
    #set( $contentType =  "Content-Type: image/")
    #set( $contentType = $contentType.concat($fileExt))
    #if( $figure.add( $contentType)) #end
    #if( $figure.add( "")) #end
    #set( $base64Fig = $attachmentService.getBase64Image( $mathTool.toInteger( $attachmentId)))
    #if( $figure.add( $base64Fig)) #end
    #if( $figure.add( "")) #end
    #set( $imageData = "data:image/" )
    #set( $imageData = $imageData.concat($fileExt) )
    #set( $imageData = $imageData.concat(";base64, ") )
    #set( $imageData = $imageData.concat($base64Fig) )
##
    ## Return Values
    #set( $returnSource = $newSourceLink )
    #set( $returnBase64Image = $base64Fig )
  #end
#end
#########################################################################################################################
##                          Macro: Resizes images larger than maximum                                               
##                           $inHeight - starting height of image
##                           $inWidth - starting width of image
##                           $maxHeight - maximum allowed height of image
##                           $maxWidth - maximum allowed width of image
##                           $returnHeight - resized height
##                           $returnWidth - resized width                                     
#########################################################################################################################
#macro( resizeImage $inHeight $inWidth $maxHeight $maxWidth )
  #if( $inHeight && $inWidth && $maxHeight && $maxWidth )
    #set( $widthInt = $mathTool.toNumber($inWidth) )
    #set( $heightInt = $mathTool.toNumber($inHeight) )
    #### Debug: $widthInt x $heightInt
##
    #set ($aspectRatio = 1.5)
    #set ($aspectRatio = $mathTool.toDouble($widthInt) / $mathTool.toDouble($heightInt))
    #### Debug Aspect Ratio: $aspectRatio
##
    ## if the image is a formula created by Wiris and less than the max width, reduce the size to 75%
    #if( $input.indexOf("Wirisformula") > -1 && $widthInt <= $maxWidth )
      #set( $returnWidth = $mathTool.mul($widthInt, 0.75) )
      #set( $returnHeight = $mathTool.div($mathTool.toNumber($returnWidth), $aspectRatio) )
##
    ## if the image is higher than allowed, resize
    #elseif( $heightInt > $maxHeight )
      #set ($returnHeight = $maxHeight)
      #set ($returnWidth = $mathTool.mul($mathTool.toNumber($returnHeight), $aspectRatio))
##
      ## if the image is still wider than allowed, resize again
      #if( $returnWidth > $maxWidth )
        #set ($returnWidth = $maxWidth)
        #set ($returnHeight = $mathTool.div($mathTool.toNumber($returnWidth), $aspectRatio))
      #end
##
    ## if the image is wider than allowed, resize
    #elseif( $widthInt > $maxWidth )
      #set ($returnWidth = $maxWidth)
      #set ($returnHeight = $mathTool.div($mathTool.toNumber($returnWidth), $aspectRatio))
##
      ## if the image is still higher than allowed, resize again
      #if( $returnHeight > $maxHeight )
        #set ($returnHeight = $maxHeight)
        #set ($returnWidth = $mathTool.mul($mathTool.toNumber($returnHeight), $aspectRatio))
      #end
    #else
      #set ($returnWidth = $widthInt)
      #set ($returnHeight = $heightInt)
    #end
  #else
    #set ($returnWidth = false )
    #set ($returnHeight = false )
  #end
#end


#########################################################################################################################
##          Macro: convertEquals
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( convertEquals $inString )
#set( $string = $inString )
#set( $string = $string.replaceAll("=", "=3D"))
$string
#end
#########################################################################################################################
##          Macro: formatText
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatText $inString )
#set( $string = $inString )
## Remove divs for pdf so that there are no unexpected formatting containers
#set( $string = $string.replaceAll("<div.*?>|<\/div>", ""))
#set( $string = $string.replaceAll("<p>&nbsp;</p>", ""))
## clear all span satements to remove character formatting
##set( $string = $string.replaceAll("<span.*?>",""))
##set( $string = $string.replaceAll("<\/span>",""))
## clear all embedded headings from rich text fields
#set( $string = $string.replaceAll("<h\d*?.*?>","<p><strong>"))
#set( $string = $string.replaceAll("<\/h\d*?>","</strong></p>"))
## remove any empty image strings
#set( $string = $string.replaceAll("<img alt=[\x27\x22][\x27\x22] \/>", ""))
#set( $string = $string.replaceAll("<img \/>",""))
## replace Micro aka Legacy Symbol to prevent overlapping characters, issue with pdf
#set( $string = $string.replaceAll("µsec", "&mu;sec"))
#if( $format == 'pdf')
#set( $string = $string.replaceAll("", "&#9744;"))
#end 
$string
#end
#########################################################################################################################
##          Macro: formatTables
##          Input: $inString - input string
##                 $maxWidth - number: maximum allowed width(pts) of tables, resize if greater 
##                 $tableAlign - left, right, center alignment of table              
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatTables $inString $maxWidth $tableAlign)
##
  #if( $inString.contains("<table") )
    ## Clear variables used in the macro
    #set( $output = "" ) ##
    #set( $table = false ) ##
    #set( $tableHeader = false ) ##
    #set( $tableCell = false ) ##
    #set( $tableCellParagraph = false ) ##
##
    ## For tables, each tag that makes up the table needs to be independently processed, so split the description into
    ## an array where each each value in the array is a single tag of the HTML, split on '>'
    ## $sub = array of individual tags in the description
    #set ( $subs = $inString.split(">"))##
##
    ## Iterate on each substring
    #foreach ($sub in $subs) ##
      ## append > to each sub except the last one since the split cut it off
      #if( !$foreach.last) #set( $sub = "${sub}>") #end ##
##
      ## Determine where in a table we are
      #if( $sub.contains("<table") ) 
        #set( $table = true )  
        #set( $ogTableWidthPt = false ) ## clear value since this table is new 
        #set( $newTableWidthPt = false ) ## clear value since this table is new 
        #set( $tableScaleFactor = false ) ## clear value since this table is new 
      #end ##
      #if( $sub.contains("<thead") ) #set( $tableHeader = true )  #end ##
      #if( $sub.contains("<td") || $sub.contains("<th") ) #set( $tableCell = true )  #end ##
      #if( $sub.contains("<p") || $sub.contains("<li") ) #set( $tableCellParagraph = true )  #end ##
##
      ###########################################################################
      ## - make sure all table cells include a paragraph with an appropriate class
      ###########################################################################
     #if( $table && !$tableHeader && $tableCell)
        #set($sub = $sub.replaceAll('<p(.*)','<p class=TableCell$1')) ##
        #set( $sub = $sub.replaceAll('<li(.*?)>','<li class=TableCell$1>'))
      #end


      #if($table && $tableHeader && $tableCell)
        #set($sub = $sub.replaceAll('<p(.*)','<p class=TableHeader$1')) ##
        #set( $sub = $sub.replaceAll('<li(.*?)>','<li class=TableHeader$1>'))
      #end

      ## cells with no formatting
      #if( $sub.contains("<td") &&
            !$subs[$nextSubIndex].contains("<p") && 
            !$subs[$nextSubIndex].contains("<li") )
        #set( $sub = "$sub<p class=TableCell>")
      #end

      #if( $sub.contains("<th") && ($docName != "Inspection Plan" && $docName != "Release History") &&
            !$subs[$nextSubIndex].contains("<p") && 
            !$subs[$nextSubIndex].contains("<li") )
        #set( $sub = "$sub<p class=TableHeader>")
      #end
      #if( ($sub.contains("</td") || $sub.contains("</th")) &&
            !$subs[$prevSubIndex].contains("</p") && 
            !$subs[$prevSubIndex].contains("</li") )
        #set( $end = $sub.indexOf("</t") )
        #set( $contents = $sub.substring(0, $end) ) ##
        #set( $endTag = $sub.substring($end, $sub.length()) )
        #set( $sub = "$contents</p>$endTag")
      #end
      ###########################################################################
##
      ###########################################################################
      ## - make sure all tables have the borders collapsed
      ###########################################################################
      #if( $sub.contains("<table") && !$sub.contains("border-collapse") )
          #if( $sub.contains("style") )
            #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;border-collapse:collapse$4") )
          #else
            #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='border-collapse:collapse'$3") )
          #end
      #end

      ###########################################################################  
      ## - make if the table has a border definition that the border attribute 
      ##   is placed to ensure the outer border box is created
      ###########################################################################
      #set( $tableInlineStyle = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$3") )

      #if($tableInlineStyle.contains("border:"))  ## Ensure the outside border is created if the table has a border style definition 
        #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1 border='1' $2$3$4") )
      #end

      ###########################################################################
##
      ###########################################################################
      ## - add header background color
      ###########################################################################
      #if( ($tableHeader && $sub.contains("<td")) || $sub.matches("(?s).*<th[^e].*") )
         
        ## If user has table header color set then use that color
        #set($tableHeaderColor = $sub.replaceAll('background-color:(.*?)[;|"]|[^.*]', "$1"))
         
        #if($tableHeaderColor != '' || $!tableHeaderColor)
          #set($tableHeaderBackgroundColor = $tableHeaderColor.trim())
        #end

        ## Remove old background color from style attribute with multiple CSS or where Background-Color is the only
        ##  style attribute.
        #set($sub = $sub.replaceAll("background-color:.*?;", ""))
        #set($sub = $sub.replaceAll("style='background-color:.*?'", ""))
        #set($sub = $sub.replaceAll('style="background-color:.*?"', ""))
        #set($sub = $sub.replaceAll('style=""|style=" "', ""))
        #set($sub = $sub.replaceAll("style=''|style=' '", ""))

        ## Preserve already assigned cell color if already set to prevent double inline style setting.
        #if( $sub.contains("style") && !$sub.contains("background-color"))
          #if( $sub.contains("style") )
            #set( $replace = "$1$2;background-color:$tableHeaderBackgroundColor$3" )
            #set( $sub = $sub.replaceAll("(<t.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)",$replace) )
          #else
            #set( $replace = "$1 style='background-color:$tableHeaderBackgroundColor'$2" )
            #set( $sub = $sub.replaceAll("(<t.*?)(>)",$replace) )
          #end
        #end
      #end
      ###########################################################################
##
      ###########################################################################
      ## - add border color
      ###########################################################################
      #*
      #if( $sub.contains("<table") )
          #if( $sub.contains("style") )
            #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;border: 0.5pt solid $tableBorderColor$4") )
          #else
            #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='border: 0.5pt solid $tableBorderColor'$3") )
          #end
      #end
      *#
      #if( $sub.contains("<td") || $sub.matches("(?s).*<th[^e].*") )
        #if( $sub.contains("style") )
          #set( $replace = "$1$2;border-color: $tableBorderColor$3" )
          #set( $sub = $sub.replaceAll("(<t.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)",$replace) )
        #else
          #set( $replace = "$1 style='border-color: $tableBorderColor'$2" )
          #set( $sub = $sub.replaceAll("(<t.*?)(>)",$replace) )
        #end
      #end
      ###########################################################################
##
      ###########################################################################
      ## - resize table widths to fit the page and use only point-based widths
      ###########################################################################
     #if( $sub.contains("<table") )
        ## Try finding a width
        #set( $tableWidth = $sub.replaceAll("(?s).*[\x22\x27; ]width.*?:.*?(\d*.*?)[;\x27\x22].*","$1") )
        ## there is no width already, see if the cells can be added up to calculate a width
        #if( $tableWidth == $sub)
          #set( $calcTableWidth = 0 )
          #set( $rowWidth = 0)
          #set( $start = $foreach.index )
          #set( $end = $subs.size() - 1 )
          ## Iterate through each sub between the current position and the end of the table
          #foreach( $i in [$start..$end] )
            #set( $iSub = $subs.get($i) )
            #if( $iSub.contains("<td") )
              #set( $cellWidth = $iSub.replaceAll("(?s).*[\x22\x27; ]width\s*:\s*(\d*.*?)[;\x27\x22].*","$1") )
              ## cell width found
              #if( $cellWidth != $iSub)
                ## width in pt
                #if( $cellWidth.contains("pt") ) ##
                  #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("pt"))) ) ##
                ## width in px
                #elseif( $cellWidth.contains("px") ) ##
                  #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("px"))) ) ## Extract number part
                  #set( $cellWidth = $cellWidth * 0.75 ) ## Convert px to pt
                ## width in % or other.  Essentially ignoring
                #else
                  #set( $cellWidth = 0 )
                #end
              ## no cell width found
              #else
                #set( $cellWidth = 0 )
              #end
              #set( $rowWidth = $rowWidth + $cellWidth )
            #end
            ## calculate width for each row and take the widest one
            #if( $iSub.contains("</tr") )
              #if( $rowWidth > $calcTableWidth )
                #set( $calcTableWidth = $rowWidth )
              #end
              #set( $rowWidth = 0)
            #end
            ## stop once the end of the table is reached in case there are mutliple tables
            #if( $iSub.contains("</table>") )
              #break
            #end
          #end
##
          ## Save table width in pt for cell processing 
          #set( $ogTableWidthPt = $calcTableWidth ) 
          #set( $newTableWidthPt = $calcTableWidth ) 
          #set( $newTableWidthPerc = 0 )
##        
          ## Resize all tables greater than 100% to 100% || Resize all tables less than 1% to 100%
          #if( $ogTableWidthPt > $maxWidth ||  $ogTableWidthPt < 1 )
             #set( $newTableWidthPerc = 100 )
          #end
    
          ## Calculate resize factor for use later
          ## Debug New Table Width (Calc): $newTableWidthPt
          #set( $tableScaleFactor = $newTableWidthPt / $ogTableWidthPt )
          ## Debug Scale Factor (Calc): $tableScaleFactor

          #if( $newTableWidthPerc == 0)
          	#set( $widthCalculation = $newTableWidthPt / $maxWidth)
	      	#set( $newTableWidthPerc = $mathTool.round( $widthCalculation * 100 ))
          #end
##
		  ###NEW Table Width Perc $newTableWidthPerc <br>
          ## add a table width to the table
            #if( $sub.contains("style") )
                #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;width:${newTableWidthPerc}% !important;$4") )
            #else
                #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='width:${newTableWidthPerc}% !important!'$3") )
            #end
      
        ## There is a width, convert it to a point-based width equal or less than maxWidth
        #else
          ## widths in pt
          #if( $tableWidth.contains("pt") ) ##
            #set( $tableWidth = $mathTool.toDouble($tableWidth.substring(0,$tableWidth.indexOf("pt"))) ) ##
            ##<p>DEBUG FOUND TABLE WIDTH (pt) 1: $tableWidth</p>
            #set( $ogTableWidthPt = $tableWidth ) ## Save table width in pt for cell processing 
            ##<p>DEBUG FOUND TABLE WIDTH (pt) 2: $tableWidth</p>
          ## widths in px
          #elseif( $tableWidth.contains("px") ) ##
            #set( $tableWidth = $mathTool.toDouble($tableWidth.substring(0,$tableWidth.indexOf("px"))) ) ## Extract number part
            ##<p>DEBUG FOUND TABLE WIDTH (px) 1: $tableWidth</p>
            #set( $tableWidth = $tableWidth * 0.75 ) ## Convert px to pt
            #set( $ogTableWidthPt = $tableWidth ) ## Save table width in pt for cell processing 
            ##<p>DEBUG FOUND TABLE WIDTH (px) 2: $tableWidth</p>
          ## widths in %
          #elseif( $tableWidth.contains("%") ) ##
            #set( $tableWidth = $mathTool.toDouble($tableWidth.substring(0,$tableWidth.indexOf("%"))) ) ##
            #set( $ogTableWidthPt = $maxWidth * ($tableWidth/100) ) ## Save table width in pt for cell processing
            ##<p>DEBUG FOUND TABLE WIDTH (%) 1: $tableWidth</p>
          ## unknown width, force to 100%
          #else
            #set( $ogTableWidthPt = $maxWidth ) ## Save table width in pt for cell processing
          #end
          ##<p>DEBUG FOUND TABLE WIDTH 3: $tableWidth</p>
          #set( $newTableWidthPt = $ogTableWidthPt )
          ## Resize all tables greater than 100% to 100%
          #if( $ogTableWidthPt > $maxWidth )
            #set( $newTableWidthPt = $maxWidth )
          #end
          ##<p>DEBUG FOUND TABLE WIDTH 4: $tableWidth</p>
          ## Calculate resize factor for use later
          ## Debug New Table Width: $newTableWidthPt
          #set( $tableScaleFactor = $newTableWidthPt / $ogTableWidthPt )
          ##<p>Debug Scale Factor: $tableScaleFactor = $newTableWidthPt divided by $ogTableWidthPt</p>
##
          ## replace width with new value
          #if( $newTableWidthPt ) ## size both pdf and word tables as percentages in relation to page 
	          #set( $widthCalculation = $newTableWidthPt / $maxWidth)
	          #set( $newTableWidthPerc = $mathTool.round( $widthCalculation * 100 ))
	          #if( $newTableWidthPerc > 100 )
	            #set( $newTableWidthPerc = 100 )
	          #end 
            ##<p>DEBUG FOUND TABLE WIDTH 5: $newTableWidthPerc</p>
	          #set( $find = "(?s)(.*[\x22\x27; ]width.*?:.*?)(\d*.*?)([;\x27\x22].*)")
	          #set( $replace = "$1${newTableWidthPerc}% !important$3" )
	          #set( $sub = $sub.replaceAll($find, $replace) )
			  #set( $sub = $sub.replaceAll("width", "max-width") )
          #end
        #end
      #end ##if( $sub.contains("<table") )
      ###########################################################################
##
      ###########################################################################
      ## - resize cell widths to use only point-based widths
      ## - requires the following values from the table width sizing
      ##   $newTableWidthPt
      ##   $tableScaleFactor
      ###########################################################################
      #if( $sub.contains("<td") || $sub.matches("(?s).*<th[^e].*"))
        ## Try finding a width
        #set( $cellWidth = $sub.replaceAll("(?s).*[\x22\x27; ]width\s*:\s*(\d*.*?)[;\x27\x22].*","$1") )
        ##<p>DEBUG cell wdith: |$cellWidth|</p>
        ##<p>DEBUG table scale: |$tableScaleFactor|</p>
        ##<p>DEBUG table width pt: |$newTableWidthPt|</p>
        ## if there is a width, convert to % and scale with table resizing
        #if( $cellWidth != $sub)
          ## widths in pt
          #if( $cellWidth.contains("pt") ) ##
            #if( $tableScaleFactor && $newTableWidthPt)
              #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("pt"))) ) ##
              ## Debug Start Width (pt): $cellWidth
              ## Debug Scale Factor: $tableScaleFactor
              #set( $cellWidthPt = $cellWidth * $tableScaleFactor ) ## Scale cell proportial to table
              ## Debug scaled Width (pt): $cellWidth
            #end
          ## widths in px
          #elseif( $cellWidth.contains("px") ) ##
            #if( $tableScaleFactor && $newTableWidthPt)
              #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("px"))) ) ## Extract number part
              #set( $cellWidth = $cellWidth * 0.75 ) ## Convert px to pt
              #set( $cellWidthPt = $cellWidth * $tableScaleFactor ) ## Scale cell proportial to table
              ##<p>Debug scaled Width (%): $cellWidth</p>
            #end
          ## widths in %
          #elseif( $cellWidth.contains("%") ) ##
            #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("%"))) ) ##
            #if( $newTableWidthPt )
              #set( $cellWidthPt = ($cellWidth/100) * $newTableWidthPt ) ## Convert % to pt
            #else
              #set( $cellWidthPt = ($cellWidth/100) * $maxWidth )
            #end
          #else
            ## Ignoring widths uzing unknown units
          #end
          ## replace width with new value
          #if( $cellWidthPt ) ## size both pdf and word tables as percentages in relation to page 
              #set( $cellWidthPt = $cellWidthPt - 4 ) ## account for cell padding
              #set( $widthCalculation = $cellWidthPt / $newTableWidthPt )
              #set( $cellWidthPerc = $mathTool.round($widthCalculation * 100 ))
              #set( $find = "(?s)(.*[\x22\x27; ]width.*?:.*?)(\d*.*?)([;\x27\x22].*)")
              #set( $replace = "$1${cellWidthPerc}% !important$3" )
              #set( $sub = $sub.replaceAll($find, $replace) )
			  ##set( $sub = $sub.replaceAll("width", "max-width") )
          #else
            #set( $cellWidthPt = false )
          #end
        #end
      #end
      ###########################################################################
      ## - resize any images in the table
      ###########################################################################
      #if( $tableCell && $sub.contains("<v:shape") )
        ## Width
        #set( $start = $mathTool.toNumber($sub.indexOf("width")) + 6 )
        #set( $end = $mathTool.toNumber($sub.indexOf("pt",$start)) )
        #if($start != -1 && $end != -1)
          #set( $width = $mathTool.toDouble($sub.substring($start,$end)) )
        #else
          #set($width =$mathTool.toDouble("180")) ## else default set to 2.5 inches 
        #end
        ## Height
        #set( $start = $mathTool.toNumber($sub.indexOf("height")) + 7 )
        #set( $end = $mathTool.toNumber($sub.indexOf("pt",$start)) )
        #if($start != -1 && $end != -1)
          #set( $height = $mathTool.toDouble($sub.substring($start,$end)) )
        #else
           #set($height = $mathTool.toDouble("180")) ## else default set to 2.5 inches 
        #end

        #set( $aspectRatio = $height / $width )
        ##<p>DEUBG cell width: $cellWidthPt</p>
        ##<p>DEUBG img width: $width</p>

        #if( $cellWidthPt )
          #if( $width > ($cellWidthPt - 8) )
            #set( $width = $cellWidthPt - 8 )
            #set( $height = $width * $aspectRatio )
            #set( $replace = "width:${width}pt" )
            #set( $sub = $sub.replaceAll("width:([\d\.]*?)pt",$replace) )
            #set( $replace = "height:${height}pt" )
            #set( $sub = $sub.replaceAll("height:([\d\.]*?)pt",$replace) )
          #end
        #end
      #end
      ###########################################################################
      ## - align table per $tableAlign, find unique alignments coming from Jama 
      ##   and preserve them. If a unique alignment is not found the parameter 
      ##   value of $tableAlign is preserved. 
      ## - DOC alignments can be removed from the table and set to a parent div.
      ## - PDF alignments also must be removed from the table and set via margins 
      ###########################################################################
    
        #if( $sub.contains("<table") && $sub.contains("align") )
        	#set( $isAlignTable = $sub )
        	#set( $isAlignTable= $isAlignTable.replaceAll("\n|\t", ""))
            #set( $isAlignTable = $isAlignTable.replaceAll("[^*]*?align=([\x27\x22].*?[\x27\x22]|\w*)(?:.*)", "$1") )
            #set( $isAlignTable = $isAlignTable.replaceAll("\x27|\x22", ""))
            #set( $isAlignTable = $isAlignTable.trim())
            #if( $isAlignTable == "center" || $isAlignTable == "right" || $isAlignTable == "left" )
            	#set( $tableAlign = $isAlignTable)
            #end 
        #end 
        #set( $sub = $sub.replaceAll("(margin-left|margin-right|margin):.*?([;\x27\x22])", "$2") )
    
        #if( $sub.contains("<table") )
        	#if( $format == 'doc')
				#set( $sub = $sub.replaceAll("align=([\x27\x22].*?[\x27\x22]|\w*)", "") )
				#set( $sub = $sub.replaceAll("<table", "<div align=$tableAlign><table"))
				#if( $sub.contains("</table") )	
					#set( $sub = "$sub</div>")	
				#end 
			
			#elseif( $format == 'pdf')
				#if( $tableAlign == "left")
					## Default alignment is left so take left alignment off to stop float left
					#set( $sub = $sub.replaceAll("align=([\x27\x22].*?[\x27\x22]|\w*)", "") )
				#elseif( $tableAlign == "center")
					#set( $sub = $sub.replaceAll("align=([\x27\x22].*?[\x27\x22]|\w*)", "") )
					#if( $sub.contains("style"))
						#set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;margin:auto;$4"))
					#else 
						#set( $sub = $sub.replaceAll("(<table)","$1 style='margin:auto'"))
					#end 
				#elseif( $tableAlign == "right")
					#set( $sub = $sub.replaceAll("align=([\x27\x22].*?[\x27\x22]|\w*)", "") )
					#if( $sub.contains("style"))
						#set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;margin-left:auto;margin-right:0pt;$4"))
					#else 
						#set( $sub = $sub.replaceAll("(<table)","$1 style='margin-left:auto;margin-right:0pt;'"))
					#end 
				#end 	
			#end 
        #end 
    

 		#if( $format == 'pdf')
 			#set( $sub = $sub.replaceAll("writing-mode:tb-rl",""))
 		#elseif( $format == 'doc')
      		#if( $sub.contains("<td") || $sub.contains("<th") )
        	  #set( $sub = $sub.replaceAll("padding.*?([;\x27\x22])", "$1") )
        	#end 
        	## Handle text content alignment for vertical text on tables
        	#if($sub.contains("transform:rotate(180deg);"))
            	#set( $sub = $sub.replaceAll("transform:rotate\(180deg\);","mso-rotate:90;") )
          	#end 
        #end    
   
      ###########################################################################
      ## add the processed sub to the output string
      #set ( $output = "${output}${sub}" ) ##
      ## Determine where in a table we are
      #if( $sub.contains("</p") || $sub.contains("</li") ) #set( $tableCellParagraph = false )  #end ##
      #if( $sub.contains("</thead") ) #set( $tableHeader = false ) #end ##
      #if( $sub.contains("</td") || $sub.contains("</th") ) #set( $tableCell = false ) #end ##
      #if( $sub.contains("</table") ) #set( $table = false ) #end ##
    #end ##foreach ($sub in $subs)
  #else ##
    #set ( $output = $inString )
  #end ##if( $inString.contains("<table") )

  #######################################################################################
  ## - Word caption handling by extracting caption and creating a new single cell table on top
  ## - This allows preservation of the caption alignment and prevents word from applying
  ## - Heading formatting to the caption as it does when caption is still present on 
  ## - original table as the first table row.
  ##   #buildTableCaptions_DOC will add captions to tables that do not have them
  ##   if $TOT_includeAllTables is true so that they can be included in the TOT
  #######################################################################################
  #######################################################################################
  ## - PDF captions are automatically found by the template and do not need to be reformatted
  ##  #buildTableCaptions_PDF will add captions to tables that do not have them
  ##   if $TOT_includeAllTables is true so that they can be included in the TOT
  #######################################################################################
  
  
  ## if doc or pdf format check each table for table captions and format accordingly 
	#if($output.contains("</table>"))
		#if( $format=='doc')
		
		   #buildTableCaptions_DOC( $output )

		#elseif( $format == 'pdf')

		   #buildTableCaptions_PDF( $output $tableAlign)

		#end 

	#end  

  $output

#end 
##
##
#########################################################################################################################
##  DOC                                                                                                                ## 
##  #buildTableCaptions_DOC                                                                                            ##
##  1. For each table found check if it has a caption                                                                  ##
##  2. If caption utilize the caption content and construct caption for Word                                           ##
##  3. Else considering a table does not have captions, option to format table with captions and include in the TOT    ## 
##     - consider another parameter that may store caption content whether utilizing the document name, a field, or    ##
##        extracted rich text content                                                                                  ## 
#########################################################################################################################
#macro( buildTableCaptions_DOC $output )

#set( $tempInString = "")
#set( $caption = "")
#set( $output = $output.replaceAll("<table", "<table[TABLE]"))
#set( $splitList = $output.split("<table"))


	#foreach ($splitItem in $splitList)
	    #set($splitItem = $splitItem.replaceAll(" +", " "))
	    #if( $splitItem.contains("[TABLE]"))
		    ## Replace the placeholder with the <table tag that was removed in split
		    #set( $splitItem = $splitItem.replaceAll("\[TABLE\]", "<table"))
		    ## Extract table width

		    #if( !$splitItem.contains("invisibleTableContainsFIGURE"))
			    #set( $tableWidth = '')
			    #set( $tableWidth = $splitItem.replaceAll("<table.*width.*?:.*?(\d*.*?)[;\x27\x22].*|[\w|\W]","$1") )

			    #set( $captionContent = "")
			    #if( $splitItem.contains("</caption>"))
			      #set( $tableRefNum = $tableRefNum + 1) 
			      ## Extract Caption Content

			      #set( $captionContent = $splitItem.replaceAll("(<caption.*\s*.*\s*<\/caption>)|[\w|\W]", "$1"))
			      #set( $captionContent = $captionContent.replaceAll("<\/caption>", ""))
			      #set( $getAlign = $captionContent.replaceAll("<caption(.*?)>", "$1"))
			      #set( $captionContent = $captionContent.replaceAll("<caption.*?>", ""))
		          
		          #set( $captionAlign = '')
		          #set( $captionAlign = $getAlign.replaceAll("[^*]*?text-align:(\w*).*(?:.*)", "$1"))


		          #set( $captionContent = $captionContent.replaceAll("<\/p>", ""))
		          #set( $captionContent = $captionContent.replaceAll("<p.*?>", ""))

		          #if( $!captionContent && $captionContent != '')
		            #if( $captionAlign != '')
			          #set($caption = "<table border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;width:$tableWidth'><tr><td style='width:$tableWidth'><p class=MsoNormal style='text-align:$captionAlign;font-size:10pt;font-family:'Helvetica',sans-serif;font-weight:bold'><p class=MsoCaption style='text-align:$captionAlign !important;margin-top:6pt;page-break-after:avoid'><a name='_TBL${tableRefNum}'>Table </a><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_TBL${tableRefNum}'>SEQ Table \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'><span style='mso-no-proof:yes'>$tableRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'></span> $!captionContent</p></td></tr></table>" )
			        #else
			          #set($caption = "<table border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;width:$tableWidth'><tr><td style='width:$tableWidth'><p class=MsoNormal style='text-align:$tableAlign;font-size:10pt;font-family:'Helvetica',sans-serif;font-weight:bold'><p class=MsoCaption style='text-align:$tableAlign;margin-top:6pt;page-break-after:avoid'><a name='_TBL${tableRefNum}'>Table </a><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_TBL${tableRefNum}'>SEQ Table \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'><span style='mso-no-proof:yes'>$tableRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'></span> $!captionContent</p></td></tr></table>" )
			        #end
			      #end

			      #set($splitItem = $splitItem.replaceAll("<caption.*\s*.*\s*<\/caption>", ""))
			      #set($splitItem = $splitItem.replaceAll("<table", "$caption<table"))

			    ## Add captions to All Tables ##
			    ## Comment out this block if you only want captions for tables that have captions
			    #else
			    	#if( $TOT_includeAllTables )
			    		#set( $tableRefNum = $tableRefNum + 1)
			    		#set($caption = "<table border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;width:$tableWidth'><tr><td style='width:$tableWidth'><p class=MsoNormal style='text-align:$tableAlign;font-size:10pt;font-family:'Helvetica',sans-serif;font-weight:bold'><p class=MsoCaption style='text-align:center;margin-top:6pt;page-break-after:avoid'><a name='_TBL${tableRefNum}'>Table </a><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_TBL${tableRefNum}'>SEQ Table \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'><span style='mso-no-proof:yes'>$tableRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'></span></p></td></tr></table>" )


			    	#set($splitItem = $splitItem.replaceAll("<table", "$caption<table"))
			    	#end 
	    		#end  ##if($splitItem.contains("</caption>"))
	    	#end ##if( !$splitItem.contains("invisibleTableContainsFIGURE"))
		#end  ##if( $splitItem.contains("[TABLE]"))

	  	## Rebuild the now modified inString content
	  	#set ( $tempInString = "${tempInString}${splitItem}" )

	#end  ##foreach ($splitItem in $splitList)

	## Reassign inString to its now caption modified version

	#set($output = $tempInString)


  ##------------------------------##
  ## Returns $output
  ##------------------------------##

#end 
## 
#########################################################################################################################
##  PDF                                                                                                                ##
##  #buildTableCaptions_PDF                                                                                            ##
##  1. considering table does not have captions, option to format table with captions and include in the TOT           ## 
##     - consider another parameter that may store caption content whether utilizing the document name, a field, or    ##
##        extracted rich text content                                                                                  ##
##                                                                                                                     ## 
#########################################################################################################################
#macro( buildTableCaptions_PDF $output $tableAlign)

#set( $tempInString = "")
#set( $caption = "")
#set( $output = $output.replaceAll("<table", "<table[TABLE]"))
#set( $splitList = $output.split("<table"))

#foreach ($splitItem in $splitList)
  #set($splitItem = $splitItem.replaceAll(" +", " "))
  #if( $splitItem.contains("[TABLE]"))
    ## Replace the placeholder with the <table tag that was removed in split
    #set( $splitItem = $splitItem.replaceAll("\[TABLE\]", "<table"))

    #if(!$splitItem.contains("</caption>") && $TOT_includeAllTables )
  
     	#if( $tableAlign=='center')
     		#set($caption = "<caption style='text-align:center !important;margin:auto !important'></caption>" )
     	
     	#elseif( $tableAlign =='right')
        	#set($caption = "<caption style='text-align:right !important;margin-right:0pt !important;'></caption>" )
        
        #else 
        	#set($caption = "<caption style='text-align:center !important;margin:auto !important;'></caption>" ) ## set default caption align
        
        #end 
        #set($splitItem = $splitItem.replaceAll("(<table.*?>)", "$1 $caption"))

    #end  ##if(!$splitItem.contains("</caption>"))
  #end  ##if( $splitItem.contains("[TABLE]"))

      
  ## Rebuild the now modified inString content
  #set ( $tempInString = "${tempInString}${splitItem}" )

#end  ##foreach ($splitItem in $splitList)

## Reassign inString to its now caption modified version

#set($output = $tempInString)

##------------------------------##
## Returns $output
##------------------------------##

#end 
##
#########################################################################################################################
##          Macro: formatTableCell
##          Input: $inString - input string
##                 $justification - string, justification to apply to output. (left, right, center)
##                 $$maxImageWidth - number, maximum wide of any image in the cell
##          Output: string, ready for opening in Word
#########################################################################################################################
#macro( formatTableCell $inString $justification $maxImageWidth)
  #if( $inString && $justification && $maxImageWidth )
    #set( $string = $inString.toString() )
    ## Re-format text for consistent look and feel
    #set( $string = "#formatText($string)" )
    ## Prep figures for Word, use defined maximum width
    #set( $string = "#convertFigures($string, $maxImageWidth)" )
    ## Re-format tables for consistent look and feel
    #set( $string = "#formatTables($string, $maxImageWidth, 'left')" )
    ## format lists appropriately
    #set( $string = $string.replaceAll('<li>','<li class=TableCell>') )
    #set( $string = $string.replaceAll('<li\s([^c].*?)>','<li class=TableCell $1>') )
    ## Make sure all cells are contained in a paragraph with the appropriate style
    #if( !$string.contains("<p"))
      #set( $string = "<p class=TableCell style='text-align:$justification'>$string</p>" )
    #else
      #set( $string = $string.replaceAll("<p>","<p class=TableCell style='text-align:$justification'>") )
      #set( $string = $string.replaceAll("<p\s([^c].*?)>","<p class=TableCell $1 style='text-align:$justification'>") )
    #end
    $string
  #end
#end
#########################################################################################################################
##          Macro: formatRichText
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatRichText $inString )
  #if( $inString )
    #set( $string = $inString.toString() )
    ## Re-format text for consistent look and feel
    #set( $string = "#formatText($string)" )
    ## Prep figures for Word, use globally defined maximum width
    #set( $string = "#convertFigures($string, $maxPageWidth)" )
    ## Re-format tables for consistent look and feel
    #set( $string = "#formatTables($string, $maxPageWidth, 'left')" )
    ## format lists appropriately
    #set( $string = $string.replaceAll('<li>','<li class=MsoListParagraph>'))
    #set( $string = $string.replaceAll('<li\s([^c].*?)>','<li class=MsoListParagraph $1>'))
    ## Make sure all content that is not already in a paragraph with a class is in a paragraph with class Normal
    #if( !$string.contains("<p"))
      #set( $string = "<p class=MsoNormal>$string</p>" )
    #else
      #set( $string = $string.replaceAll("<p>","<p class=MsoNormal>") )
      #set( $string = $string.replaceAll("<p\s([^c].*?)>","<p class=MsoNormal $1>") )
    #end
    $string
  #end
#end

#########################################################################################################################
##          Macro: getBaselineItems
##          Input: $baselineId
##          Desc: - This macro is utilized to extract baseline items indirectly (i.e through provided baselineID)
##                - Following the Jama 9.6 release all indirect baseline items are returned as ContourItemDTO interface 
##                  objects. 
##                - Utilizing the new methods provided by Product we extract the baseline items in array collections of 
##                  50. 
##                - Using the .addAll() method we concat each collection of 50 baseline items to our final array. 
##                  
#########################################################################################################################
#macro( getBaselineItems $baselineId) 

  #set($baselineItems = [])

 

  #set($extractedBaselineItems = [])
  #set($baselineTotalItems = $mathTool.toDouble($documentSource.getContourItemDTOsForBaseline($baselineId, 0, 1, 'sequence ASC').getPageInfo().getTotal()))
  #set($extractionCalls = $mathTool.ceil($mathTool.toDouble($baselineTotalItems / 50.0)))

  #foreach($cycle in [1..$extractionCalls])
    #set($pageIndex = $extractedBaselineItems.size())  
    #set($baselinePagedResults = $documentSource.getContourItemDTOsForBaseline($baselineId, $pageIndex, 50, 'sequence ASC') )
    #set($success = $extractedBaselineItems.addAll($baselinePagedResults.results))

    #if($extractedBaselineItems.size() == $baselineTotalItems)
      #break
    #end
  #end

 

  ## Extract Baseline Items Sequence Value and create object key value pair mapping structure
  #set($baselineItemSortPairs = [])
  #foreach($baselineItem in $extractedBaselineItems)
    #set($docNode = $documentSource.getDocumentNodeForBaseLine(5, $mathTool.toInteger($baselineItem.id), $mathTool.toInteger($baselineId)))

    #set($success = $baselineItemSortPairs.add({"BaselineItem": $baselineItem, "SortOrder": $docNode.globalSortOrder}))
  #end

 

  ## Sort constructed mapping structure by item sequence values and store into new baseline item list to ensure baseline list is in proper order
  #foreach($seqSortedItemObj in $sortTool.sort($baselineItemSortPairs, "SortOrder"))
    #set($baselineItemSorted = $seqSortedItemObj.get("BaselineItem"))
    #set($success = $baselineItems.add($baselineItemSorted))
  #end

 
#end



#########################################################################################################################
## **********************************************************************************************************************
##
##  5.2 ITEM_TYPE_MACROS: Item Type Formatting Macros
##
##  >>>> Create one macro for each item format <<<< ##
##
##  Macros can be used for one or more Jama item types
##
## **********************************************************************************************************************
#########################################################################################################################
##
## Create a heading with the name of the document object and a bookmark named by the Jama API ID 
## bookmarks are used for cross-references
#macro( formatHeading $doc $hierarchyLevel $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #if( $format == "doc")

      #if( $hierarchyLevel < 7 )
        <h$hierarchyLevel style='text-align:left !important'>
          <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
        </h$hierarchyLevel>
      #else
        <p class=MsoHeading7 style='text-align:left !important'>
          <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
        </p>
      #end

    #elseif( $format == "pdf")

        #if( $hierarchyLevel <= 6 )
      		<h$hierarchyLevel style='text-align:left !important'>$!doc.name</h$hierarchyLevel>
    	#elseif( $hierarchyLevel >= 7)
      		<p class=MsoHeading7 style='text-align:left !important'>$!doc.name</p>
    	#end

    #end##if( $format == "doc")...#elseif($format == "pdf")...## 
  #end
#end
##
## Simple Name and Description, suitable for Text Items similar item types
#macro( formatNameDescription $doc $hierarchyLevel $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #if( $format == "doc")
      #if( $hierarchyLevel < 7 )
        <h$hierarchyLevel style='text-align:left !important'>
          <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
        </h$hierarchyLevel>
      #else
        <p class=MsoHeading7 style='text-align:left !important'>
          <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
        </p>
      #end

    #elseif( $format == "pdf")

		#if( $hierarchyLevel <= 6 )
			<h$hierarchyLevel style='text-align:left !important'>$!doc.name</h$hierarchyLevel>
		#elseif( $hierarchyLevel >= 7 )
			<p class=MsoHeading7 style='text-align:left !important'>$!doc.name</p>
		#end

    #end##if( $format == "doc")...#elseif($format == "pdf")...## 

    #formatRichText($doc.description )
  #end
#end
##
## Description Only
#macro( formatDescription $doc $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #formatRichText($doc.description )
  #end
#end
##
#########################################################################################################################
##          Macro: getFields
##          Input: $doc - input document item
##          Output: fills $docList array for each item type and it's fields
#########################################################################################################################
#macro( getFields $doc) ##
	#set( $found = false) ##
	#foreach($a in $docList) ##
        #if($a.docTypeId == $doc.documentType.id) ##
            #set($found = true) ##
            #break ##
        #end ##
        #set($count=$count+1) ##
    #end ##
	
	#if($found == false) ##
		#set( $docFields = []) ##
        ##if($docField.add($doc.documentType.id))#end ##
        #foreach($d in $documentSource.getDocumentTypeFieldListByType($doc.documentType.id)) ##

            #if($docFields.add({"fieldName":$d.documentField.name, "fieldObject": $d}))#end ##
			#set( $field = $doc.documentType.display + ' ' + $d.documentField.name)
			
        #end ##
		#if( $docList.add({"docTypeId":$doc.documentType.id, "docFields":$docFields})) #end ##
	#end ##
#end ##
#########################################################################################################################
##          formatUpdatedItemsHeader 
##          Input: $baseDoc $bData1 $bData2 
##          Return: Header section Updated Items Section 1.0 
#########################################################################################################################  
#macro( formatUpdatedItemsHeader $baseDoc $bData1 $bData2 )

#if( !$firstSection )
  <section>
  #set( $firstSection = true )
  #if( $format=='doc')
    <div align=center style='text-align:center'> ## Word needs this to align the table at the center of page
  #end  

#else 
  <section style='page-break-before:always !important'>
  #if( $format=='doc')
    <div align=center style='text-align:center;page-break-before:always !important'> ## Word needs this to align the table at the center of page
  #end  

#end 


<h2 style='text-align:left !important;'>
	#set( $lk = "")
	#createLink( $baseDoc.currentVersion.originDocument, $baseDoc.currentVersion.versionNumber.toString())
    #set( $lk = $createLinkReturn)
	#set( $baseName = $baseDoc.name)
	#encodeText( $baseName)
	#set( $baseName = $encodeTextReturn)
    <a style='font-size:12pt !important;' href="$!lk">$baseDoc.documentKey</a> 
    $baseName
</h2>
<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0 align=left width='100%' style='width:100%;border-collapse:collapse;border:none;margin:0 !important;overflow-wrap:break-word !important;margin-bottom:5pt !important;'>
	<thead>
		<tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
			<td width="9%" valign=top style='width:10%;border:solid windowtext 1.0pt;
			background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
				<p class=MsoNormal style='margin-bottom:0in;line-height:normal;overflow-wrap:break-word !important'><b>
        Field Label</b></p>
			</td>
		#if( $report_showFinText == true)
			
			<td width="26%" valign=top style='width:26.04%;border:solid windowtext 1.0pt;
			border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
				<p class=MsoNormal style='margin-bottom:0in;line-height:normal;'><b>
				    Baseline $bData1.name
				  </b></p>
			</td>
		#end
    #if( !$report_showFinText || !$report_showFinText && $includeRelationships )
      #set( $cellWidth = 90 )
      #set( $colSpan = 3 )
    #else 
      #set( $cellWidth = 38 )
      #set( $colSpan = 1 )
    #end 
			<td width="${cellWidth}%" colspan=$colSpan valign=top style='border:solid windowtext 1.0pt;
			border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
				<p class=MsoNormal style='margin-bottom:0in;line-height:normal;'><b>Differences</b></p>
			</td>
		#if( $report_showFinText == true)
			<td width="26%" valign=top style='width:26.06%;border:solid windowtext 1.0pt;
			border-left:none;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
			<p class=MsoNormal style='margin-bottom:0in;line-height:normal;'><b>
		
			Baseline $bData2.name</b></p>
			</td>  
		#end ##if( $report_showFinText == true)
		</tr>
	</thead>

#end
#########################################################################################################################
##          formatFieldOrTestCaseStepsBaseDoc
##          Input: $b $baseDoc
##          Return: Table Cell of field value or table cell of Test Case Steps, report body Updated Items 1.0
#########################################################################################################################  
#macro( formatFieldOrTestStepsBaseDoc $b $baseDoc )

#set( $colSpan = 1 )
#set( $cellWidth = 26 )
            
<td valign=top colspan=$colSpan style='width:${cellWidth}%;border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>


##---- testCaseSteps is 1 field of everything concat together, we want to output each field ----##

#if( $b != "testCaseSteps" || $b != "testRunSteps")
  
  #if( $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat))
    #formatTableCell( $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat), "left", 150)
  #end ##if( $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat))
#elseif( $b == "testCaseSteps" || $b == "testRunSteps")
  #set($i = 1)
  #if( $b == "testCaseSteps")
	#set( $steps = $baseDoc.testCaseSteps)
  #else
    #set( $steps = $baseDoc.testRunSteps)
  #end
  
  #foreach($baseTS in $steps)
    <p class="MsoNormal" style='margin-left:0in'><b>$i.</b> 
    #if( $baseTS.action.length() > 0)  
      ##$baseTS.action 
      #set( $print = "")
      #set( $print = $baseTS.action)
      #set( $print = "#convertFigures($print, 150)" )
      $!print
    #end ##if( $baseTS.action.length() > 0)  
    </p>
    <p class="MsoNormal" style='margin-left:8pt'><b>Expected Results:</b> 
    #if( $baseTS.expectedResult.length() > 0) 
      ##$baseTS.expectedResult 
      #set( $print = "")
      #set( $print = $baseTS.expectedResult)
      #set( $print = "#convertFigures($print, 150)" )
      $!print
    #end ##if( $baseTS.expectedResult.length() > 0) 
    </p>
    <p class="MsoNormal" style='margin-left:8pt'><b>Notes:</b> 
    #if( $baseTS.notes.length() > 0) 
      ##$baseTS.notes 
      #set( $print = "")
      #set( $print = $baseTS.notes)
      #set( $print = "#convertFigures($print, 150)" )
      $!print
    #end ##if( $baseTS.notes.length() > 0) 
    </p>
    #if( $b == "testRunSteps")
		<p class="MsoNormal" style='margin-left:8pt'><b>Result:</b> 
		#if( $baseTS.result.length() > 0) 
		  ##$baseTS.result 
		  #set( $print = "")
		  #set( $print = $baseTS.result)
		  #set( $print = "#convertFigures($print, 150)" )
		  $!print
		#end ##if( $baseTS.result.length() > 0) 
		</p>
		<p class="MsoNormal" style='margin-left:8pt'><b>Status:</b> 
		#if( $baseTS.testRunStatus.name.length() > 0) 
		  ##$baseTS.testRunStatus.name 
		  #set( $print = "")
		  #set( $print = $baseTS.testRunStatus.name)
		  #set( $print = "#convertFigures($print, 150)" )
		  $!print
		#end ##if( $baseTS.testRunStatus.name.length() > 0) 
		</p>
	#end
    #set($i = $i + 1)
  #end ##foreach($baseTS in $baseDoc.testCaseSteps)
#end ##if($b != "testCaseSteps")

</td> 
#end 
########################################################################################################################
#macro( formatTestSteps $b $baseDoc $compareDoc)

	#set( $beforeStepText = "")
	#set( $afterStepText = "")
	#if( $b == "testCaseSteps")
		  #set($baseSteps = $baseDoc.testCaseSteps)
		  #set($activeSteps = $compareDoc.testCaseSteps)
	#elseif( $b == "testRunSteps")
		  #set($baseSteps = $baseDoc.testRunSteps)
		  #set($activeSteps = $compareDoc.testRunSteps)
	#end
	#set($length = $mathTool.max($baseSteps.size(), $activeSteps.size()))
	#set($stepNum = [1..$length])

	#foreach( $i in $stepNum )
		##set($beforeStep = "")
		##set($afterStep = "")
		#set($index = $i - 1)
		#if( $baseSteps.size() > 0)
			#if($i <= $baseSteps.size() )
			  #set($beforeStep = $baseSteps.get($index))
			  
			  #set($beforeStepText = $beforeStepText + 
			  "<p class='MsoNormal' style='margin-left:0in'><b>" + $i
			  +".</b> ")
			  #if( $beforeStep.action)
				#set($beforeStepText = $beforeStepText + $beforeStep.action)
			  #end
			  #set( $beforeStepText = $beforeStepText + "<p class='MsoNormal' style='margin-left:8pt'><b>Expected Results:</b> ")
			  #if( $beforeStep.expectedResult.length() > 0)
				#set( $beforeStepText = $beforeStepText + $!beforeStep.expectedResult)
			  #end
			  #set( $beforeStepText = $beforeStepText + "<p class='MsoNormal' style='margin-left:8pt'><b>Notes:</b> ")
			  #if( $beforeStep.notes.length() > 0)
				#set( $beforeStepText = $beforeStepText + $!beforeStep.notes)
			  #end
			  #set( $beforeStepText = $beforeStepText + "<p class='MsoNormal' style='margin-left:8pt'><b>Result:</b> ")
			  #if( $beforeStep.result)
				#set( $beforeStepText = $beforeStepText + $!beforeStep.result)
			  #end
			  #set( $beforeStepText = $beforeStepText + "<p class='MsoNormal' style='margin-left:8pt'><b>Status:</b> ")
			  #if( $beforeStep.testRunSet.name.length() > 0)
				#set( $beforeStepText = $beforeStepText + $!beforeStep.testRunSet.name)
			  #end

			#else
			  #set($beforeStepText =
			  "<p class='MsoNormal' style='margin-left:0in'><b>"+ $i +
			  ".</b> ")
			#end
		#end
		
		#if( $activeSteps.size() > 0)
			#if( $i <= $activeSteps.size() )
				#set( $afterStep = $activeSteps.get($index))
				
				
				#set($afterStepText = $afterStepText + "<p class='MsoNormal' style='margin-left:0in'><b>" + $i + ".</b> " )
				#if( $afterStep.action)
				  #set( $afterStepText = $afterStepText + $!afterStep.action)
				#end
				#set( $afterStepText = $afterStepText + "<p class='MsoNormal' style='margin-left:8pt'><b>Expected Results:</b> ")
				#if( $afterStep.expectedResult)
				  #set( $afterStepText = $afterStepText + $!afterStep.expectedResult)
				#end
				  
				#set( $afterStepText = $afterStepText + "<p class='MsoNormal' style='margin-left:8pt'><b>Notes:</b> ")
				#if( $afterStep.notes)
				  #set( $afterStepText = $afterStepText + $!afterStep.notes)
				#end
				  
				#set( $afterStepText = $afterStepText + "<p class='MsoNormal' style='margin-left:8pt'><b>Result:</b> ")
				#if( $afterStep.result)
				  #set( $afterStepText = $afterStepText + $!afterStep.result)
				#end
				#set( $afterStepText = $afterStepText + "<p class='MsoNormal' style='margin-left:8pt'><b>Status:</b> ")
				  
				#if( $afterStep.testRunSet.name)
					#set( $afterStepText = $afterStepText.concat($!afterStep.testRunSet.name))
				#end
			#else
				#set($afterStepText =
				"<p class='MsoNormal' style='margin-left:0in'><b>"+ $i +
				".</b> ")
			#end ##if( $i <= $activeSteps.size() ) ##>
		#end
	#end ##foreach( $i in $stepNum )
	
#end
#########################################################################################################################
##          showComparisonForFields
##          Input: $b $baseDoc $compareDoc
##          Return: Table Cell of field value or table cell of Test Case Steps, report body Updated Items 1.0
#########################################################################################################################  
#macro( showComparisonForFields $b $baseDoc $compareDoc )

	#if( !$report_showFinText )
	  #set( $colSpan = 3 )
	  #set( $cellWidth = 100 )
	#else 
	  #set( $colSpan = 1 )
	  #set( $cellWidth = 38 )
	#end 

<td valign=top colspan=$colSpan style='width:${cellWidth}%;border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>

##<p class=TableCell style='margin-left:0in;'>

	#if( $b != "testCaseSteps" && $b != "testRunSteps")

	  #if( $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat ))
		#set( $beforeVal = $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat ))
		#set( $afterVal = $velocityReportUtil.getValueForField($compareDoc, $b, $dateFormat ))
		#if( $beforeVal.length() > $maxDiff || $afterVal.length() > $maxDiff )
		  <p class="toobig">$maxedOut $maxDiff.</p>
		#else
		  #set( $print = "")
		  #set( $print = $diffService.getDiff( $beforeVal, $afterVal ))
		  #if( $report_showFinText == false)
			#set( $imageWid = $maxImageWidth)
		  #else
			#set( $imageWid = 175)
		  #end
		  #set( $print = "#convertFigures($print, $imageWid)" )
		  #set( $print = "#formatText($print)")
		  #set( $print = "#formatTables($print, $maxPageWidth, 'left')")
		  #set( $print = $print.trim())
		  $!print
		#end ##if($beforeVal.length() > $maxDiff || $afterVal.length() > $maxDiff)
	  #end ###if( $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat))

	#elseif( $b == "testCaseSteps"  || $b == "testRunSteps")
	  #set( $baseSteps = $baseDoc.testCaseSteps )
	  #set( $activeSteps = $compareDoc.testCaseSteps )
	  #set( $length = $mathTool.max($baseSteps.size(), $activeSteps.size()) )
	  #set( $stepNum = [1..$length] )
	  
	  #if( $beforeStepText.length() > $maxDiff || $afterStepText.length() > $maxDiff)
		<p class="toobig">$maxedOut $maxDiff.</p>
	  #else
		##$diffService.getDiff($beforeStepText, $afterStepText)
		#if( $beforeStepText != $afterStepText)
			#set( $print = "")
			#set( $print = $diffService.getDiff($beforeStepText, $afterStepText))
			#if( $report_showFinText == false)
			  #set( $imageWid = $maxImageWidth)
			#else
			  #set( $imageWid = 175)
			#end
			#set( $print = "#convertFigures($print, $imageWid)" )
			$!print
		#end
	  #end ##if( $beforeStepText.length() > $maxDiff || $afterStepText.length() > $maxDiff)
	#end ##if( $b != "testCaseSteps" )

</td>

#end 
#########################################################################################################################
##          buildRelationshipCounts 
##          Input: $baseDoc $originDoc $r1 $r2 
##          Return: $base1RelsSize, $base2RelsSize, $relsMatch, $base1Resls $base2Rels
#########################################################################################################################  
#macro( buildRelationshipCounts $baseDoc $compareDoc $r1 $r2 ) 
  #set( $start = 0)
  #set( $count = 20)
  #set( $pageSize = 20 )

  #set( $base1Rels = [])
  #set( $allBase1IDs = [] )
  #set( $uniqueBase1Rels = [] )
  
  #set( $base2Rels = [])
  #set( $allBase2IDs = [] )
  #set( $uniqueBase2Rels = [] )

  #set( $addedRelationship = [] ) 
  #set( $removedRelationship = [] )

  ##CHECK B1: $baseDoc.documentKey, Baseline id 1: $r1, item id: $baseDoc.id, $baseDoc.currentVersion.id  Version: $baseDoc.currentVersion.versionNumber<br>
  ##CHECK B2: $compareDoc.documentKey, Baseline id 2: $r2, item id: $compareDoc.id, Version: $compareDoc.currentVersion.versionNumber<br>

  #set( $base1RelsPage = $documentSource.getRelationships($baseDoc.currentVersion.originDocument.id,$r1,$start,$count))
  #set( $base2RelsPage = $documentSource.getRelationships($compareDoc.currentVersion.originDocument.id,$r2,$start,$count))
  ##$base1RelsPage 
  ##$base2RelsPage 
  
  #set( $totalRels1 = 0 )
  #set( $totalRels2 = 0 )
  #if( $base1RelsPage )
    #set( $totalRels1 = $base1RelsPage.getPageInfo().getTotalResults())
  #end 

  #if( $base2RelsPage )
    #set( $totalRels2 = $base2RelsPage.getPageInfo().getTotalResults())
  #end 

  ##Total Rels 1: $totalRels1 TotalRels2: $totalRels2<br>

    #if( $totalRels1 > 0) ## Did not make it into here
      #set( $page_count = $mathTool.floor( $mathTool.div($totalRels1,$pageSize) ) )

      #foreach( $page in [0..$page_count])

        #set($base1RelsPage = $documentSource.getRelationships($baseDoc.currentVersion.originDocument.id,$r1,$start,$count))

        ##Base1RelsPage: $base1RelsPage.getResults().size()<br>
        #set( $base1PageResults = $base1RelsPage.getResults())

        #if( $base1PageResults )
          #set( $addIsSuccessful = $base1Rels.addAll( $base1PageResults))
        #end 

        ##Base1Rels: $base1Rels<br>

        #set( $start = $start + $count)

      #end ##foreach( $page in [0..$page_count])
    
    #end ##if( $totalRels1 && $totalRels1 > 0)

    #set( $start = 0)
    #if( $totalRels2 > 0)
      #set( $page_count = $mathTool.floor($mathTool.div($totalRels2,$pageSize)) )
      #set( $page_count = $page_count + 1)
      #foreach( $page in [0..$page_count])
        #set($base2RelsPage = $documentSource.getRelationships($compareDoc.currentVersion.originDocument.id,$r2,$start,$count))
         #set( $base2PageResults = $base2RelsPage.getResults())

         #if( $base2PageResults )
           #set( $addIsSuccessful = $base2Rels.addAll( $base2PageResults))
         #end 
        
        #set( $start = $start + $count)
      #end ##foreach( $page in [0..$page_count])
    #end ##if( $totalRels2 && $totalRels2 > 0)

    ##BASE1 Rels $base1Rels<br>
    ##BASE2 Rels $base2Rels<br>

    #if( !$base1Rels.size())
      #set( $base1RelsSize = 0)
    #else
      #foreach( $base1 in $base1Rels )
        #set( $base1ID = $base1.id.toString())
        #if( !$allBase1IDs.contains($base1ID) )
          #set( $success = $allBase1IDs.add($base1ID) )
          #set( $success = $uniqueBase1Rels.add( $base1 ))
        #end
      #end 
      #set( $base1RelsSize = $uniqueBase1Rels.size())
    #end ##if( !$base1Rels.size())

    #if( !$base2Rels.size())
      #set( $base2RelsSize = 0)
    #else
      #foreach( $base2 in $base2Rels )
        #set( $base2ID = $base2.id.toString())
        #if( !$allBase2IDs.contains($base2ID) )
          #set( $success = $allBase2IDs.add($base2ID) )
          #set( $success = $uniqueBase2Rels.add( $base2 ))
        #end
        #set( $base2RelsSize = $uniqueBase2Rels.size())
      #end 
    #end  ##if( !$base2Rels.size())

    #### Get Removed Relationships to show in Difference Column ####
    #foreach( $base1ID in $allBase1IDs )
      #if( !$allBase2IDs.contains( $base1ID ))
        #set( $success = $removedRelationship.add( $base1ID ))
      #end 
    #end 

    #foreach( $base2ID in $allBase2IDs )
      #if( !$allBase1IDs.contains( $base2ID ))
        #set( $success = $addedRelationship.add( $base2ID ))
      #end 
    #end 

    ##BASE 1: $allBase1IDs, BASE 2: $allBase2IDs <br>

    #if( $base1RelsSize == $base2RelsSize)
      #if( $base1RelsSize == 0 && $base2RelsSize == 0)
        #set( $relsMatch = true)
      #else
        ##The size might match, but the relationship numbers might not, so need to check each rel.
        #set( $sameRel = 0)
        #foreach( $rel1 in $uniqueBase1Rels )
          #set( $rel1ID = $rel1.id)
         
          #foreach( $rel2 in $uniqueBase2Rels )
            #set( $rel2ID = $rel2.id)
            
            ##REL 1 $rel1ID REL2 $rel2ID <br>
            #if( $rel1ID == $rel2ID)
              #set( $sameRel = $sameRel + 1)
              #break

            #end ##if( $rel1Id == $rel2Id)
          #end ##foreach( $rel2 in $base2Rels)
        #end ##foreach( $rel1 in $base1Rels)
        ##SameRel: $sameRel<br>
        #if( $base1RelsSize == $sameRel)
          #set( $relsMatch = true)
        #else
          #set( $relsMatch = false)
        #end
        ##RelsMatch: $relsMatch
      #end  ##if( $base1RelsSize == 0 && $base2RelsSize == 0)

    #elseif( $allBase1IDs != $allBase2IDs )

      #set( $relsMatch = false )

    #end ##if( $base1RelsSize == $base2RelsSize)

 ##returns $base1RelsSize, $base2RelsSize, $relsMatch, $finalListBase1Rels, $finalListBase2Rels
#end 
##
#########################################################################################################################
##          formatRelationshipRow  
##          Input: base1RelsSize base2RelsSize relsMatch
##          Return: Relationships row for section 1.0 
#########################################################################################################################
#macro( formatRelationshipRow $aVer $bVer $uniqueBase1Rels $uniqueBase2Rels $base1RelsSize $base2RelsSize $relsMatch $removedRelationship $addedRelationship )
#set( $rel1String = "")
#set( $rel1Strings = [])
#set( $rel2String = "")
#set( $rel2Strings = [])

##Now showing finished text for all relationships (can change this back if customer asks)
##set( $cellWidth = 26.04)
#if( $report_showFinText )
  #set( $cellWidth = 26.04)
#else 
  #set( $cellWidth = 40)
#end


#if( $base1RelsSize != 0 || $base2RelsSize != 0)
  #if( $relsMatch == false)
  <tr>
    <td rowspan='2' width="9%" valign=top style='width:9.84%;border-top:none;border-left:
    solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;padding:0in 5.4pt 0in 5.4pt'>
      #formatTableCell( "Relationships", "left", 30)
    </td>
   <td valign=top style='width:${cellWidth}%;border-top:none;border-left:
   none;border-bottom:solid #404040 1.0pt;border-right:solid windowtext 1.0pt;
   mso-border-top-alt:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
      #set( $baselineVersion = "")
      #set( $baselineVersion = "<b>Baselined Item v" + $bVer.versionNumber.toString() + "</b>")
      #formatTableCell( $baselineVersion, "left", 30)
   </td>
	
	##Now showing all 3 columns if we show the relationships, even if we don't show finished text
    ##if( $report_showFinText == true) #### show added and removed relationships 

      <td width="38%" valign=top style='vertical-align:top;width:38.06%;border-top:none;border-left:
      none;border-bottom:solid #404040 1.0pt;border-right:solid windowtext 1.0pt;background:#D9D9D9 !important;padding:0in 5.4pt 0in 5.4pt'>
        <b>Added and Removed Relationships</b>
      </td>

    ##end

     <td valign=top style='width:${cellWidth}%;border-top:none;border-left:
   none;border-bottom:solid #404040 1.0pt;border-right:solid windowtext 1.0pt;
   mso-border-top-alt:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
    #set( $baselineVersion = "")
    #set( $baselineVersion = "<b>Baselined Item v" + $aVer.versionNumber.toString() + "</b>")
    #formatTableCell( $baselineVersion, "left", 30)
   </td>
  </tr>
  <tr>
     <td valign=top style='width:${cellWidth}%;border-top:none;border-left:none;border-bottom:solid #404040 1.0pt;border-right:solid #404040 1.0pt;padding:0in 5.4pt 0in 5.4pt;overflow-wrap:break-word !important;white-space:normal;'>

    #foreach( $versionedRelationship in $uniqueBase1Rels )
      #set( $base1ID = $versionedRelationship.id.toString())
      #set($fromItemId = $versionedRelationship.getFromItem().getValue().get(0))
      #set($fromItemVersion = $versionedRelationship.getFromItem().getValue().get(1))
      #set($toItemId = $versionedRelationship.getToItem().getValue().get(0))
      #set($toItemVersion = $versionedRelationship.getToItem().getValue().get(1))

      #set($fromItem = $documentSource.getItem($fromItemId, $fromItemVersion))
      #set($toItem = $documentSource.getItem( $toItemId, $toItemVersion ))
      
      #set( $fromName = $fromItem.name )
	  #encodeText( $fromName)
	  #set( $fromName = $encodeTextReturn)
      #set( $toName = $toItem.name )
	  #encodeText( $toName)
	  #set( $toName = $encodeTextReturn)
      #set( $fromDocumentKey = $fromItem.documentKey )
      #set( $toDocumentKey = $toItem.documentKey )
	    #set( $fromVersion = $fromItem.documentVersionNumber)
	    #set( $toVersion = $toItem.documentVersionNumber)

      #if( $removedRelationship.contains( $base1ID ))
        ##set( $rel1String = $rel1String.concat("$fromName ($fromDocumentKey) &#8594; $toName ($toDocumentKey)<br>") )
		#set( $rel1String = "$fromName ($fromDocumentKey) &#8594; $toName ($toDocumentKey)<br>")
		#set( $success = $rel1Strings.add( $rel1String))
	  #end 
	  
	  #set( $fromItemDoc = $documentSource.getDocument( $fromItem.id))
	  #set( $toItemDoc = $documentSource.getDocument( $toItem.id))
	  #set( $lk = "")
		#createLink( $fromItemDoc.currentVersion.originDocument, $fromVersion)
		#set( $lk = $createLinkReturn)
         &#8226; <a href="$lk">$!fromName ($!fromDocumentKey)</a>
	  #set( $lk = "")
		#createLink( $toItemDoc.currentVersion.originDocument, $toVersion)
		#set( $lk = $createLinkReturn)
        &#8594; <a href="$lk">$!toName ($!toDocumentKey)</a>
        <br><br>
      #end

    </td>
	##Showing changes in relationships regardless of whether they want to see finished text or not.
    ##if( $report_showFinText == true)
      #foreach( $versionedRelationship in $uniqueBase2Rels )
        #set( $base2ID = $versionedRelationship.id.toString())

        #set($fromItemId = $versionedRelationship.getFromItem().getValue().get(0))
        #set($fromItemVersion = $versionedRelationship.getFromItem().getValue().get(1))
        #set($toItemId = $versionedRelationship.getToItem().getValue().get(0))
        #set($toItemVersion = $versionedRelationship.getToItem().getValue().get(1))

        #set($fromItem = $documentSource.getItem($fromItemId, $fromItemVersion))
        #set($toItem = $documentSource.getItem( $toItemId, $toItemVersion ))

        #set( $fromName = $fromItem.name ) 
		#encodeText( $fromName)
		#set( $fromName = $encodeTextReturn)		
        #set( $toName = $toItem.name ) 
		#encodeText( $toName)
		#set( $toName = $encodeTextReturn)
        #set( $fromDocumentKey = $fromItem.documentKey )
        #set( $toDocumentKey = $toItem.documentKey )

        #if( $addedRelationship.contains( $base2ID ))
          ##set( $rel2String = $rel2String.concat("$fromName ($fromDocumentKey) &#8594; $toName ($toDocumentKey)<br>") )
		    #set( $rel2String = "$fromName ($fromDocumentKey) &#8594; $toName ($toDocumentKey)<br>")
		    #set( $success = $rel2Strings.add( $rel2String))
        #end 
        #end   ##added border:2px solid #ccffcc;
            ## removed border:2px solid #ec1c24;

        <td width="38%" valign=top style='width:38.06%;border-top:none;border-left:none;;overflow-wrap:break-word !important;
        white-space:normal;border-bottom:solid #404040 1.0pt;border-right:solid #404040 1.0pt;padding:0in 5.4pt 0in 5.4pt'>
		  #foreach( $rel1 in $rel1Strings)
				&#8226; <span class="diff-html-removed" style='color:#ec1c24;margin-top:3pt;margin-bottom:3pt;'>$!rel1</span>
				<br>
		  #end
          #foreach( $rel2 in $rel2Strings)
            &#8226; <span class="diff-html-added"style='color:#00a551;margin-top:3pt;margin-bottom:3pt;'>$!rel2</span>
			<br>
		  #end 
        </td>
    
    ##end 

       <td valign=top style='width:${cellWidth}%;border-top:none;border-left:
   none;border-bottom:solid #404040 1.0pt;border-right:solid #404040 1.0pt;white-space:normal;padding:0in 5.4pt 0in 5.4pt;;overflow-wrap:break-word !important;'>
 
      #foreach( $versionedRelationship in $uniqueBase2Rels )
        
        #set($fromItemId = $versionedRelationship.getFromItem().getValue().get(0))
        #set($fromItemVersion = $versionedRelationship.getFromItem().getValue().get(1))
        #set($toItemId = $versionedRelationship.getToItem().getValue().get(0))
        #set($toItemVersion = $versionedRelationship.getToItem().getValue().get(1))

        #set($fromItem = $documentSource.getItem($fromItemId, $fromItemVersion))
        #set($toItem = $documentSource.getItem( $toItemId, $toItemVersion ))
       
        #set( $fromName = $fromItem.name )
		#encodeText( $fromName)
		#set( $fromName = $encodeTextReturn)	
        #set( $toName = $toItem.name )
		#encodeText( $toName)
		#set( $toName = $encodeTextReturn)
        #set( $fromDocumentKey = $fromItem.documentKey )
        #set( $toDocumentKey = $toItem.documentKey )

		#set( $fromItemDoc = $documentSource.getDocument( $fromItem.id))
	    #set( $toItemDoc = $documentSource.getDocument( $toItem.id))
		#set( $lk = "")
		#createLink( $fromItemDoc.currentVersion.originDocument, $fromItemVersion)
		#set( $lk = $createLinkReturn)
        &#8226; <a href="$!lk">$!fromName ($!fromDocumentKey)</a>
		#set( $lk = "")
		#createLink( $toItemDoc.currentVersion.originDocument, $toItemVersion)
		#set( $lk = $createLinkReturn)
        &#8594; <a href="$!lk">$!toName ($!toDocumentKey)</a>
         <br> <br>
     
        #end ##foreach( $versionedRelationship in $base2Rels )
  
    </td>
  </tr>
  #end ##if( $relsMatch == false)

#end ##if( $base1RelsSize != 0 || $base2RelsSize != 0)

#end
##
#########################################################################################################################		
## 		Helper: Creates a link to the document																		  ###
##		@d - document: document you are creating the link for													      ###
##		@return - string: link you are creating																	      ###
#########################################################################################################################
#macro( createLink $d $versionNumber)	

	#set( $createLinkReturn = "")
	#set( $projectId = $project.id.toString())
	#set( $docId = $d.id)
	#if( $d.documentType.display == "Test Plan")
		#set( $createLinkReturn = $baseUrl + '/perspective.req#/testPlans/' + $docId.toString() + '/home/?projectId=' + $projectId)
	#elseif( $d.documentType.display == "Test Run")
		#set( $createLinkReturn = $baseUrl + '/perspective.req#/testRuns/' + $docId.toString() + '?projectId=' + $projectId)
	#elseif( $d.documentType.display == "Test Cycle")
		#set( $createLinkReturn = $baseUrl + '/perspective.req#/testPlans/' + $docId.toString() + '?projectId=' + $projectId)
	#else
		#set( $createLinkReturn = $baseUrl + '/perspective.req#/items/' + $docId.toString() + '?projectId=' + $projectId)
	#end
	#if( $versionNumber)
		#set( $createLinkReturn = $createLinkReturn + "&version=" + $versionNumber)
	#end
	##$link

#end
#########################################################################################################################
##          formatVersionComments
##          Input: $next $total $baseOrigin
##          Return: Version Details Row for section Updtate Items 1.0 ready for opening in word
#########################################################################################################################
#macro( formatVersionCommentRow $next $total $baseOrigin )
  #set( $colSpan = 3)
  #if( $report_showFinText == true || $includeRelationships == true)
    #set( $colSpan = 4)
  #else
    #set( $colSpan = 3)
  #end ##if( $report_showFinText == true)
    <tr style='mso-yfti-irow:4'>
   <td width="100%" colspan=$!colSpan valign=top style='width:100.0%;border:solid #404040 1.0pt;
   mso-border-themecolor:text1;mso-border-themetint:191;border-top:none;
   mso-border-top-alt:solid #404040 .5pt;mso-border-top-themecolor:text1;
   mso-border-top-themetint:191;mso-border-alt:solid #404040 .5pt;mso-border-themecolor:
   text1;mso-border-themetint:191;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal align=center style='margin-bottom:0in;text-align:center;
   line-height:normal;mso-element:frame;mso-element-frame-hspace:9.0pt;
   mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
   column;mso-element-top:.05pt;mso-height-rule:exactly'><span
   style='color:black;mso-color-alt:windowtext'><b>Version Details</b></span></p>
   </td>
  </tr>
<td width="100%" colspan=$colSpan valign=top style='width:100.0%;border:solid #404040 1.0pt;
   mso-border-themecolor:text1;mso-border-themetint:191;border-top:none;
   mso-border-top-alt:solid #404040 .5pt;mso-border-top-themecolor:text1;
   mso-border-top-themetint:191;mso-border-alt:solid #404040 .5pt;mso-border-themecolor:
   text1;mso-border-themetint:191;padding:0in 5.4pt 0in 5.4pt;height:21.1pt'>
    
    #foreach( $n in [1..$total] )
      <p class=MsoNormal style='margin-left:0.0in;'>
      #set($v = $documentSource.getVersionByDocAndVersionNumber( $baseOrigin, $next ))
      #if( $v )
        <b>Version: </b>v$v.versionNumber
        - $userSource.getUserFullName($v.createdBy)
        - $dateTool.format('MMM d, yyyy',$v.createdDate)
        </p>
        <p class=MsoNormal style='margin-left:0.5in;'>
        <b>Change Details: </b>#if($v.comments)$v.comments #end
        </p>
        <p class=MsoNormal style='margin-left:0.5in;'>
        #if($v.userComment)
        <b>User Comment: </b>$v.userComment
        </p>
        #else
        </p>
        #end ##if($v.userComment)
      #end ##if( $v )
      #set($next = $next + 1)
      #if($next == $total)
        #break
      #end ##if($next == $total)
    #end ##foreach( $n in [1..$total] )

    </td>
  </tr>

#end 
#########################################################################################################################
##          formatDeletedItems 
##          Input: deleted
##          Return: Deleted Items Section 2.0 formatted for Word
#########################################################################################################################
#macro( formatDeletedItems $deleted )

<h1 style='page-break-after:avoid;page-break-before:always !important;text-align:left !important;'>Deleted Items</h1>
  #if( $deleted.size() > 0 )
    

      #foreach($k in $deleted)
		#set( $kName = $k.name )
		#encodeText( $kName)
		#set( $kName = $encodeTextReturn)
        <h2>$k.documentKey $kName</h2>

	  <table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
		 style='border-collapse:collapse;border:none;mso-border-alt:solid #404040 .5pt;
		 mso-border-themecolor:text1;mso-border-themetint:191;mso-yfti-tbllook:1184;mso-border-insideh:.5pt solid #404040;
		 mso-border-insideh-themecolor:text1;mso-border-insideh-themetint:191;
		 mso-border-insidev:.5pt solid #404040;mso-border-insidev-themecolor:text1;
		 mso-border-insidev-themetint:191;width:100%;margin:0'>
      #if( $k.description.length() > 0)
	  <tr>
        <td width="100%" valign="top"style='border:solid windowtext 1.0pt;mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 5.4pt 5.4pt'>
			<p class=MsoNormal style='margin-left:0in'>
              <b>Description</b>
			</p>
			#if( $k.description) #formatTableCell( $k.description, "left", 300) #end
		</td>
	  </tr>
	  #end
	  <tr>
		<td width="100%" valign="top"style='border:solid windowtext 1.0pt;mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 5.4pt 5.4pt'>
			<p class=MsoNormal style='margin-left:0in'>
              <b>Relationships</b>
			</p>
		<p class=MsoNormal style='margin-left:0in'>

            Deleted items may have had relationships before deletion, but those relationships are not accessible upon deletion.

          </p>
        </td>
      </tr>
	  </table>
      #end ##foreach($k in $deleted)
    
  #else 
     <p class=MsoNormal>No items were deleted between baselines.</p>
  #end 

#end 
#########################################################################################################################
##          formatAddedItems
##          Input: $baseline2Items 
##          Return: Added Items section 3.0 formatted for Word
#########################################################################################################################

#macro( formatAddedItems $baseline2Items )
  #set( $showAdded = [] )
  #set( $addedBase2Rels = [] )

  #foreach($baseline2Item in $baseline2Items)
    #if(!$baseline1Ids.contains($baseline2Item.globalId))
      #set( $success = $showAdded.add($baseline2Item))
    #end
  #end


<h1 style='page-break-after:avoid;page-break-before:always !important;text-align:left !important;'>Added Items</h1>

  #if( $showAdded.size() > 0 )

    #foreach($cDoc in $showAdded)
    <h2>
      #set( $lk = "")
      #createLink( $cDoc.currentVersion.originDocument, $cDoc.currentVersion.versionNumber.toString())
	  #set( $lk = $createLinkReturn)
	  
	  #encodeText( $cDoc.name)
	  #set( $docName = $encodeTextReturn)
      <a style='font-size:12pt !important;' href="$!lk">$cDoc.documentKey</a> $docName
    </h2>


    <table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
    style='width:100%;border-collapse:collapse;border:none;mso-border-alt:solid #404040 .5pt;
    mso-border-themecolor:text1;mso-border-themetint:191;mso-yfti-tbllook:1184;mso-border-insideh:.5pt solid #404040;
    mso-border-insideh-themecolor:text1;mso-border-insideh-themetint:191;
    mso-border-insidev:.5pt solid #404040;mso-border-insidev-themecolor:text1;
    mso-border-insidev-themetint:191;margin:0;'>
   
    #if( $cDoc.description.length() > 0)
    <tr>
      <td width="100%" valign="top"style='border:solid windowtext 1.0pt;mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 5.4pt 5.4pt'>
        <p class=MsoNormal style='margin-left:0in'><b>Description</b></p>
          #if( $cDoc.description) #formatTableCell( $cDoc.description, "left", 300) #end
         </td>
    </tr>
		#end
		  

    #if( $includeRelationships == true)
    <tr>
      <td width="100%" valign="top" style='border:solid windowtext 1.0pt; 
      mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 0in 5.4pt'>
      <p class=MsoNormal style='margin-left:0in'>

      <b>Relationships</b>

      </p>

	  #set( $addedRels = false)
	  #set( $addedPageResults = [])
	  #set( $addedBase2Rels = [])
      #set( $start = 0)
      #set( $i = 20)
      ##CDocId: $cDoc.id, B2: $r2, Start: $start, Count: $count, <br>
      #set($addedRels = $documentSource.getRelationships($cDoc.id,$r2,$start,$i))

      #set( $addedPageResults = $addedRels.getResults())

      #if( $addedPageResults )
      #set( $addIsSuccessful = $addedBase2Rels.addAll( $addedPageResults ))
      #end 
      ##AddedRels: $addedBase2Rels.getResults().size()<br>

      #if( $addedBase2Rels.size() > 0)

      <p class=MsoNormal style='margin-left:0in'>

      #foreach( $versionedRelationship in $addedBase2Rels )

		  #set($fromItemId = $versionedRelationship.getFromItem().getValue().get(0))
		  #set($fromItemVersion = $versionedRelationship.getFromItem().getValue().get(1))
		  #set($toItemId = $versionedRelationship.getToItem().getValue().get(0))
		  #set($toItemVersion = $versionedRelationship.getToItem().getValue().get(1))

		  #set($fromItem = $documentSource.getItem($fromItemId , $fromItemVersion))
		  #set($toItem = $documentSource.getItem($toItemId , $toItemVersion))

		  #*<a href="perspective.req?projectId=$fromItem.project.id&docId=$fromItem.id">$fromItem.documentKey</a>
		  &#8594; <a href="perspective.req?projectId=$toItem.project.id&docId=$toItem.id">$toItem.documentKey</a>
		  <br> <br>*#
		  #set( $lk = "")
		  #createLink( $fromItem $fromItemVersion)
		  #set( $lk = $createLinkReturn)
		  #encodeText( $fromItem.name)
		  #set( $fromItemName = $encodeTextReturn)
		  <a href='$lk'>$fromItemName ($fromItem.documentKey)</a>
		  #set( $lk = "")
		  #createLink( $toItem $toItemVersion)
		  #set( $lk = $createLinkReturn)
		  #encodeText( $toItem.name)
		  #set( $toItemName = $encodeTextReturn)
		  &#8594; <a href='$lk'>$toItemName ($toItem.documentKey)</a>
               <br> <br>
      #end ##foreach( $versionedRelationship in $addedRels.getResults() )

      </p>
      #else
		<p class=MsoNormal style='margin-left:0in'>This item does not have any related items.</p>
      #end ##if( $addedRels.getResults().size() > 0)

            
        </td>
      </tr>  
	  </table>
      #end ##if( $includeRelationships == true)

    #end  ##foreach($cDoc in $showAdded)
  

  #else 
     <p class=MsoNormal>No items have been added between baselines.</p>
  #end 

#end 
#######################################################################################################################
#macro( encodeText $textToClean)
	
	#set( $encodeTextReturn = "")
	###set($textValCleaned = $textToClean.replaceAll("(<[^>]+>)|[^*]","$1"))

	#set($textValCleaned = $textToClean.replaceAll("<[^>]+?[^>]*?>.*?<\/.*>?|([^*])","$1"))
	
	#if($textValCleaned != '')
		##encode
		#set($encodeTextReturn = $escapeTool.url($textToClean))
	#else
		#set($encodeTextReturn = $textToClean)
	#end
#end
##
##
#########################################################################################################################
##  5.3 BODY_MACRO - Creates the body of the report
##          Input: None
##          Return: body of the report
#########################################################################################################################
#macro( createBody )

<body lang=EN-US link=blue vlink="#954F72" style='tab-interval:.5in'>

<div class=WordSectionLandscape>

## Get information from the document container 
#if( $containerDoc ) ##
  #set( $title = $containerDoc.name) ##
  #set( $docNumber = $velocityReportUtil.getValueForField( $containerDoc, "document_id", $dateFormat )) ##
  #set( $docStatus = $velocityReportUtil.getValueForField( $containerDoc, "document_status", $dateFormat )) ##
  #set( $docAuthors = $velocityReportUtil.getValueForField( $containerDoc, "authors", $dateFormat )) ##
  #set( $docApprovers = $velocityReportUtil.getValueForField( $containerDoc, "approvers", $dateFormat )) ##
  #set( $docChangeHistory = $velocityReportUtil.getValueForField( $containerDoc, "change_history", $dateFormat )) ##
#else ##
  #set( $title = "Baseline to Baseline Diff Report" ) ##
#end ##
 ##


#################### extract selected baseline 1 items #################

#getBaselineItems($r1) ## returns $baselineItems
#set($baseline1Items = $baselineItems)
#set($baseline1Ids = [])

#foreach($baseline1Item in $baseline1Items)
    #getFields($baseline1Item)
    ##Load list of original IDs of first baseline ids for update & deletion check
    #set($success = $baseline1Ids.add($baseline1Item.globalId))
#end



#################### extract selected baseline 2 items #################

#getBaselineItems($r2) ## returns $baselineItems
#set($baseline2Items = $baselineItems)
#set($baseline2Ids = [])

#foreach($baseline2Item in $baseline2Items)
    #getFields($baseline2Item)
    ##Load list of original IDs of first baseline ids for update & deletion check
    #################### Load list of original IDs of second baseline ids for update & deletion check #################
    #set($success = $baseline2Ids.add($baseline2Item.globalId))
    ##set($base2Doc = $docDao.getDocument($baseline2Item.id))
	#set($base2Doc = $documentSource.getVersionByDocumentId($baseline2Item.id).document)
    #if($compareDocs.add($base2Doc))#end
#end



#################### Load Selected Baseline Objects #################
#set( $bData1 = $baselineSource.getBaseLine( $mathTool.toInteger( $report_baseline1 )))
#set( $bData2 = $baselineSource.getBaseLine( $mathTool.toInteger( $report_baseline2 )))






#########################################################################################################################
##
##  5.3.1 WORD_WORK_AROUND_HEADER_FOOTER
##
#########################################################################################################################
##--------------------------------------------------------------
##  Headers and Footers                                        #
##--------------------------------------------------------------
#if( $format == "doc" )
  <table style='margin-left:15in'>
    <tr style='height:.1in;mso-height-rule:exactly'>
      <td>
        <div style='mso-element:footnote-separator' id=fs>

          <p class=MsoNormal><span style='mso-special-character:footnote-separator'><![if !supportFootnotes]>

          <hr align=left size=1 width="33%">

          <![endif]></span></p>

        </div>

        <div style='mso-element:footnote-continuation-separator' id=fcs>

          <p class=MsoNormal><span style='mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

          <hr align=left size=1>

          <![endif]></span></p>

        </div>

        <div style='mso-element:endnote-separator' id=es>

          <p class=MsoNormal><span style='mso-special-character:footnote-separator'><![if !supportFootnotes]>

          <hr align=left size=1 width="33%">

          <![endif]></span></p>

        </div>

        <div style='mso-element:endnote-continuation-separator' id=ecs>

          <p class=MsoNormal><span style='mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

          <hr align=left size=1>

          <![endif]></span></p>

        </div>

        ## Content Header - this is where you would change the Word header
        <div style='mso-element:header' id=pageHeader>

          <p class=MsoHeader>
          <w:PTab Alignment="CENTER" RelativeTo="MARGIN" Leader="NONE"></w:PTab>
          <w:PTab Alignment="RIGHT" RelativeTo="MARGIN" Leader="NONE"></w:PTab>$title</p>

        </div>

        ## Content Footer - change here for Word footer
        <div style='mso-element:footer' id=pageFooter>

          <p class=MsoFooter>$project.name
            <w:PTab Alignment="CENTER" RelativeTo="MARGIN" Leader="NONE"></w:PTab><span style='color:gray'>$project.organization.name</span>
            <w:PTab Alignment="RIGHT" RelativeTo="MARGIN" Leader="NONE"></w:PTab>
            Page&nbsp;<!--[if supportFields]><span style='mso-element:field-begin'></span>PAGE <span style='mso-element:field-separator'></span>
            <![endif]-->2<!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->&nbsp;of&nbsp;<span style='mso-field-code:" NUMPAGES  "'>4</span></p><w:PTab Leader="NONE"></w:PTab>
          </p>

        </div>

        ## Title Page Header
        <div style='mso-element:header' id=titlepageHeader>

          <p class=MsoHeader>&nbsp;</p>

          <p class=MsoHeader align=right style='text-align:right'>&nbsp;</p>

        </div>

        ## Title Page Footer
        <div style='mso-element:footer' id=titlepageFooter>

          <p class=MsoFooter style='text-align:center'>
            $project.organization.name - This data has been generated from the authoritative source of Jama Connect.
        </p><w:PTab Leader="NONE"></w:PTab>

        </div>
      </td>
    </tr>
  </table>


#elseif( $format == "pdf" )
#########################################################################################################################
##
##  5.3.2 PDF_HEADER 
##
#########################################################################################################################
<div class="pageHeader" align="center">  
  <table class="pageHeader-table" style='border:none;'>
      <tr>
        <td style='border:none;text-align:left;width:50%;'><p class=MsoHeader></p></td>
        <td rowspan="1" style='border:none;text-align:right;width:50%;'><p class=MsoHeader>$title</p></td>
      </tr>
  </table>
</div>
##Change this for the PDF footer in everywhere but the first page
<div class="pageFooter" align="center">
  <table class="pageFooter-table" style='border:none;'>
    <tbody>
      <tr>
        <td style='border:none;text-align:left;width:33%;'>
          <p class=MsoFooter>$project.name</p>
        </td>
        <td style='border:none;text-align:center;width:33%;'>
           <p class=MsoFooter>$project.organization.name</p>
        </td>
        <td style='border:none;text-align:right;width:33%;'>
          <p class=MsoFooter>Page <span id="pageNumber"></span> of <span id="totalPages"></span></p>
        </td>
      </tr>
    </tbody>
  </table>
</div>

##Change this for the PDF title page header
<div class="titlepageHeader">
    <p class=MsoHeader>&nbsp;</p>
    <p class=MsoHeader align=right style='text-align:right'>&nbsp;</p>
</div>
##Change this for the PDF title page footer
<div class="titlepageFooter">
  <table class="pageFooter-table" style='border:none;'>
    <tbody>
      <tr>
        <td rowspan="2" style='border:none;text-align:center;'>
         <p class=MsoFooter>
           $project.organization.name - This data has been generated from the authoritative source of Jama Connect.
          </p>
        </td>
       </tr>
    </tbody>
  </table>
</div>


#########################################################################################################################
#end ##if( $format == "doc")...#elseif($format == "pdf")...## 



#########################################################################################################################
## **********************************************************************************************************************
##
##  5.3.4 TITLE_PAGE: Title Page
##
##  >>>> Customize this section to replace the title page <<<< ##>
##
## **********************************************************************************************************************
#########################################################################################################################
##
<div class='TitlePage'> ## target element if ToC needs to follow Title Page PDF reports ## 

#if($format=='doc')
	#set( $tableMargins='mso-table-overlap:never;mso-table-lspace:9.35pt;margin-left:1.3in;margin-top:3in;mso-table-rspace:9.35pt;margin-right:7.1pt;
	mso-table-anchor-vertical:page;mso-table-anchor-horizontal:column;mso-table-left:right;mso-table-top:216.05pt;')
	#set( $tdPadding = 'padding:3pt 0pt 3pt 8pt;')
	#set( $tableWidth=80)
#elseif( $format=='pdf')
	#set( $tableMargins='margin-top:150pt;margin-left:94pt;margin:auto')
	#set( $tdPadding = 'padding:4pt 0pt 0 8pt;')
	#set( $tableWidth=100)
#end

## Main Title Page Content
#if( $format == 'doc')
  <div align=center style='margin-top:80pt;'>
  #set( $paddingTitle = 3)
#else 
  <div style='width:100%;height:120pt;'></div>
  #set( $paddingTitle = 6)
#end 


<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:26.0pt;line-height:107%;
color:#595959'>$project.name<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;line-height:normal'><i><span
style='font-size:18.0pt'>Baseline to Baseline
Comparison Report<o:p></o:p></span></i></p>

<p class=MsoNormal align=center style='text-align:center;line-height:normal'><span
style='font-size:12.0pt;'>Report Exported by
$!userSource.currentUser.fullName on $dateTool.get( "dd MMMM, yyyy")</span></p>

##if( $format == 'doc')
<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:26.0pt;line-height:107%;font-family:"Arial",sans-serif;
color:#595959'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:26.0pt;line-height:107%;font-family:"Arial",sans-serif;
color:#595959'><o:p>&nbsp;</o:p></span></p>
##end

#if( $format == "doc")
<div align=center>
#end

#if( $format == 'doc')
<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width="70%"
 style='width:70.0%;border-collapse:collapse;border:none;mso-border-alt:solid #BFBFBF .5pt;
 mso-yfti-tbllook:1184;mso-padding-alt:0in 5.4pt 0in 5.4pt;mso-border-insideh:
 .5pt solid #BFBFBF;mso-border-insidev:.5pt solid #BFBFBF'>
#else
<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width="70%"
 style='width:70.0%;border-collapse:collapse;border:none;mso-border-alt:solid #BFBFBF .5pt;
 mso-yfti-tbllook:1184;mso-padding-alt:0in 5.4pt 0in 5.4pt;mso-border-insideh:
 .5pt solid #BFBFBF;mso-border-insidev:.5pt solid #BFBFBF;$tableMargins'>
#end
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;height:22.9pt'>
  <td width="50%" style='width:50.0%;border:solid #BFBFBF 1.0pt;mso-border-alt:
  solid #BFBFBF .5pt;background:#F2F2F2;$!tdPadding;height:
  22.9pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
  style='font-size:10.0pt;color:black;
  mso-color-alt:windowtext'>FIRST BASELINE</span></b><b><span style='font-size:
  10.0pt;font-family:"Arial",sans-serif'><o:p></o:p></span></b></p>
  </td>
  <td width="50%" style='width:50.0%;border:solid #BFBFBF 1.0pt;border-left:
  none;mso-border-left-alt:solid #BFBFBF .5pt;mso-border-alt:solid #BFBFBF .5pt;
  background:#F2F2F2;$!tdPadding;height:22.9pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
  style='font-size:10.0pt;color:black;
  mso-color-alt:windowtext'>SECOND BASELINE</span></b><b><span
  style='font-size:10.0pt;font-family:"Arial",sans-serif'><o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1;height:22.0pt'>
  <td width="50%" style='width:50.0%;border-top:none;border-left:solid #BFBFBF 1.0pt;
  border-bottom:none;border-right:solid #BFBFBF 1.0pt;mso-border-top-alt:solid #BFBFBF .5pt;
  mso-border-top-alt:solid #BFBFBF .5pt;mso-border-left-alt:solid #BFBFBF .5pt;
  mso-border-right-alt:solid #BFBFBF .5pt;$!tdPadding;
  height:22.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-size:10.0pt'>$!bData1.name<o:p></o:p></span></p>
  </td>
  <td width="50%" style='width:50.0%;border:none;border-right:solid #BFBFBF 1.0pt;
  mso-border-top-alt:solid #BFBFBF .5pt;mso-border-left-alt:solid #BFBFBF .5pt;
  mso-border-top-alt:solid #BFBFBF .5pt;mso-border-left-alt:solid #BFBFBF .5pt;
  mso-border-right-alt:solid #BFBFBF .5pt;padding:0in 5.4pt 0in 5.4pt;$!tdPadding;
  height:22.0pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-size:10.0pt'>$!bData2.name<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2;height:17.5pt'>
  <td width="50%" style='width:50.0%;border-top:none;border-left:solid #BFBFBF 1.0pt;
  border-bottom:none;border-right:solid #BFBFBF 1.0pt;mso-border-left-alt:solid #BFBFBF .5pt;
  mso-border-right-alt:solid #BFBFBF .5pt;$!tdPadding;
  height:17.5pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-size:10.0pt'>Created By: $!userSource.getUserFullName( $mathTool.toInteger($bData1.createdBy))</span></p>
  </td>
  <td width="50%" style='width:50.0%;border:none;border-right:solid #BFBFBF 1.0pt;
  mso-border-left-alt:solid #BFBFBF .5pt;mso-border-left-alt:solid #BFBFBF .5pt;
  mso-border-right-alt:solid #BFBFBF .5pt;padding:0in 5.4pt 0in 5.4pt;$!tdPadding;
  height:17.5pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-size:10.0pt'>Created By: $!userSource.getUserFullName($mathTool.toInteger($bData2.createdBy))</span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3;mso-yfti-lastrow:yes;height:17.5pt'>
  <td width="50%" style='width:50.0%;border:solid #BFBFBF 1.0pt;border-top:
  none;mso-border-left-alt:solid #BFBFBF .5pt;mso-border-bottom-alt:solid #BFBFBF .5pt;
  mso-border-right-alt:solid #BFBFBF .5pt;$!tdPadding;
  height:17.5pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-size:10.0pt'>Created Date: $dateTool.format('dd MMM, yyyy', $!bData1.createdDate)</span></p>
  </td>
  <td width="50%" style='width:50.0%;border-top:none;border-left:none;
  border-bottom:solid #BFBFBF 1.0pt;border-right:solid #BFBFBF 1.0pt;
  mso-border-left-alt:solid #BFBFBF .5pt;mso-border-left-alt:solid #BFBFBF .5pt;
  mso-border-bottom-alt:solid #BFBFBF .5pt;mso-border-right-alt:solid #BFBFBF .5pt;$!tdPadding;height:17.5pt'>
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal'><span
  style='font-size:10.0pt'>Created Date: $dateTool.format("dd MMMM, yyyy", $!bData2.createdDate)</p>
  </td>
 </tr>
</table>

#if( $format=="doc")
</div>
#end

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

#if( $format=='pdf')
   <p style="page-break-after:always;"></p>
#end 

</div> ## <div class=TitlePage>
## Page Break
<br clear=all style='mso-special-character:line-break;page-break-before:always'>

#if( $format == "doc" )
#########################################################################################################################
##
##  5.3.5 TABLE_OF_CONTENTS
##
#########################################################################################################################

## Title
<p class=MsoTocHeading>Table of Contents</p>

## Word field for a table of contents
<div>
  <p class=MsoNormal>
    <!--[if supportFields]><span style='mso-element:field-begin'></span> 
    TOC \h \o 1-7 \* MERGEFORMAT <span
    style='mso-element:field-separator'></span><![endif]--><span
    style='color:red;mso-no-proof:yes'>Select the entire document (Windows: Ctrl+a) (Mac: Command+a) and press F9 to update the TOC and Cross-References</span><!--[if supportFields]><span
    style='mso-element:field-end'></span><![endif]--></p>
</div>

## Page Break
<br clear=all style='mso-special-character:line-break;page-break-before:always'>

#########################################################################################################################
##
##  5.3.6 TABLE_OF_FIGURES
##
#########################################################################################################################

#if( $tableOfFigures )

## Title
<p class=MsoTocHeading>Table of Figures</p>

## Word field for a table of figures
<p class=MsoNormal style='font-size:11pt;'>
  <!--[if supportFields]><span style='mso-element:field-begin'></span>TOC \h \z \c &quot;Figure&quot;
  <span style='mso-element:field-separator'></span></span></b><![endif]-->
  <span style='color:red;mso-no-proof:yes'>Select the entire document (Windows: Ctrl+a) (Mac: Command+a) and press F9 to update the TOC and Cross-References</span>
  <!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->
</p>

## Page Break
<br clear=all style='mso-special-character:line-break;page-break-before:always'>

#end

#########################################################################################################################
##
##  5.3.7 TABLE_OF_TABLES
##
#########################################################################################################################

#if( $tableOfTables )
## Title
<p class=MsoTocHeading>Table of Tables</p>

## Word field for a table of tables
<p class=MsoNormal style='font-size:11pt;'>
  <!--[if supportFields]><span style='mso-element:field-begin'></span>TOC \h \z \c &quot;Table&quot; 
  <span style='mso-element:field-separator'></span><![endif]-->
  <span style='color:red;mso-no-proof:yes'>Select the entire document (Windows: Ctrl+a) (Mac: Command+a) and press F9 to update the TOC and Cross-References</span>
  <!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->
</p>

## Page Break
<br clear=all style='mso-special-character:line-break;page-break-before:always'>
#end

#end ##if( $format == "doc" )

#########################################################################################################################
##
##  5.3.8 CHANGE_HISTORY
##
#########################################################################################################################

#if( $docChangeHistory && $docChangeHistory != "" )
  <p class=MsoTocHeading>Change History</p>
  #formatRichText($docChangeHistory)

  <p class=MsoNormal>&nbsp;</p>

  ## Page Break
  <br clear=all style='mso-special-character:line-break;page-break-before:always'>
#end



#########################################################################################################################
##
##  5.3.9 OUTPUT_DOCUMENT_LIST: Generate each item in DocumentList
##
#########################################################################################################################
<div class="reportBodyCounterContainer"> #### this div initializes the counter to number items in PDF report

<h1 style='text-align:left !important;page-break-after:avoid !important;'>Updated Items</h1>
#set( $hasUpdated = false)
  ##----  Build Section 1.0 Updated Items  ----##

  #foreach( $baseline1Item in $baseline1Items)

	#set( $baseDoc = $documentSource.getVersionByDocumentId($baseline1Item.id).document)
    #set( $baseOrigin = $documentSource.getVersionByDocumentId($baseDoc.id).originDocument.id)

    #if( $baseline2Ids.contains( $baseline1Item.globalId ) )
      #set( $compareItemIndex = $baseline2Ids.indexOf( $baseline1Item.globalId ))
   
      #if($compareDocs.size() > $compareItemIndex)
        #set( $compareDoc = $compareDocs[$compareItemIndex])

      #end
 
      #set( $bVer = $documentSource.getVersionByDocumentId( $baseDoc.id) )
      #set( $aVer = $documentSource.getVersionByDocumentId( $compareDoc.id) )

      #set( $relsMatch = true )

      ##------ Check for relationships changes ------##
      #if( $includeRelationships == true)
        #buildRelationshipCounts( $baseDoc $compareDoc $r1 $r2 ) 
        ## returns $base1RelsSize, $base2RelsSize, $relsMatch, $base1Rels $base2Rels
       
      #end ##if( $includeRelationships == true)

      ##Basedoc: $baseDoc.id Compare: $compareDoc.id<br> 
      #if( $baseDoc.id != $compareDoc.id || $relsMatch == false)
    
        ##BASE ID $baseDoc.id- $baseDoc.currentVersion.versionNumber | COMPARE $compareDoc.id-$compareDoc.currentVersion.versionNumber|RELS MATCH $relsMatch  <br>
        #set( $index = $count - 1) ##COUNT $count 
        #set( $spot = 0)
		    #set( $hasUpdated = true)
		
        #formatUpdatedItemsHeader( $baseDoc $bData1 $bData2 )

        ##------ go through list of item types and find the one that matched the item being checked ------##
        #set($foundChg = 0)

        #foreach($dl in $docList)
		      #set( $fields = $dl.docFields)
		      #set( $docTypeId = $dl.docTypeId)
		  
          #if( $docTypeId == $baseDoc.documentType.id )

          ##------ once you have the item type, check field values and build comparison btwn baseDoc and compareDoc------##

            #foreach($f in $fields)
			       #set( $b = $f.fieldName)
              ##if( $spot != 0 )
                #if( ($report_excludeStatus == false) || ( $report_excludeStatus == true && $b != "status" && $b != "modifiedDate" ))
				  #if( $baseDoc.documentType.display == "Test Run" || $baseDoc.documentType.display == "Test Cycle" || 
						$baseDoc.documentType.display == "Test Plan")
					#if( $baseDoc.documentType.display == "Test Run")
						#set( $baseDoc = $testSource.getTestRun( $baseDoc.id))
						#set( $compareDoc = $testSource.getTestRun( $compareDoc.id))
					#elseif( $baseDoc.documentType.display == "Test Cycle")
						#set( $baseDoc = $testSource.getTestCycle( $baseDoc.id))
						#set( $compareDoc = $testSource.getTestCycle( $compareDoc.id))
					#elseif( $baseDoc.documentType.display == "Test Plan")
						#set( $baseDoc = $testSource.getTestPlan( $baseDoc.id))
						#set( $compareDoc = $testSource.getTestPlan( $compareDoc.id))
					#end
					
					#set( $baseDocValue = "")
					#set( $compareDocValue = "")

					#if( $b == "description")
						#set( $baseDocValue = $baseDoc.description)
						#set( $compareDocValue = $compareDoc.description)
					#elseif( $b == "testRunSteps" || $b == "testCaseSteps")
						##set( $baseDocValue = $baseDoc.testRunSteps)
						##set( $compareDocValue = $compareDoc.testRunSteps)
						
						#formatTestSteps( $b $baseDoc $compareDoc)
						#set( $baseDocValue = $beforeStepText)
						#set( $compareDocValue = $afterStepText)
						##BASEDOC: $baseDocValue<br>
						##COMPARE: $compareDocValue<br>
					#elseif( $b == "actualResults")
						#set( $baseDocValue = $baseDoc.actualResults)
						#set( $compareDocValue = $compareDoc.actualResults)
						##BASE: $baseDocValue, Actual:$compareDocValue<br>
					#elseif( $b == "assignedTo")
						#set( $baseDocValue = $baseDoc.assignedTo.fullName)
						#set( $compareDocValue = $compareDoc.assignedTo.fullName)
					#elseif( $b == "duration")
						#set( $baseDocValue = $baseDoc.duration)
						#set( $compareDocValue = $compareDoc.duration)
					#elseif( $b == "executionDate")
						#set( $baseDocValue = $baseDoc.executionDate)
						#set( $compareDocValue = $compareDoc.executionDate)
					#elseif( $b == "forcePassed")
						#set( $baseDocValue = $baseDoc.forcePassed)
						#set( $compareDocValue = $compareDoc.forcePassed)
					#else
						#set( $baseDocValue = $velocityReportUtil.getValueForField( $baseDoc, $b, $dateFormat))
						#set( $compareDocValue = $velocityReportUtil.getValueForField( $compareDoc, $b, $dateFormat ))
					#end
					##B: $b, BASEDOCVALUE: $baseDocValue, $baseDoc.description<br>COMP VALUE: $compareDocValue<br>
				  #else
					#set( $baseDocValue = $velocityReportUtil.getValueForField( $baseDoc, $b, $dateFormat))
					#set( $compareDocValue = $velocityReportUtil.getValueForField( $compareDoc, $b, $dateFormat ))
					#if( $b == "name")
						#set( $baseName = $baseDocValue )
						#encodeText( $baseName)
						#set( $baseDocValue = $encodeTextReturn)
						#set( $compareName = $compareDocValue )
						#encodeText( $compareName)
						#set( $compareDocValue = $encodeTextReturn)
					#end
				  #end
                ##------ check to see if field for b1 is different than same field for b2 ------##
				
                ##if( $velocityReportUtil.getValueForField( $baseDoc, $b, $dateFormat) != $velocityReportUtil.getValueForField( $compareDoc, $b, $dateFormat ))
				#if( $baseDocValue != $compareDocValue)
                  #set( $foundChg = 1 )

                  <tr style='page-break-inside:avoid;'>
                    <td valign=top style='width:9.84% !important;border:solid windowtext 1.0pt;
                    border-top:none;padding:0in 5.4pt 0in 5.4pt;overflow-wrap:break-word !important;'> 
                    #formatTableCell( $documentSource.getDocumentTypeFieldByName($b, $baseDoc.documentType.id).label, "left", 130)       
                    </td>

                    #if( $report_showFinText == true )
                    #formatFieldOrTestStepsBaseDoc( $b $baseDoc )
                    #end ##if( $report_showFinText == true )

                    #showComparisonForFields( $b $baseDoc $compareDoc )

                    #if( $report_showFinText == true )
                      ##formatFieldOrTestCaseStepsCompareDoc( $b $compareDoc )
					            #formatFieldOrTestStepsBaseDoc( $b $compareDoc )
                    #end ##if( $report_showFinText == true)
                  </tr>

                  #end ##if( $velocityReportUtil.getValueForField( $baseDoc, $b, $dateFormat) !=
                #end ##if( ($report_excludeStatus == false) || ( $report_excludeStatus == true && $b != "status" && $b != "modifiedDate" ))
              ##end ##if( $spot != 0 )

              #set( $spot = 1 )

            #end ##foreach($f in $fields)

            #if($foundChg == 0)
            <tr>
              #set( $colSpan = 3)
			        #if( $report_showFinText == true || $includeRelationships == true)
                #set( $colSpan = 4)
              #else
                #set( $colSpan = 3)
              #end  ##if( $report_showFinText == true)

              <td colspan=$colSpan valign=top style='border:solid windowtext 1.0pt;border-top:none;mso-border-top-alt:solid windowtext .5pt;
              mso-border-alt:solid windowtext .5pt; padding:5.4pt 5.4pt 0in 4.05pt'>
              <p class=MsoNormal style='margin-left:0in'>All item fields have been reset to the Baseline 1 state or have not been
              changed. Refer to version comments for history. If no version comments exist, the fields have not changed.</p>
              </td>
            </tr>
            #end ##if($foundChg == 0)

          #end  ##if( $docTypeId == $baseDoc.documentType.id )

        #end  ##foreach($dl in $docList)
      



      ##------ Build Relationships Row ------##

      #if( $includeRelationships == true)  
        #formatRelationshipRow( $aVer $bVer $uniqueBase1Rels $uniqueBase2Rels $base1RelsSize $base2RelsSize $relsMatch $removedRelationship $addedRelationship)
      #end ##end include relationships





      ##------ Build Versioned Comment Row ------##
      #set( $count=0 )

     
        #set($next = $mathTool.toInteger($bVer.versionNumber)+1)
        #set($total = $mathTool.toInteger($aVer.versionNumber)+1)

        #if($report_showComment == true)
        #formatVersionCommentRow( $next $total $baseOrigin )
        #end ##if($report_showComment == true)

      </table> ## Closes Updated Items Section 1.0 
      #if( $format == 'doc')
      </div>
      #end 
     </section>

      
      ## the items may share the same id and be the same version but have different relationships so we close this around the #formatRelationshipRow:
      #end  ##if( $baseDoc.id != $compareDoc.id || $relsMatch == false) ##Basedoc: $baseDoc.id Compare: $compareDoc.id<br> 
      



    #else
      #if($deleted.add($baseline1Item))#end
    #end ##if( $baseline2Ids.contains( $baseline1Item.globalId ) )

  #end ##foreach( $node1 in $sortTool.sort( $baseDocNodes,"globalSortOrder") )

#if( !$hasUpdated)
	<section>
	<p class=MsoNormal>No items have been updated between baselines.</p>
	</section>
#end 
##------  Build the Deleted Item Section 2.0  ------##
<section>
#formatDeletedItems( $deleted )
</section>

##------  Build the Added Item Section 3.0  ------##
<section>
#formatAddedItems( $baseline2Items )
</section>

</div> ##<div class="reportBodyCounterContainer">
</div>

</body>
#end
#########################################################################################################################
## **********************************************************************************************************************
#########################################################################################################################
##
#########################################################################################################################
##
##  6. DOCUMENT_INITIALIZATION
##
##  All code the executes before the report loops through $documentList goes here.
##
##  Outputs the following information for use in the rest of the report:
##  --> $containerDoc - Set or Component that contains the items in the document.  Used for Headers, Footers and Title page.
##  --> $documentRev - Name of the baseline that all items are part of. Appended with an asterisk if some items have 
##                     changed since latest baseline.
##  --> $referenencableDocIds - List of all items that will have bookmark references available in the doc
##
#########################################################################################################################
##getContainer( $baselineMode ) ## Creates: $containerDoc
#### Debug: $containerDoc.documentKey: $containerDoc.name
## Only show a revision if exporting from a baseline
#*
#if( $baselineMode )
  #if($!contextId)
    #set( $baseline = $baselineDao.getBaseLine($mathTool.toInteger($contextId)))
    #set( $documentRev = $baseline.name)
    #set( $baselineId = $baseline.id)
  #else
    #getDocumentRev() ## Creates: $documentRev, $baselineId
  #end
  #### Debug $documentRev
#else
  #set( $documentRev = "N/A" )
  #set( $baselineId = false )
#end
*#
#########################################################################################################################

#########################################################################################################################
##
##  7. REPORT_BODY
##
#########################################################################################################################

#set( $body = "#createBody()")
#if( $format == "doc" )
  #convertEquals( $body )
#else
  $body
#end


</html>
#########################################################################################################################
##
##  8. MS_WORD_OBJECTS
##
#########################################################################################################################

#if( $format == "doc" )
#########################################################################################################################
##  Embed images
#########################################################################################################################

#foreach( $f in $figure)
$f
#end

#########################################################################################################################

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/item0001.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<b:Sources xmlns:b=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography" xmlns=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography" SelectedStyle=3D"/APASixthEditionOfficeOnline.xsl" StyleName=3D"APA" Version=3D"6"/>

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/props001.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?>
<ds:datastoreItem ds:itemID=3D"{A1D0A804-CF3A-234A-AB79-452ECE125E33}" xmlns:ds=3D"http://schemas.openxmlformats.org/officeDocument/2006/customXml"><ds:schemaRefs><ds:schemaRef ds:uri=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography"/></ds:schemaRefs></ds:datastoreItem>

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/themedata.thmx
Content-Transfer-Encoding: base64
Content-Type: application/vnd.ms-officetheme

UEsDBBQABgAIAAAAIQDp3g+//wAAABwCAAATAAAAW0NvbnRlbnRfVHlwZXNdLnhtbKyRy07DMBBF
90j8g+UtSpyyQAgl6YLHjseifMDImSQWydiyp1X790zSVEKoIBZsLNkz954743K9Hwe1w5icp0qv
8kIrJOsbR12l3zdP2a1WiYEaGDxhpQ+Y9Lq+vCg3h4BJiZpSpXvmcGdMsj2OkHIfkKTS+jgCyzV2
JoD9gA7NdVHcGOuJkTjjyUPX5QO2sB1YPe7l+Zgk4pC0uj82TqxKQwiDs8CS1Oyo+UbJFkIuyrkn
9S6kK4mhzVnCVPkZsOheZTXRNajeIPILjBLDsAyJX89nIBkt5r87nons29ZZbLzdjrKOfDZezE7B
/xRg9T/oE9PMf1t/AgAA//8DAFBLAwQUAAYACAAAACEApdan58AAAAA2AQAACwAAAF9yZWxzLy5y
ZWxzhI/PasMwDIfvhb2D0X1R0sMYJXYvpZBDL6N9AOEof2giG9sb69tPxwYKuwiEpO/3qT3+rov5
4ZTnIBaaqgbD4kM/y2jhdj2/f4LJhaSnJQhbeHCGo3vbtV+8UNGjPM0xG6VItjCVEg+I2U+8Uq5C
ZNHJENJKRds0YiR/p5FxX9cfmJ4Z4DZM0/UWUtc3YK6PqMn/s8MwzJ5PwX+vLOVFBG43lExp5GKh
qC/jU72QqGWq1B7Qtbj51v0BAAD//wMAUEsDBBQABgAIAAAAIQBreZYWgwAAAIoAAAAcAAAAdGhl
bWUvdGhlbWUvdGhlbWVNYW5hZ2VyLnhtbAzMTQrDIBBA4X2hd5DZN2O7KEVissuuu/YAQ5waQceg
0p/b1+XjgzfO3xTVm0sNWSycBw2KZc0uiLfwfCynG6jaSBzFLGzhxxXm6XgYybSNE99JyHNRfSPV
kIWttd0g1rUr1SHvLN1euSRqPYtHV+jT9yniResrJgoCOP0BAAD//wMAUEsDBBQABgAIAAAAIQC2
9GeYkwcAAMkgAAAWAAAAdGhlbWUvdGhlbWUvdGhlbWUxLnhtbOxZzYsbyRW/B/I/NH2X9dWtj8Hy
ok/P2jO2sWSHPdZIpe7yVHeJqtKMxWII3lMugcAm5JCFve0hhCzswi655I8x2CSbPyKvqlvdVVLJ
nhkcMGFGMHSXfu/Vr9579d5T1d3PXibUu8BcEJb2/Pqdmu/hdM4WJI16/rPZpNLxPSFRukCUpbjn
b7DwP7v361/dRUcyxgn2QD4VR6jnx1KujqpVMYdhJO6wFU7huyXjCZLwyqPqgqNL0JvQaqNWa1UT
RFLfS1ECah8vl2SOvZlS6d/bKh9TeE2lUANzyqdKNbYkNHZxXlcIsRFDyr0LRHs+zLNglzP8Uvoe
RULCFz2/pv/86r27VXSUC1F5QNaQm+i/XC4XWJw39Jw8OismDYIwaPUL/RpA5T5u3B63xq1Cnwag
+RxWmnGxdbYbwyDHGqDs0aF71B416xbe0N/c49wP1cfCa1CmP9jDTyZDsKKF16AMH+7hw0F3MLL1
a1CGb+3h27X+KGhb+jUopiQ930PXwlZzuF1tAVkyeuyEd8Ng0m7kyksUREMRXWqKJUvloVhL0AvG
JwBQQIokST25WeElmkMUDxElZ5x4JySKIfBWKGUChmuN2qTWhP/qE+gn7VF0hJEhrXgBE7E3pPh4
Ys7JSvb8B6DVNyBvf/75zesf37z+6c1XX715/fd8bq3KkjtGaWTK/fLdH/7zzW+9f//w7S9f/zGb
ehcvTPy7v/3u3T/++T71sOLSFG//9P27H79/++ff/+uvXzu09zk6M+EzkmDhPcKX3lOWwAId/PEZ
v57ELEbElOinkUApUrM49I9lbKEfbRBFDtwA23Z8ziHVuID31y8swtOYryVxaHwYJxbwlDE6YNxp
hYdqLsPMs3UauSfnaxP3FKEL19xDlFpeHq9XkGOJS+UwxhbNJxSlEkU4xdJT37FzjB2r+4IQy66n
ZM6ZYEvpfUG8ASJOk8zImRVNpdAxScAvGxdB8Ldlm9Pn3oBR16pH+MJGwt5A1EF+hqllxvtoLVHi
UjlDCTUNfoJk7CI53fC5iRsLCZ6OMGXeeIGFcMk85rBew+kPIc243X5KN4mN5JKcu3SeIMZM5Iid
D2OUrFzYKUljE/u5OIcQRd4TJl3wU2bvEPUOfkDpQXc/J9hy94ezwTPIsCalMkDUN2vu8OV9zKz4
nW7oEmFXqunzxEqxfU6c0TFYR1Zon2BM0SVaYOw9+9zBYMBWls1L0g9iyCrH2BVYD5Adq+o9xQJ6
JdXc7OfJEyKskJ3iiB3gc7rZSTwblCaIH9L8CLxu2nwMpS5xBcBjOj83gY8I9IAQL06jPBagwwju
g1qfxMgqYOpduON1wy3/XWWPwb58YdG4wr4EGXxtGUjspsx7bTND1JqgDJgZgi7DlW5BxHJ/KaKK
qxZbO+WW9qYt3QDdkdX0JCT9YAe00/uE/7veBzqMt3/5xrEPPk6/41ZsJatrdjqHksnxTn9zCLfb
1QwZX5BPv6kZoXX6BEMd2c9Ytz3NbU/j/9/3NIf2820nc6jfuO1kfOgwbjuZ/HDl43QyZfMCfY06
8MgOevSxT3Lw1GdJKJ3KDcUnQh/8CPg9s5jAoJLTJ564OAVcxfCoyhxMYOEijrSMx5n8DZHxNEYr
OB2q+0pJJHLVkfBWTMChkR526lZ4uk5O2SI77KzX1cFmVlkFkuV4LSzG4aBKZuhWuzzAK9RrtpE+
aN0SULLXIWFMZpNoOki0t4PKSPpYF4zmIKFX9lFYdB0sOkr91lV7LIBa4RX4we3Bz/SeHwYgAkJw
HgfN+UL5KXP11rvamR/T04eMaUUANNjbCCg93VVcDy5PrS4LtSt42iJhhJtNQltGN3gihp/BeXSq
0avQuK6vu6VLLXrKFHo+CK2SRrvzPhY39TXI7eYGmpqZgqbeZc9vNUMImTla9fwlHBrDY7KC2BHq
NxeiEdy8zCXPNvxNMsuKCzlCIs4MrpNOlg0SIjH3KEl6vlp+4Qaa6hyiudUbkBA+WXJdSCufGjlw
uu1kvFziuTTdbowoS2evkOGzXOH8VovfHKwk2RrcPY0Xl94ZXfOnCEIsbNeVARdEwN1BPbPmgsBl
WJHIyvjbKUx52jVvo3QMZeOIrmKUVxQzmWdwncoLOvqtsIHxlq8ZDGqYJC+EZ5EqsKZRrWpaVI2M
w8Gq+2EhZTkjaZY108oqqmq6s5g1w7YM7NjyZkXeYLU1MeQ0s8JnqXs35Xa3uW6nTyiqBBi8sJ+j
6l6hIBjUysksaorxfhpWOTsftWvHdoEfoHaVImFk/dZW7Y7dihrhnA4Gb1T5QW43amFoue0rtaX1
rbl5sc3OXkDyGEGXu6ZSaFfCyS5H0BBNdU+SpQ3YIi9lvjXgyVtz0vO/rIX9YNgIh5VaJxxXgmZQ
q3TCfrPSD8NmfRzWa6NB4xUUFhkn9TC7sZ/ABQbd5Pf2enzv7j7Z3tHcmbOkyvTdfFUT13f39cbh
u3uPQNL5stWYdJvdQavSbfYnlWA06FS6w9agMmoN26PJaBh2upNXvnehwUG/OQxa406lVR8OK0Gr
puh3upV20Gj0g3a/Mw76r/I2BlaepY/cFmBezevefwEAAP//AwBQSwMEFAAGAAgAAAAhAA3RkJ+2
AAAAGwEAACcAAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFnZXIueG1sLnJlbHOEj00KwjAU
hPeCdwhvb9O6EJEm3YjQrdQDhOQ1DTY/JFHs7Q2uLAguh2G+mWm7l53JE2My3jFoqhoIOumVcZrB
bbjsjkBSFk6J2TtksGCCjm837RVnkUsoTSYkUiguMZhyDidKk5zQilT5gK44o49W5CKjpkHIu9BI
93V9oPGbAXzFJL1iEHvVABmWUJr/s/04GolnLx8WXf5RQXPZhQUoosbM4CObqkwEylu6usTfAAAA
//8DAFBLAQItABQABgAIAAAAIQDp3g+//wAAABwCAAATAAAAAAAAAAAAAAAAAAAAAABbQ29udGVu
dF9UeXBlc10ueG1sUEsBAi0AFAAGAAgAAAAhAKXWp+fAAAAANgEAAAsAAAAAAAAAAAAAAAAAMAEA
AF9yZWxzLy5yZWxzUEsBAi0AFAAGAAgAAAAhAGt5lhaDAAAAigAAABwAAAAAAAAAAAAAAAAAGQIA
AHRoZW1lL3RoZW1lL3RoZW1lTWFuYWdlci54bWxQSwECLQAUAAYACAAAACEAtvRnmJMHAADJIAAA
FgAAAAAAAAAAAAAAAADWAgAAdGhlbWUvdGhlbWUvdGhlbWUxLnhtbFBLAQItABQABgAIAAAAIQAN
0ZCftgAAABsBAAAnAAAAAAAAAAAAAAAAAJ0KAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFn
ZXIueG1sLnJlbHNQSwUGAAAAAAUABQBdAQAAmAsAAAAA

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/colorschememapping.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"yes"?>
<a:clrMap xmlns:a=3D"http://schemas.openxmlformats.org/drawingml/2006/main" bg1=3D"lt1" tx1=3D"dk1" bg2=3D"lt2" tx2=3D"dk2" accent1=3D"accent1" accent2=3D"accent2" accent3=3D"accent3" accent4=3D"accent4" accent5=3D"accent5" accent6=3D"accent6" hlink=3D"hlink" folHlink=3D"folHlink"/>

#########################################################################################################################
##
##  9. WORD_HEADER_FOOTER: MS Word Header / Footer Definition
##  Removed due to Word for Mac bug
##
#########################################################################################################################
#*
------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/header.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="utf-8"

<html xmlns:v=3D"urn:schemas-microsoft-com:vml"
xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns:dt=3D"uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml"
xmlns=3D"http://www.w3.org/TR/REC-html40">

##---------------------------------------------------------------------------
## Get information from the document container
##---------------------------------------------------------------------------
#if( $containerDoc )
  #set( $title = $containerDoc.name)
#else
  #set( $title = "NOT FOUND" )
#end
##---------------------------------------------------------------------------

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 15">
<meta name=3DOriginator content=3D"Microsoft Word 15">
<link id=3DMain-File rel=3DMain-File href=3D"../WordTemplate.htm">
<![if IE]>
<base href=3D"file:///C:/D993472D/WordTemplate.fld/header.htm" id=3D"webarch_temp_base_tag">
<![endif]><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"2049"/>
</xml><![endif]-->
</head>

<body lang=3DEN-US link=3Dblue vlink=3D"#954F72">

<div style=3D'mso-element:footnote-separator' id=3Dfs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1 width=3D"33%">

<![endif]></span></p>

</div>

<div style=3D'mso-element:footnote-continuation-separator' id=3Dfcs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1>

<![endif]></span></p>

</div>

<div style=3D'mso-element:endnote-separator' id=3Des>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1 width=3D"33%">

<![endif]></span></p>

</div>

<div style=3D'mso-element:endnote-continuation-separator' id=3Decs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1>

<![endif]></span></p>

</div>

<div style=3D'mso-element:header' id=3DpageHeader>

  <p class=3DMsoHeader>$project.name
  <w:PTab Alignment=3D"CENTER" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>
  <w:PTab Alignment=3D"RIGHT" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>$title</p>

</div>

<![if !supportTextWrap]><br clear=3DALL>
<![endif]>

<p class=3DMsoFooter style=3D'margin-right:.25in'>&nbsp;</p>

</div>

<div style=3D'mso-element:footer' id=3DpageFooter>

  <p class=3DMsoFooter>$project.name
    <w:PTab Alignment=3D"CENTER" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab><span style=3D'color:gray'>Confidential. $project.organization.name</span>
    <w:PTab Alignment=3D"RIGHT" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>
    Page&nbsp;<!--[if supportFields]><span style=3D'mso-element:field-begin'></span>PAGE <span style=3D'mso-element:field-separator'></span>
    <![endif]-->2<!--[if supportFields]><span style=3D'mso-element:field-end'></span><![endif]-->&nbsp;of&nbsp;<span style=3D'mso-field-code:" NUMPAGES  "'>4</span></p>
  </p>

</div>

<div style=3D'mso-element:header' id=3DtitlepageHeader>

<p class=3DMsoHeader>&nbsp;</p>

<p class=3DMsoHeader align=3Dright style=3D'text-align:right'>&nbsp;</p>

</div>

<div style=3D'mso-element:footer' id=3DtitlepageFooter>

<p class=3DMsoFooter style=3D'text-align:center'>
  &copy; $project.organization.name, All Right Reserved. This document may not in any form be reproduced, distributed or utilized, in whole or in part without prior, express written consent of $project.organization.name.
</p>

</div>

</body>

</html>
*#


#########################################################################################################################

#########################################################################################################################
##
##  10. WORD_EMBEDDED_FILE_LIST
##
#########################################################################################################################

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/filelist.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml; charset="utf-8"

<xml xmlns:o=3D"urn:schemas-microsoft-com:office:office">
 <o:MainFile HRef=3D"../WordTemplate.htm"/>
 <o:File HRef=3D"item0001.xml"/>
 <o:File HRef=3D"props001.xml"/>
 <o:File HRef=3D"themedata.thmx"/>
 <o:File HRef=3D"colorschememapping.xml"/>
##<o:File HRef=3D"header.htm"/>
 #foreach( $file in $files)
 #convertEquals($file)
 #end
 <o:File HRef=3D"filelist.xml"/>
</xml>
------=_NextPart_01D506B0.1F52D2B0--
#end