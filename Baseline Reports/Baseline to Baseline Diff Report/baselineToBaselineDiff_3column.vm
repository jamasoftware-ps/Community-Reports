#if( $format == "doc" )
MIME-Version: 1.0
Content-Type: multipart/related; boundary="----=_NextPart_01D506B0.1F52D2B0"
#end

## ======================================================================================================================
## Name: baselineToBaselineDiff_3column.vm 
## 
## Description: 1 column Baseline comparison report
## ======================================================================================================================
## MODIFICATION HISTORY 
## 
## Date         Revision   Person            Comments 
## -----------  ---------  ----------------  ---------------------------------- 
## 2021-11-22   2.0        Shawnna Williams   Fix longstanding issues with the baseline reports 
## 2022-08-16   2.1        Anna FitzGerald    -Modularized the report body code, into the following macros, that are ordered 
##                                             by the report structure:
##                                                #formatUpdatedItemsHeader
##                                                #formatFieldsOrTestStepsBaseDoc 
##                                                #showComparisonForFields
##                                                #formatFieldsOrTestStepsCompareDoc
##                                                #buildRelationshipCounts
##                                                #formatRelationshipsRow
##                                                #formatVersionCommentRow
##                                                #formatDeletedItems
##                                                #formatAddedItems 
##                                            -Added method to gather toItem of first baseline from its ID and Version 
##                                            -Removed Extra thead that surrounds the Version Comments in Section 1.0
##                                            -In section 1.0 Moved the close of two loops ( lines 4904 and 4905 ) 
##                                                to directly before building the relationship row, instead of after. 
## 2023-02-21   2.2        Shawnna Williams   Fix table of contents not being clickable, fixed hyperlinks to items

## ======================================================================================================================
##
## Report Criteria:
## ---------------------------    
##
##    Report Criteria:
##    ------------------------------------
##      Note: If being used this criteria will need to be added to the report configuration.
##      
##
##      Type:     Display Name:           Report Global Variable:
##      ------------------------------------------------------------
##      Baseline  Baseline 1        report_baseline1
##      Baseline    Baseline 2        report_baseline2
##      Boolean     Include Relationships    includeRelationships
##      Boolean     Include Version Comments report_showComment
##      Boolean     Show Finished Text       report_showFinText
##      Boolean     Exclude Status Field     report_excludeStatus
## ======================================================================================================================
##
##
#########################################################################################################################
#########################################################################################################################
##
##  Report Features
#########################################################################################################################
##
##  - Export in HTML, PDF or Word supported
##  - Document properties loaded from custom fields on a set or component
##  - Document Revision Loaded from most recent non-review baseline of the items.  Asterisk added if some items have 
##    changed sinec the msot recent non-review baseline.
##  - Export from project explorer or baseline
##  - Exclude items with a status listed in $excludedStatuses
##  - Numbered captions for figures, tables and equations
##  - Jama hyperlinks to items in the same document converted to Word cross-references
##  - Tables formatted and resized to fit the page width
##  - Images resized to fit the page
##  - All text formatted consistently
##  - Macro for all item types in the Automotive VSO
##
##
#########################################################################################################################
#########################################################################################################################
##
##  Report Issue list
#########################################################################################################################
##  
##  https://jama-arolufs.jamacloud.com/perspective.req#/containers/2444332?projectId=20374
##
#########################################################################################################################
#########################################################################################################################
##
##  Jama Configuration Requirements
#########################################################################################################################
##
##  Valid Export Scenarios
##  - Export Component or Set from Project Explorer 
##  - Export baselined Component or Set from baseline view
##  Required fields for full functionality
##  Set or Component (whichever is the parent of a single document)
##  - Author(s): Text Field
##  - Approvers: Rich Text Field
##  - Document ID: Text Field
##  - Document Status: Text Field or Pick List
##  - Change History: Rich TextText Field
##  All Item Types that could contain Figures, Tables or Equations
##  - Object Type: Pick List containing at least (Text, Figure, Table, Equation)
##
#########################################################################################################################
#########################################################################################################################
##
##  Installation Instructions
#########################################################################################################################
##
## Add a new report in Jama with the following options:
##  -Report Formats: Micosoft Word
##  -Scope: Organization
##  -Organization: Select yours
##  -Visible to Users: true
##  -Context Sensitive: true
##
#########################################################################################################################
##
##  Report Table of Contents
#########################################################################################################################
##
##  1. DATA_SOURCES
##  2. CONSTANTS
##  3. WORD_HTML_HEADER
##  4. PDF_HTML_HEADER
##  5. GENERAL_STYLE_SHEETS
##  6. PDF_STYLE_SHEETS
##  7. TABLE_STYLE_SHEETS
##  8. MACROS
##  8.1 STANDARD_MACROS
##  8.2 ITEM_TYPE_MACROS
##  8.3 BODY_MACRO
##  8.3.1 TITLE_PAGE
##  8.3.2 TABLE_OF_CONTENTS
##  8.3.3 TABLE_OF_FIGURES
##  8.3.4 TABLE_OF_TABLES
##  8.3.5 CHANGE_HISTORY
##  8.3.6 OUTPUT_DOCUMENT_LIST
##  8.3.6.1 ITEM_TYPE_MAP
##  9. DOCUMENT_INITIALIZATION
##  10. REPORT_BODY
##  11. PDF_HEADER_FOOTER
##  12. MS_WORD_OBJECTS
##  13. WORD_HEADER_FOOTER
##  14. WORD_EMBEDDED_FILE_LIST
##
#########################################################################################################################
##
##  Instructions for Customizing
#########################################################################################################################
##  
##  1. Location the section nanmed TITLE_PAGE
##  2. Replace with the content with the desired title page
##  3. Location the section nanmed HEADER_FOOTER
##  4. Replace the header and footer content as desired
##  5. Locate the section named ITEM_TYPE_MAP
##  6. Add a new mapping for the desired item type using an existing format macro or a newly defined one
##  7. Location the section named ITEM_TYPE_MACROS
##  8. Create a macro for the new item types at the end of the list of macros. Use the existing macros as examples.
##
#########################################################################################################################
##
##  1. DATA_SOURCES
##
#########################################################################################################################
##
## Data Sources available without declaration
##-------------------------------------------
## $project
## $documentList
## $baseUrl
##
## Data Sources loaded for this report
##-------------------------------------------
#if( $documentSource ) ##
  ## Jama 8.44 or greater
  ## Jama 8.42 if New Velocity Feature Flag Enabled
  #set( $docDao = $documentSource )
  #set( $documentNodeDao = $documentSource )
  #set( $attachmentDao = $documentSource )
  #set( $attachmentService = $documentSource )
  #set( $relDao = $documentSource )
  #set( $versionDao = $documentSource )
  #set( $testRunDao = $testSource )
  #set( $velocityServiceWrapper = $documentSource )
  #set( $baselineDao = $baselineSource )
  ##From old code
  #set($baseDao = $baselineSource)
  #set($docNodeDao = $documentSource)
  #set($docDao = $documentSource)
  #set($verDao = $documentSource)
  #set($userDao = $userSource)
  #set($documentNodeManager = $documentSource)
  #set($releaseDao = $releaseSource)
  #set($dtDao = $documentSource)
  #set($documentService = $documentSource)
##
#else ##note - this will not work on instances earlier than 8.68
  ## Jama 8.43 or older
  #set( $docDao = $applicationContext.getBean("documentDao"))
  #set( $documentNodeDao = $applicationContext.getBean("documentNodeDao"))
  #set( $attachmentDao = $applicationContext.getBean("attachmentDao"))
  #set( $attachmentService = $applicationContext.getBean("attachmentService"))
  #set( $relDao = $applicationContext.getBean("relationshipDao") )
  #set( $versionDao = $applicationContext.getBean("versionDao") )
  #set( $testRunDao = $applicationContext.getBean("testRunDao") )
  ## $velocityServiceWrapper is already available
  #set( $baselineDao = $applicationContext.getBean("baseLineDao") )
##
#end
##
#set($baseDocNodes = [] )
#set($baseOrgIds = [])
#set($compareOriginIds = [])
#set($compareDocIds = [])
#set($deleted = [] )
#set($docList = [] )
#set($found = 'no')
#set($count=0)
#set($r1 = $mathTool.toInteger($report_baseline1))
#set($r2 = $mathTool.toInteger($report_baseline2))
#set($maxDiff = 10000)
#set($maxedOut="Field is too large for comparison. Maximum number of characters is")
#if($r1 > $r2)
    #set($r1 = $r2)
    #set($r2 = $mathTool.toInteger($report_baseline1))
#end
#if( $report_showFinText != true)
  #set( $report_showFinText = false)
#end
#if( $report_excludeStatus != true)
  #set( $report_excludeStatus = false)
#end
##
#########################################################################################################################
## **********************************************************************************************************************
##
##  2. CONSTANTS
##
##  >>>> Modify global constants for the report here <<<<##>
##
## **********************************************************************************************************************
#########################################################################################################################
#set( $boundaryString = "------=_NextPart_01D506B0.1F52D2B0") ##
#set( $filePrefix = "file:///C:/D993472D/WordTemplate.fld/") ##
#set( $cmpKey = "CMP") ##
#set( $setKey = "SET") ##
#set( $fldKey = "FLD") ##
#set( $txtKey = "TXT") ##
#set( $objectTypeField = "object_type" ) ##
#set( $timeZone = "America/Los_Angeles" ) ##
##
## Object Types
#set( $figureObjectType = "Figure" )
#set( $tableObjectType = "Table" )
#set( $equationObjectType = "Equation" )
#set( $informationObjectType = "Information" )
#set( $informationWoHeadingObjectType = "Information without Heading" )
##
## Status values to exlude from export
#set( $excludedStatuses = ["Rejected","Deleted"] ) ##
##
## Maximum image width and height in points.  
## 468 pt is equivalant to 6.5"
## 612 pt is equivalant to 8.5"
#set ($maxPageWidth = 612) ##
#set ($maxPageHeight = 468) ##
#set ($maxImageWidth = 450) ##
##
## Formatting
#set( $tableHeaderBackgroundColor = "#F2F2F2" )
#set( $tableBorderColor = "#7F7F7F" )

#if( $format == "doc" )
##set( $primaryFont = "Calibri")
#set( $primaryFont = "Arial")
#else
  #set( $primaryFont = "Arimo")
  ##set( $primaryFont = "Arial")
#end

#set( $primaryFontSize = "10.0pt")

#########################################################################################################################
## **********************************************************************************************************************
#########################################################################################################################
##
#########################################################################################################################
##
##  3. WORD_HTML_HEADER
##
#########################################################################################################################
#if( $format == "doc" )
------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="utf-8"

<html xmlns:v=3D"urn:schemas-microsoft-com:vml"
xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml"
xmlns=3D"http://www.w3.org/TR/REC-html40">
#end
<head>
#if( $format == "doc" )
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 15">
<meta name=3DOriginator content=3D"Microsoft Word 15">
<link rel=3DFile-List href=3D"WordTemplate.fld/filelist.xml">
<link rel=3DEdit-Time-Data href=3D"WordTemplate.fld/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Jama Software</o:Author>
  <o:LastAuthor>Jama Software</o:LastAuthor>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=3DdataStoreItem href=3D"WordTemplate.fld/item0001.xml" target=3D"WordTemplate.fld/props001.xml">
<link rel=3DthemeData href=3D"WordTemplate.fld/themedata.thmx">
<link rel=3DcolorSchemeMapping href=3D"WordTemplate.fld/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>100</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:EnableOpenTypeKerning/>
   <w:DontFlipMirrorIndents/>
   <w:OverrideTableStyleHps/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val=3D"Cambria Math"/>
   <m:brkBin m:val=3D"before"/>
   <m:brkBinSub m:val=3D"&#45;-"/>
   <m:smallFrac m:val=3D"off"/>
   <m:dispDef/>
   <m:lMargin m:val=3D"0"/>
   <m:rMargin m:val=3D"0"/>
   <m:defJc m:val=3D"centerGroup"/>
   <m:wrapIndent m:val=3D"1440"/>
   <m:intLim m:val=3D"subSup"/>
   <m:naryLim m:val=3D"undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState=3D"false" DefUnhideWhenUsed=3D"false"
  DefSemiHidden=3D"false" DefQFormat=3D"false" DefPriority=3D"99"
  LatentStyleCount=3D"376">
  <w:LsdException Locked=3D"false" Priority=3D"0" QFormat=3D"true" Name=3D"Normal"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"heading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 9"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 9"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 9"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footnote text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"header"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footer"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index heading"/>
  <w:LsdException Locked=3D"false" Priority=3D"35" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"caption"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"table of figures"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"envelope address"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"envelope return"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footnote reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"line number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"page number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"endnote reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"endnote text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"table of authorities"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"macro"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"toa heading"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"10" QFormat=3D"true" Name=3D"Title"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Closing"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Signature"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"Default Paragraph Font"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Message Header"/>
  <w:LsdException Locked=3D"false" Priority=3D"11" QFormat=3D"true" Name=3D"Subtitle"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Salutation"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Date"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text First Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text First Indent 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Note Heading"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Block Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Hyperlink"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"FollowedHyperlink"/>
  <w:LsdException Locked=3D"false" Priority=3D"22" QFormat=3D"true" Name=3D"Strong"/>
  <w:LsdException Locked=3D"false" Priority=3D"20" QFormat=3D"true" Name=3D"Emphasis"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Document Map"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Plain Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"E-mail Signature"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Top of Form"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Bottom of Form"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal (Web)"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Acronym"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Address"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Cite"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Code"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Definition"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Keyboard"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Preformatted"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Sample"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Typewriter"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Variable"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal Table"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation subject"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"No List"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Contemporary"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Elegant"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Professional"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Subtle 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Subtle 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Balloon Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"Table Grid"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Theme"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" Name=3D"Placeholder Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" QFormat=3D"true" Name=3D"No Spacing"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" Name=3D"Revision"/>
  <w:LsdException Locked=3D"false" Priority=3D"34" QFormat=3D"true"
   Name=3D"List Paragraph"/>
  <w:LsdException Locked=3D"false" Priority=3D"29" QFormat=3D"true" Name=3D"Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"30" QFormat=3D"true"
   Name=3D"Intense Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"19" QFormat=3D"true"
   Name=3D"Subtle Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"21" QFormat=3D"true"
   Name=3D"Intense Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"31" QFormat=3D"true"
   Name=3D"Subtle Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"32" QFormat=3D"true"
   Name=3D"Intense Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"33" QFormat=3D"true" Name=3D"Book Title"/>
  <w:LsdException Locked=3D"false" Priority=3D"37" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"Bibliography"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"TOC Heading"/>
  <w:LsdException Locked=3D"false" Priority=3D"41" Name=3D"Plain Table 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"42" Name=3D"Plain Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"43" Name=3D"Plain Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"44" Name=3D"Plain Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"45" Name=3D"Plain Table 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"40" Name=3D"Grid Table Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"46" Name=3D"Grid Table 1 Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark"/>
  <w:LsdException Locked=3D"false" Priority=3D"51" Name=3D"Grid Table 6 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"52" Name=3D"Grid Table 7 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"46" Name=3D"List Table 1 Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark"/>
  <w:LsdException Locked=3D"false" Priority=3D"51" Name=3D"List Table 6 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"52" Name=3D"List Table 7 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Mention"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Smart Hyperlink"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Hashtag"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Unresolved Mention"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Smart Link"/>
 </w:LatentStyles>
</xml><![endif]-->
#########################################################################################################################
##
##  4. PDF_HTML_HEADER
##
#########################################################################################################################
#else
  <html>
#end

#########################################################################################################################
##
##  5. GENERAL_STYLE_SHEETS
##
#########################################################################################################################
<style>
<!--
 /* Font Definitions */
 #if( $format == "doc" )
 @font-face
  {font-family:Wingdings;
  panose-1:5 0 0 0 0 0 0 0 0 0;
  mso-font-charset:77;
  mso-generic-font-family:decorative;
  mso-font-pitch:variable;
  mso-font-signature:3 268435456 0 0 -2147483647 0;}
@font-face
  {font-family:"Cambria Math";
  panose-1:2 4 5 3 5 4 6 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:roman;
  mso-font-pitch:variable;
  mso-font-signature:-536870145 1107305727 0 0 415 0;}
@font-face
  {font-family:"Calibri";
  panose-1:2 15 5 2 2 2 4 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:swiss;
  mso-font-pitch:variable;
  mso-font-signature:-1610611985 1073750139 0 0 159 0;}
@font-face
  {font-family:"Times New Roman \(Body CS\)";
  panose-1:2 11 6 4 2 2 2 2 2 4;
  mso-font-alt:"Times New Roman";
  mso-font-charset:0;
  mso-generic-font-family:roman;
  mso-font-pitch:auto;
  mso-font-signature:0 0 0 0 0 0;}
@font-face
  {font-family:"Helvetica Neue";
  panose-1:2 0 5 3 0 0 0 2 0 4;
  mso-font-charset:0;
  mso-generic-font-family:auto;
  mso-font-pitch:variable;
  mso-font-signature:-452984065 1342208475 16 0 1 0;}
@font-face
  {font-family:Times;
  panose-1:0 0 5 0 0 0 0 2 0 0;
  mso-font-charset:0;
  mso-generic-font-family:auto;
  mso-font-pitch:variable;
  mso-font-signature:-536870145 1342185562 0 0 415 0;}
#else
  @import url('https://fonts.googleapis.com/css2?family=Arimo:ital,wght@0,400;0,700;1,400;1,700&display=swap');
  #*
  @font-face {
  font-family: Arial;
  src: url(https://jama-arolufs.jamacloud.com/attachment/89605/Arial.ttf);}
  *#
  
#end
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
  {mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-parent:"";
  margin:0in;
  margin-top:3pt;
  margin-bottom:3pt;
  mso-pagination:widow-orphan;
  font-size:${primaryFontSize};
  font-family:"${primaryFont}",sans-serif;}
p.error
  {mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-parent:"";
  margin:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:${primaryFontSize};
  font-family:"${primaryFont}",sans-serif;
  color:red;}
p.toobig 
  {
  text-align: center;
  font-size:${primaryFontSize};
  font-family:"${primaryFont}",sans-serif;
  color:red;}
h1
  {mso-style-priority:9;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:12.0pt;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:.3in;
  margin-bottom:3pt;
  text-indent:-.3in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:1;
  mso-list:l0 level1 lfo1;
  font-size:16.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#2F5496;
  mso-font-kerning:0pt;
  font-weight:normal;}
h2
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.4in;
  margin-bottom:.0001pt;
  text-indent:-.4in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:2;
  mso-list:l0 level2 lfo1;
  font-size:13.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#2F5496;
  font-weight:normal;}
h3
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.5in;
  margin-bottom:.0001pt;
  text-indent:-.5in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:3;
  mso-list:l0 level3 lfo1;
  font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#1F3763;
  font-weight:normal;}
h4
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.6in;
  margin-bottom:.0001pt;
  text-indent:-.6in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:4;
  mso-list:l0 level4 lfo1;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#2F5496;
  font-weight:normal;
  font-style:italic;}
h5
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.7in;
  margin-bottom:.0001pt;
  text-indent:-.7in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:5;
  mso-list:l0 level5 lfo1;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#2F5496;
  font-weight:normal;}
h6
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.8in;
  margin-bottom:.0001pt;
  text-indent:-.8in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:6;
  mso-list:l0 level6 lfo1;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#1F3763;
  font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.8in;
  margin-bottom:.0001pt;
  text-indent:-.8in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:7;
  mso-list:l0 level7 lfo1;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#1F3763;
  font-weight:normal;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;
  font-weight:bold;
  font-style:italic;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:11.0pt;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;
  font-weight:bold;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:22.0pt;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:33.0pt;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoToc5, li.MsoToc5, div.MsoToc5
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:44.0pt;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoToc6, li.MsoToc6, div.MsoToc6
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:55.0pt;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
  {mso-style-priority:99;
  mso-style-qformat:yes;
  margin:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  tab-stops:center 3.25in right 6.5in;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
  {mso-style-priority:99;
  mso-style-qformat:yes;
  margin:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  tab-stops:center 3.25in right 6.5in;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoCaption, li.MsoCaption, div.MsoCaption
  {mso-style-priority:35;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:10.0pt;
  margin-left:0in;
  mso-pagination:widow-orphan;
  font-size:9.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#44546A;
  font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
  {mso-style-priority:10;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:0in;
  margin-bottom:.0001pt;
  mso-add-space:auto;
  mso-pagination:widow-orphan;
  font-size:40.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#4F81BD;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
  {mso-style-priority:11;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:0in;
  mso-pagination:widow-orphan;
  font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;}
a:link, span.MsoHyperlink
  {mso-style-priority:99;
  color:#0563C1;
  mso-themecolor:hyperlink;
  text-decoration:underline;
  text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
  {mso-style-noshow:yes;
  mso-style-priority:99;
  color:#954F72;
  mso-themecolor:followedhyperlink;
  text-decoration:underline;
  text-underline:single;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
  {mso-style-priority:34;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:0in;
  margin-bottom:.0001pt;
  mso-add-space:auto;
  mso-pagination:widow-orphan;
  font-size:"${primaryFontSize}";
  font-family:"${primaryFont}",sans-serif;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
  {mso-style-priority:39;
  mso-style-qformat:yes;
  mso-style-parent:"Heading 1";
  mso-style-next:Normal;
  margin:0in;
  margin-bottom:.0001pt;
  text-align:center;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  font-size:16.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.TableHeader, li.TableHeader, div.TableHeader
  {mso-style-name:"Table Header";
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin:0in;
  margin-left:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:"${primaryFontSize}";
  font-family:"${primaryFont}",sans-serif;
  font-weight:bold;}
p.TableCell, li.TableCell, div.TableCell
  {mso-style-name:"Table Cell";
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin:0in;
  margin-left:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:"${primaryFontSize}";
  font-family:"${primaryFont}",sans-serif;}
ol
  {margin-bottom:0in;}
ul
  {margin-bottom:0in;}
li
  {font-size:${primaryFontSize};
  font-family:"${primaryFont}",sans-serif;}
table 
  {margin-top:2pt;
  border-collapse: collapse;
  table-layout: fixed;}
th, td
  {padding-left: 2pt;
  padding-right: 2pt;
  word-wrap:break-all;}
 th
  {background:$tableHeaderBackgroundColor;}
/*
* DIFF Service Styles
*
*/

/*
* Styles for the Tag Diff
*/
span.diff-tag-html {
  font-family: "Andale Mono" monospace;
  font-size: 80%;}

span.diff-tag-removed {
  font-size: 100%;
  text-decoration: line-through;
  background-color: #fdc6c6; /* light red */}

span.diff-tag-added {
  font-size: 100%;
  background-color: #ccffcc; /* light green */}

span.diff-tag-conflict {
  font-size: 100%;
  background-color: #f781be; /* light rose */}

/*
* Styles for the HTML Diff
*/
span.diff-html-added {
    font-size: 100%;
    color: #00a551;
    ##border-bottom: 4px dotted #00a551;
  border: 2px solid #ccffcc;}

span.diff-html-removed {
    font-size: 100%;
    background-color: #fcddde; /* light red */
    color: #ec1c24;
  border: 2px solid #ec1c24;}

.inline-diffs span.diff-html-added {
    background-repeat: no-repeat;}

.inline-diffs span.diff-html-added, .inline-diffs span.diff-html-removed {
    font-size: 100%;
    cursor: pointer;
    padding: 0 0 0 18px;
    margin-right: 0.2em;
    text-decoration: none;
    cursor: pointer;}

.inline-diffs span.diff-html-removed {
    background-repeat: no-repeat;}

span.diff-html-removed.closed {
    width: 0;
    overflow: hidden;
    display: inline-block;
    height: 1em;}

span.diff-html-added.closed {
    color: inherit;
    overflow: inherit;
    display: inline;
    height: auto;
    width: auto;
    border-bottom: inherit;
    display: inline;}

span.diff-html-changed {
    *background-color: #c6c6fd; /* light blue */
    cursor: pointer;}

span.diff-html-conflict {
    background-color: #f781be; /* light rose */}

span.diff-html-selected {
    background-color: #FF8800; /* light orange */
    cursor: pointer;}

span.diff-html-selected img {
    border: 2px solid #FF8800; /* light orange */}

span.diff-html-added img {
    ##border: 2px solid #ccffcc;}
  border: 4px solid #ccffcc;}

span.diff-html-removed img {
    border: 2px solid #fdc6c6;
    border-bottom-width: 0;
    border-top-width: 0;}

span.diff-html-changed img {
    border: 2px dotted #000099;}

div.diff-removed-image, div.diff-added-image, div.diff-conflict-image {
    height: 300px;
    width: 200px;
    position: absolute;
    opacity: 0.55;
    filter: alpha(opacity=55);
    -moz-opacity: 0.55;}

div.diff-removed-image, div.diff-added-image, div.diff-conflict-image {
    #*margin-top: 2px;
    margin-bottom: 2px;
    margin-right: 2px;
    margin-left: 2px;}*#
  margin-top: 4px;
    margin-bottom: 4px;
    margin-right: 4px;
    margin-left: 4px;}

div.diff-removed-image {
    background-color: #fdc6c6;}

div.diff-added-image {
    background-color: #ccffcc;
    background-repeat: no-repeat;}

div.diff-conflict-image {
    background-color: #f781be;
    background-repeat: no-repeat;}

img.diff-icon {
    background-color: #FF8800;
    width: 16px;
    height: 16px;
    border: 0 none;}

table.diff-tooltip-link, table.diff-tooltip-link-changed {
    width: 100%;
    text-align: center;
    Vertical-align: middle;}

table.diff-tooltip-link-changed {
    border-top: thin dashed #000000;
    margin-top: 3px;
    padding-top: 3px}

td.diff-tooltip-prev {
    text-align: left; }

td.diff-tooltip-next {
    text-align: right;}

 table.diffpage-html-firstlast {
    width: 100%;
    Vertical-align: middle;}

div.diff-topbar {
    border-bottom: 2px solid #FF8800;
    border-left: 1px solid #FF8800;
    border-right: 1px solid #FF8800;
    background-color: #FFF5F5;}

a.diffpage-html-a, a.diffpage-html-a:hover, a.diffpage-html-a:link, a.diffpage-html-a:visited, a.diffpage-html-a:active {
    text-decoration: none;
    color: #FF8800;}

.diffpage-html-firstlast a img, .dsydiff-prevnextnav a img {
    vertical-align: middle;}
  
#if( $format == "pdf")
@page {
    size: A4 landscape;

@bottom-right {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 10.0pt;
    content: "Page " counter(page) " of " counter(pages);
    }
}

body {
    font-family: Arial, Helvetica, sans-serif;
    margin-left: 10px;
    }

.details {
    padding: 10px;
    border: solid 1px black;
    border-collapse: collapse;
    table-layout: fixed;
    word-wrap: break-word;
    overflow-wrap: break-word;
    width: 935px;
    }

table table {
    font-size: 5pt;
    display: block;
    height: auto;
    width: 100%;
    }

table table img {
    display: block;
    height: auto;
    max-width: 50px;
    max-height: 50px;
    }

th {
    background-color: #cccccc;
    text-align: center;
    font-size: 10.0pt;
    font-weight: normal;
    border: solid 1px black;
    }

td, tr {
    border: solid 1px black;
    padding: 5px;
    }

.details .label {
    width: 135px;
    font-size: 10pt;
    vertical-align: text-top;
    }

.details .baselinediff {
    width: 800px;
    font-size: 10pt;
    vertical-align: text-top;
    }

.details .relations {
    width: 400px;
    font-size: 10pt;
    vertical-align: text-top;
    }
.version {
    font-size: 10.0pt;}

.version-details {
    margin-left: 40px;
    font-size: 9.0pt;}

.version-cell {
    line-height: 1.1;}

h1 {
    font-size: 11.0pt;
    font-weight: bold;}

h2 {
    font-size: 11.0pt;
    font-weight: normal;
    color: #0D0D0D;}

.step-expected {
    margin-left: 40px;}

.step-notes {
    margin-left: 40px;}

img {
    display: block;
    height:auto;
    width:100%;}

.missingImage {
    border: 1px solid red;
    font-size: 10px;
    color: rgb(100, 100, 100); }

p.toobig {
    text-align: center;}

#end
 /* Page Definitions */
/* Normal Page Definition */
/* 
@page
  {mso-footnote-separator:url("WordTemplate.fld/header.htm") fs;
  mso-footnote-continuation-separator:url("WordTemplate.fld/header.htm") fcs;
  mso-endnote-separator:url("WordTemplate.fld/header.htm") es;
  mso-endnote-continuation-separator:url("WordTemplate.fld/header.htm") ecs;}
@page WordSectionPortrait
  {size:8.5in 11.0in;
  margin:1.0in 1.0in 1.0in 1.0in;
  mso-header-margin:.5in;
  mso-footer-margin:.5in;
  mso-title-page:yes;
  mso-header:url("WordTemplate.fld/header.htm") h1;
  mso-footer:url("WordTemplate.fld/header.htm") f1;
  mso-first-header:url("WordTemplate.fld/header.htm") fh1;
  mso-first-footer:url("WordTemplate.fld/header.htm") ff1;
  mso-paper-source:0;}
*/
/* Header Import Bug Workaround Page Definition */
#if( $format == "doc")
@page
  {mso-footnote-separator: fs;
  mso-footnote-continuation-separator: fcs;
  mso-endnote-separator: es;
  mso-endnote-continuation-separator: ecs;}
@page WordSectionLandscape
  {size:11.0in 8.5in;
  margin:1.0in .5in 1.0in .5in;
  mso-header-margin:.5in;
  mso-footer-margin:.5in;
  mso-title-page:yes;
  mso-header: h1;
  mso-footer: f1;
  mso-first-header: fh1;
  mso-first-footer: ff1;
  mso-paper-source:0;}
div.WordSectionLandscape
  {page:WordSectionLandscape;}
 /* List Definitions */
@list l0
  {mso-list-id:1764108000;
  mso-list-template-ids:1094757160;}
@list l0:level1
  {mso-level-style-link:"Heading 1";
  mso-level-text:%1;
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.3in;
  text-indent:-.3in;}
@list l0:level2
  {mso-level-style-link:"Heading 2";
  mso-level-text:"%1\.%2";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.4in;
  text-indent:-.4in;}
@list l0:level3
  {mso-level-style-link:"Heading 3";
  mso-level-text:"%1\.%2\.%3";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.5in;
  text-indent:-.5in;}
@list l0:level4
  {mso-level-style-link:"Heading 4";
  mso-level-text:"%1\.%2\.%3\.%4";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.6in;
  text-indent:-.6in;}
@list l0:level5
  {mso-level-style-link:"Heading 5";
  mso-level-text:"%1\.%2\.%3\.%4\.%5";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.7in;
  text-indent:-.7in;}
@list l0:level6
  {mso-level-style-link:"Heading 6";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.8in;
  text-indent:-.8in;}
@list l0:level7
  {mso-level-style-link:"Heading 7";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.9in;
  text-indent:-.9in;}
@list l0:level8
  {mso-level-style-link:"Heading 8";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:1.0in;
  text-indent:-1.0in;}
@list l0:level9
  {mso-level-style-link:"Heading 9";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8\.%9";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:1.1in;
  text-indent:-1.1in;}
#end
-->
</style>
#########################################################################################################################
##
##  6. PDF_STYLE_SHEETS
##
#########################################################################################################################
#if( $format != "doc" )
  <style type="text/css">
    
    html, body {
      font-family:"${primaryFont}",sans-serif;         
      font-size: ${primaryFontSize};
      max-width: 7.5in;}
    body 
      {margin-left: 1in;
      counter-reset: h1counter;}
    h1
      {counter-reset: h2counter;}
    h2 
      {counter-reset: h3counter;}
    h3 
      {counter-reset: h4counter;}
    h4 
      {counter-reset: h5counter;}
    h5 
      {counter-reset: h6counter;}
    h1::before 
      {counter-increment: h1counter;
      content: counter(h1counter) "\0000a0\0000a0";}
    h2::before 
      {counter-increment: h2counter;
      content: counter(h1counter) "." counter(h2counter) "\0000a0\0000a0";}
    h3::before 
      {counter-increment: h3counter;
      content: counter(h1counter) "." counter(h2counter) "." counter(h3counter) "\0000a0\0000a0";}
    h4::before 
      {counter-increment: h4counter;
      content: counter(h1counter) "." counter(h2counter) "." counter(h3counter) "." counter(h4counter) "\0000a0\0000a0";}
    h5::before 
      {counter-increment: h5counter;
      content: counter(h1counter) "." counter(h2counter) "." counter(h3counter) "." counter(h4counter) "." counter(h5counter) "\0000a0\0000a0";}
    h6::before 
      {counter-increment: h6counter;
      content: counter(h1counter) "." counter(h2counter) "." counter(h3counter) "." counter(h4counter) "." counter(h5counter) "." counter(h6counter) "\0000a0\0000a0";}
   
  </style>
#end
#########################################################################################################################
##
##  7. TABLE_STYLE_SHEETS
##
#########################################################################################################################
<style>
 /* Style Definitions */
 table.MsoNormalTable
  {mso-style-name:"Table Normal";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-noshow:yes;
  mso-style-priority:99;
  mso-style-parent:"";
  border-collapse:collapse;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-para-margin:0in;
  mso-para-margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;}
table.MsoTableGrid
  {mso-style-name:"Table Grid";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-priority:39;
  mso-style-unhide:no;
  border:solid $tableBorderColor 1.0pt;
  border-collapse:collapse;
  mso-border-alt:solid $tableBorderColor .5pt;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-border-insideh:.5pt solid $tableBorderColor;
  mso-border-insidev:.5pt solid $tableBorderColor;
  mso-para-margin:0in;
  mso-para-margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  mso-bidi-font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;}
table.TableGridwithHeader
  {table-layout:fixed;
  mso-table-layout-alt:fixed;
  border-collapse:collapse;
  border:none;
  mso-style-name:"Table Grid with Header";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-priority:99;
  mso-style-unhide:no;
  mso-style-parent:"Table Grid";
  border:solid $tableBorderColor 1.0pt;
  border-collapse:collapse;
  mso-border-alt:solid $tableBorderColor .5pt;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-border-insideh:.5pt solid $tableBorderColor;
  mso-border-insidev:.5pt solid $tableBorderColor;
  mso-para-margin:0in;
  mso-para-margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
th.TableHeader
  {border:solid $tableBorderColor .5pt;}
td.TableCell
  {border:solid $tableBorderColor .5pt;}
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext=3D"edit">
  <o:idmap v:ext=3D"edit" data=3D"1"/>
 </o:shapelayout></xml><![endif]-->
##end
</head>
##
#########################################################################################################################
##
##  8. MACROS
##
#########################################################################################################################
##
#########################################################################################################################
##
##  8.1 STANDARD_MACROS
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getContainer                                                           
##          Inputs: $baselineMode - boolean: user selected.  tells the report if the export was from a baseline or not                                        
##          Creates: $containerDoc - document: creates $containerDoc to used for the remainder of the report
#########################################################################################################################
#macro( getContainer $baselineMode )
##
  #set( $firstDocInList = $documentList[0].document )
  #set( $firstDocInListTypeKey = $firstDocInList.documentType.documentTypeKey )
##
  ## export from a baseline
  #if( $baselineMode )
    #### Debug: Baseline Mode
    ## baseline of a set or component will include the set or component as the first item
    #if( $firstDocInListTypeKey == $cmpKey ||
         $firstDocInListTypeKey == $setKey )
      #set( $containerDoc = $firstDocInList )
    ## if the first item is not a set or component, then the baseline is of a filter
    ## and a meaningful parent is not available
    #else
      #set( $containerDoc = false )
    #end
##
  ## export from the project explorer
  #else
    #### Debug: Non-Baseline Mode
    #set( $docNode = $documentNodeDao.getDocumentNode(5, $documentList[0].document.id) )
    #set( $parentNode = $docNode.getParentNode())
    ## ## Debug: $parentNode.sequence
    ## if the parent is the projec, then assume the user exported from a baseline and forgot
    ## to select Baseline Mode, otherwise get the parent
    #if( $parentNode.globalSortOrder == 1000 )
      #if( $firstDocInListTypeKey == $cmpKey ||
           $firstDocInListTypeKey == $setKey )
        #set( $containerDoc = $firstDocInList )
      #else
        #set( $containerDoc = false )
      #end
    #else
      #set( $parentDoc = $docDao.getDocument($parentNode.refId) )
      #set( $parentTypeKey = $parentDoc.documentType.documentTypeKey )
      #### Debug: $parentTypeKey
      #if( $parentTypeKey == $cmpKey ||
           $parentTypeKey == $setKey )
        #set( $containerDoc = $parentDoc )
      #else
        #set( $containerDoc = false )
      #end
    #end
  #end
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getDocumentRev                                                          
##          Creates: $documentRev - string: name of the baseline that exists on all items with an asterisk if some items 
##                   have changed since the most recent baseline
##                   $baselineId - number: ID of the identified baseline (only 1, even if the items are all in multiple)
#########################################################################################################################
#macro( getDocumentRev )
  ## Build List of all baselines on active items
  #set( $baselineList = [] )
  #set( $baselineId = false )
  #foreach( $vDoc in $documentList )
    #set( $doc = $vDoc.document)
    #set( $docVersion = $versionDao.getVersionByDocumentId($doc.id) )
    #set( $docBaselines = $docVersion.baseLines )
    #foreach( $baseline in $sortTool.sort($docBaselines, "id:desc") )
      ##if( !$baseline.name.contains("Review") && !$baseline.name.contains("REVIEW") )
      #set( $addBaseline = true )
      #foreach( $knownBaseline in $baselineList )
        #if( $knownBaseline.id == $baseline.id ) 
          #set( $addBaseline = false )
        #end
      #end
      #if( $addBaseline )
        #if( $baselineList.add( {"id":$baseline.id, "name":$baseline.name} ) ) #end
      #end
      ##end
    #end
  #end
##
  ##Determine which, if any, baseline exists on all items
  #set( $baselinesOnAllItemsList = [] )
  #foreach( $baseline in $baselineList )
    #set( $baselineOnAllItems = true )
    #foreach( $vDoc in $documentList )
      #set( $doc = $vDoc.document)
      #set( $docVersion = $versionDao.getVersionByDocumentId($doc.id) )
      #set( $docBaselines = $docVersion.baseLines )
      #set( $baselineOnItem = false )
      #foreach( $docBaseline in $docBaselines )
        #if( $docBaseline.id == $baseline.id )
          #set( $baselineOnItem = true )
          #break
        #end
      #end
      #if( !$baselineOnItem )
        #set( $baselineOnAllItems = false )
        #break
      #end
    #end
    #if( $baselineOnAllItems )
      #if( $baselinesOnAllItemsList.add( $baseline ) ) #end
    #end
  #end
##
  ## Determine the Revision info to display
  #if( $baselinesOnAllItemsList.size() > 0 )
    #foreach( $baseline in $baselinesOnAllItemsList )
      #if( $foreach.first )
        #set( $documentRev = $baseline.name )
        #set( $baselineId = $baseline.id )
      #else
        #set( $documentRev = "$documentRev, $baseline.name" )
      #end
    #end
  #elseif( $baselineList.size() > 0 )
    #set( $documentRev = "$baselineList[0].name*" )
    ##set( $baselineId = $baselineList[0].id )
  #else
    #set( $documentRev = "N/A" )
  #end
##
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getBaselineRelationships
##          Input: $orginDocId - ID of a current item
##                 $baselineId - ID of a baseline       
##          Creates: $returnBaselineRels - list of relationships with sub-elements of "fromItem" and "toItem" each of type 
##                   item
#########################################################################################################################
#macro( getBaselineRelationships $orginDocId $baselineId )
  #set( $start = 0 )
  #set( $count = 20 )
  #set( $versionedRelationships = [] )
  #set( $returnBaselineRels = [])
  #set( $pageSize = 20)
##
  #set($baseRelsPage = $velocityServiceWrapper.getRelationships($orginDocId,$baselineId,$start,$count))
##
  #set( $totalRels = [])
  #set( $totalRels = $baseRelsPage.getPageInfo().getTotalResults())
  DEBUG BASELINE RELATIONSHIP PAGE INFO: $baseRelsPage.getPageInfo()
  DEBUG BASELINE RELATIONSHIP COUNT: $baseRelsPage.getPageInfo().getTotalResults()
  #if( $totalRels && $totalRels > 0)
    #set( $page_count = $mathTool.floor($mathTool.div($totalRels,$pageSize)) )
    #foreach( $page in [0..$page_count])
      #set($baseRelsPage = $velocityServiceWrapper.getRelationships($orginDocId,$baselineId,$start,$count))
      DEBUG BASELINE RELATIONSHIPS: $baseRelsPage.getResults()
      #set( $addIsSuccessful = $versionedRelationships.addAll($baseRelsPage.getResults()))
      #set( $start = $start + $count)
    #end
  #end
##
  #foreach( $versionedRelationship in $versionedRelationships )
    #set( $fromItemId = $versionedRelationship.getFromItem().getValue().get(0) )
    #set( $fromItemVersion = $versionedRelationship.getFromItem().getValue().get(1) )
    #set( $fromItem = $velocityServiceWrapper.getItem($fromItemId , $fromItemVersion) )
    #set( $toItemId = $versionedRelationship.getToItem().getValue().get(0) )
    #set( $toItemVersion = $versionedRelationship.getToItem().getValue().get(1) )
    #set( $toItem = $velocityServiceWrapper.getItem($toItemId , $toItemVersion) )
    #set( $return = $returnBaselineRels.add({"fromItem":$fromItem,"toItem":$toItem}) )
    DEBUG RETURN: $return <br><br>
  #end
##
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getRelationships
##          Inputs: $baselineMode - GLOBAL, tells the report if the export was from a baseline or not 
##                  $baselineId - GLOBAL, ID of a baseline       
##                  $inDoc - current item
##                  $inDownstream - true provides downstream relationships, false provides upstream relationships
##          Creates: $returnRels - list of relationships with sub-elements of "fromItem" and "toItem" each of type 
##                   item
#########################################################################################################################
#macro( getRelationships $inDoc $inDownstream )
  #set( $returnRels = [] )
  #if( $baselineMode )
    #if( $baselineId )
      #set( $currentVersion = $inDoc.currentVersion )
      #set( $orginDocId = $currentVersion.originDocument.id )
      #set( $relatedIds = [] )
      #getBaselineRelationships( $orginDocId, $baselineId ) ## Creates $returnBaselineRels
      #foreach ( $rel in $returnBaselineRels )
        #set($dnDoc = $rel.toItem)
        #set($upDoc = $rel.fromItem)
        #if( $inDownstream )  ## Get Downstream Relationships
          #if( $upDoc.id == $inDoc.id )
            #if( !$relatedIds.contains($dnDoc.id) )
              #set( $success = $relatedIds.add($dnDoc.id) )
              #set( $success = $returnRels.add( {"fromDocument":$upDoc,"toDocument":$dnDoc} ) )
            #end
          #end
        #else                 ## Get Upstream Relationships
          #if( $dnDoc.id == $inDoc.id )
            #if( !$relatedIds.contains($upDoc.id) )
              #set( $success = $relatedIds.add($upDoc.id) )
              #set( $success = $returnRels.add( {"fromDocument":$upDoc,"toDocument":$dnDoc} ) )
            #end
          #end
        #end
      #end
    #end
  #else
    #set( $rels = [] )
    #set ( $rels = $relDao.getRelationshipsForDocument($inDoc.id, $inDownstream) )
    #foreach( $rel in $rels )
      #if( $inDownstream )  ## Get Downstream Relationships
        #if ( $rel.toDocument.active )
          #set( $success = $returnRels.add( $rel ) )
        #end
      #else                 ## Get Upstream Relationships
        #if ( $rel.fromDocument.active )
          #set( $success = $returnRels.add( $rel ) )
        #end
      #end
    #end
  #end
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getReferenceableDocIds
##          Input: documentList
##          Output: getReferenceableDocIds - list of all the doc IDs that will be referenceable in the document
#########################################################################################################################
#macro( getReferenceableDocIds ) 
  #set( $referenceableDocIds = [] )
  #set( $figureList = [] )
  #set( $tableList = [] )
  #set( $equationList = [] )
  #set( $figure_number = 1 )
  #set( $table_number = 1 )
  #set( $equation_number = 1 )
  #foreach( $vDoc in $documentList )
    #set( $doc = $vDoc.document )
    #if($baselineMode)
      #set( $success = $referenceableDocIds.add($doc.currentVersion.originDocument.id) )
    #else
      #set( $success = $referenceableDocIds.add($doc.id) )
    #end
    #getObjectType( $doc) ## creates $docObjectType, false if there is none
    #if( $docObjectType == $figureObjectType )
      #set( $success = $figureList.add( {"id":$doc.id,"reference":$figure_number} ) )
      #set($figure_number = $figure_number + 1)
    #end
    #if( $docObjectType == $tableObjectType )
      #set( $success = $tableList.add( {"id":$doc.id,"reference":$table_number} ) )
      #set($table_number = $table_number + 1)
    #end
    #if( $docObjectType == $equationObjectType )
      #set( $success = $equationList.add( {"id":$doc.id,"reference":$equation_number} ) )
      #set($equation_number = $equation_number + 1)
    #end
  #end
#end

#########################################################################################################################
##
#########################################################################################################################
##          Macro: getDate
##          Input: Java Time Zone ID to determine which timezone to display the date in
##          Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDate $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  $dateTool.format( 'MM/dd/yyyy', $inputDate, $locale, $outTz )
#end
#########################################################################################################################
##          Macro: getDateTime
##          Input: Java Time Zone ID to determine which timezone to display the date in
##          Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDateTime $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  $dateTool.format( 'MM/dd/yyyy hh:mm a', $inputDate, $locale, $outTz )
#end
#########################################################################################################################
##          Macro: getHierarchyLevel
##          Input: $doc - document object
##                 $baselineMode - true: export was from a baseline, false: export was from the project
##                 $baselineId   - ID of the baseline that the items are part of, if in baseline mode
##          Output: $hierarchyLevel - number, which heading level this item is in Jama relative to the container
#########################################################################################################################
#macro( getHierarchyLevel $doc $baselineMode $baselineId )
  #set( $seqSubStrings = [] )
  #set( $hierarchyLevel = 1)
  ## Get hierarchy from the baseline
  #if( $baselineMode )
    #set( $docNode = $documentNodeDao.getDocumentNodeForBaseLine(5, $doc.id, $baselineId))
  ## Get hierarchy from the project
  #else
    #set( $docNode = $documentNodeDao.getDocumentNode(5, $doc.id))
  #end
  ##Debug: $docNode
  #set( $seqSubStrings = $docNode.sequence.split("\."))
  ##Debug: $seqSubStrings
  #set( $hierarchyLevel = $seqSubStrings.size())
  #if( !$hierarchyLevelTop )
    #set($hierarchyLevelTop = $hierarchyLevel)
  #end
  #set($hierarchyLevel = $hierarchyLevel - $hierarchyLevelTop + 1)
#end
#########################################################################################################################
##          Macro: getStatus
##          Input: $doc - document object
##          Output: $docStatus - status of the item
#########################################################################################################################
#macro( getStatus $doc )
  #set( $docStatus = false )
  #foreach( $docTypeField in $doc.documentType.documentTypeFields )
    #if( $docTypeField.documentField.name == "status" )
      #set ( $docStatus = $doc.status.name )
      #break
    #end
  #end
#end
#########################################################################################################################
##          Macro: getObjectType
##          Input: $doc - document object
##          Output: $docObjectType - value of object_type
#########################################################################################################################
#macro( getObjectType $doc )
  #set( $docObjectType = false )
  #foreach( $docTypeField in $doc.documentType.documentTypeFields )
    #if( $docTypeField.documentField.name == $objectTypeField )
      #set ( $docObjectType = $velocityReportUtil.getValueForField($doc, $objectTypeField, $dateFormat ) )
      #break
    #end
  #end
#end
#########################################################################################################################
##                         Macro: Returns a source string from a description                                         ###
##                          @sText - string: string you searching                                                     ###
##                          @return - array: an array of image sources (url)                                          ###
#########################################################################################################################
#macro( findSourceMHTML $sText )
  #set( $findSourceMHTMLReturn = [])
  #set( $lastImageIndex = $sText.lastIndexOf("<img"))  ##>             
  #set( $startCheck = $sText.indexOf("<img")) ##>  
  #foreach( $x in [$startCheck..$lastImageIndex])
    #if( $x == $sText.indexOf( "<img", $x))  ##>
      #set($end = $sText.indexOf(">", $mathTool.toInteger($x)))
      #set( $imgString = ( $sText.substring( $mathTool.toInteger($x), $mathTool.toInteger($end))))
      #### Debug: $imgString
      #set( $srcStart = $imgString.indexOf("src="))
      #set( $srcStart = $srcStart + 5)
      #set( $srcEnd = $imgString.indexOf('"', $srcStart))
      #set($imgSrc = $imgString.substring( $srcStart, $srcEnd ))
      #if( $imgString.indexOf( $baseUrl) > -1 && $imgString.indexOf( "blob:http") == -1)
        #set( $success = $findSourceMHTMLReturn.add( $imgSrc))
      #end
    #end
  #end
#end
#########################################################################################################################
##                     Macro: Returns a source with a new cid and appends the base64 image to the end of the file    ###
##                      @sText - array: string of source                                                              ###
##                      @return - array: returns an array of strings of the new image src                             ###
#########################################################################################################################
#macro( imageArrayMTHML $sText )      
  #set( $imageArrayMHTMLReturn = [])
  #set( $imageSizeArrayMHTMLReturn = [])
  #set( $imageBase64ArrayHTMLReturn = [])
  ## Define a figure array if none exists (first image in the doc)
  #if( !$figure ) #set( $figure = [] ) #end
  ## Define a files array if none exists (first image in the doc)
  #if( !$files ) #set( $files = [] ) #end
  ##$return.clear()
  ##set( $sourceArray = [])
  ##SText: $sText<br>
  #foreach( $s in $sText)  
  ##SOURCE: $s, BASEURL: $baseUrl<br>
    #if( $s.indexOf( $baseUrl) > -1)
      #set( $srcEnd = $s.indexOf("attachment/"))
      #if ( $srcEnd < 0 )
        #set( $srcEnd = $s.indexOf("diagram/"))
        #set( $attStart = $srcEnd + 8)
      #else
        #set( $attStart = $srcEnd + 11)
      #end
      #set( $attEnd = $s.indexOf( "/", $attStart))
      #set( $attachmentId = $s.substring( $attStart, $attEnd))
      ##Att. id: $attachmentId<br>
      ##Get file extension
      #set( $fileExtStart = $s.indexOf( ".", $attEnd))
      #set( $fileExtStart = $fileExtStart + 1)
      #set( $fileExt = $s.substring( $fileExtStart, $s.length()))
      #set( $f = "JAMA_IMG_")
      #set( $f = $f.concat($attachmentId))
      #set( $f = $f.concat("."))
      #set( $f = $f.concat($fileExt))
      #set( $file = '<o:File HRef="')
      #set( $file = $file.concat( $f))
      #set( $file = $file.concat('"/>'))
      #if( $files.add( $file)) #end
      #set( $jama_cid = $f)
      #set( $newSourceLink = "cid:")
      #set( $newSourceLink = $newSourceLink.concat( $jama_cid))
      #if( $figure.add( $boundaryString)) #end
      #set( $img_jama_cid = "Content-ID: ")
      #set( $img_jama_cid = $img_jama_cid.concat( $jama_cid))
      #if( $figure.add( $img_jama_cid)) #end
      #if( $figure.add( "Content-Transfer-Encoding: base64 ")) #end
      #set( $contentType =  "Content-Type: image/")
      #set( $contentType = $contentType.concat($fileExt))
      #if( $figure.add( $contentType)) #end
      #if( $figure.add( "")) #end
      #set( $base64Fig = $attachmentService.getBase64Image( $mathTool.toInteger( $attachmentId)))
##
      ## if this a PNG, get the size
      #if( $base64Fig.substring(0, 16) == "iVBORw0KGgoAAAAN")
        #set( $base64ImageHeader = $base64Fig.substring(16, 32) )
        
        #set( $binaryImageHeader = "")
        #foreach( $i in [0..15] )
          #set( $j = $i + 1 )
          #set( $value = $base64ImageHeader.substring($i, $j) )
          ##$value
          #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
          #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
          #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
          #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
          #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
          #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
          #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
          #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
          #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
          #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
          #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
          #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
          #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
          #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
          #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
          #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
          #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
          #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
          #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
          #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
          #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
          #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
          #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
          #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
          #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
          #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
          #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
          #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
          #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
          #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
          #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
          #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
          #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
          #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
          #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
          #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
          #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
          #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
          #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
          #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
          #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
          #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
          #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
          #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
          #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
          #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
          #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
          #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
          #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
          #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
          #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
          #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
          #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
          #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
          #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
          #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
          #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
          #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
          #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
          #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
          #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
          #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
          #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
          #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
        #end
        ##IMAGE HEADER: $binaryImageHeader
        #set( $width = $mathTool.toInteger($binaryImageHeader.substring(32, 33)) * 2147483648 +
                       $mathTool.toInteger($binaryImageHeader.substring(33, 34)) * 1073741824 +
                       $mathTool.toInteger($binaryImageHeader.substring(34, 35)) * 536870912 +
                       $mathTool.toInteger($binaryImageHeader.substring(35, 36)) * 268435456 +
                       $mathTool.toInteger($binaryImageHeader.substring(36, 37)) * 134217728 +
                       $mathTool.toInteger($binaryImageHeader.substring(37, 38)) * 67108864 +
                       $mathTool.toInteger($binaryImageHeader.substring(38, 39)) * 33554432 +
                       $mathTool.toInteger($binaryImageHeader.substring(39, 40)) * 16777216 +
                       $mathTool.toInteger($binaryImageHeader.substring(40, 41)) * 8388608 +
                       $mathTool.toInteger($binaryImageHeader.substring(41, 42)) * 4194304 +
                       $mathTool.toInteger($binaryImageHeader.substring(42, 43)) * 2097152 +
                       $mathTool.toInteger($binaryImageHeader.substring(43, 44)) * 1048576 +
                       $mathTool.toInteger($binaryImageHeader.substring(44, 45)) * 524288 +
                       $mathTool.toInteger($binaryImageHeader.substring(45, 46)) * 262144 +
                       $mathTool.toInteger($binaryImageHeader.substring(46, 47)) * 131072 +
                       $mathTool.toInteger($binaryImageHeader.substring(47, 48)) * 65536 +
                       $mathTool.toInteger($binaryImageHeader.substring(48, 49)) * 32768 +
                       $mathTool.toInteger($binaryImageHeader.substring(49, 50)) * 16384 +
                       $mathTool.toInteger($binaryImageHeader.substring(50, 51)) * 8192 +
                       $mathTool.toInteger($binaryImageHeader.substring(51, 52)) * 4096 +
                       $mathTool.toInteger($binaryImageHeader.substring(52, 53)) * 2048 +
                       $mathTool.toInteger($binaryImageHeader.substring(53, 54)) * 1024 +
                       $mathTool.toInteger($binaryImageHeader.substring(54, 55)) * 512 +
                       $mathTool.toInteger($binaryImageHeader.substring(55, 56)) * 256 +
                       $mathTool.toInteger($binaryImageHeader.substring(56, 57)) * 128 +
                       $mathTool.toInteger($binaryImageHeader.substring(57, 58)) * 64 +
                       $mathTool.toInteger($binaryImageHeader.substring(58, 59)) * 32 +
                       $mathTool.toInteger($binaryImageHeader.substring(59, 60)) * 16 +
                       $mathTool.toInteger($binaryImageHeader.substring(60, 61)) * 8 +
                       $mathTool.toInteger($binaryImageHeader.substring(61, 62)) * 4 +
                       $mathTool.toInteger($binaryImageHeader.substring(62, 63)) * 2 +
                       $mathTool.toInteger($binaryImageHeader.substring(63, 64)) * 1 )
        #set( $height = $mathTool.toInteger($binaryImageHeader.substring(64, 65)) * 2147483648 +
                       $mathTool.toInteger($binaryImageHeader.substring(65, 66)) * 1073741824 +
                       $mathTool.toInteger($binaryImageHeader.substring(66, 67)) * 536870912 +
                       $mathTool.toInteger($binaryImageHeader.substring(67, 68)) * 268435456 +
                       $mathTool.toInteger($binaryImageHeader.substring(68, 69)) * 134217728 +
                       $mathTool.toInteger($binaryImageHeader.substring(69, 70)) * 67108864 +
                       $mathTool.toInteger($binaryImageHeader.substring(70, 71)) * 33554432 +
                       $mathTool.toInteger($binaryImageHeader.substring(71, 72)) * 16777216 +
                       $mathTool.toInteger($binaryImageHeader.substring(72, 73)) * 8388608 +
                       $mathTool.toInteger($binaryImageHeader.substring(73, 74)) * 4194304 +
                       $mathTool.toInteger($binaryImageHeader.substring(74, 75)) * 2097152 +
                       $mathTool.toInteger($binaryImageHeader.substring(75, 76)) * 1048576 +
                       $mathTool.toInteger($binaryImageHeader.substring(76, 77)) * 524288 +
                       $mathTool.toInteger($binaryImageHeader.substring(77, 78)) * 262144 +
                       $mathTool.toInteger($binaryImageHeader.substring(78, 79)) * 131072 +
                       $mathTool.toInteger($binaryImageHeader.substring(79, 80)) * 65536 +
                       $mathTool.toInteger($binaryImageHeader.substring(80, 81)) * 32768 +
                       $mathTool.toInteger($binaryImageHeader.substring(81, 82)) * 16384 +
                       $mathTool.toInteger($binaryImageHeader.substring(82, 83)) * 8192 +
                       $mathTool.toInteger($binaryImageHeader.substring(83, 84)) * 4096 +
                       $mathTool.toInteger($binaryImageHeader.substring(84, 85)) * 2048 +
                       $mathTool.toInteger($binaryImageHeader.substring(85, 86)) * 1024 +
                       $mathTool.toInteger($binaryImageHeader.substring(86, 87)) * 512 +
                       $mathTool.toInteger($binaryImageHeader.substring(87, 88)) * 256 +
                       $mathTool.toInteger($binaryImageHeader.substring(88, 89)) * 128 +
                       $mathTool.toInteger($binaryImageHeader.substring(89, 90)) * 64 +
                       $mathTool.toInteger($binaryImageHeader.substring(90, 91)) * 32 +
                       $mathTool.toInteger($binaryImageHeader.substring(91, 92)) * 16 +
                       $mathTool.toInteger($binaryImageHeader.substring(92, 93)) * 8 +
                       $mathTool.toInteger($binaryImageHeader.substring(93, 94)) * 4 +
                       $mathTool.toInteger($binaryImageHeader.substring(94, 95)) * 2 +
                       $mathTool.toInteger($binaryImageHeader.substring(95, 96)) * 1 )
        #if( $imageSizeArrayMHTMLReturn.add( {"width":$width, "height":$height}) ) #end
      #elseif( $fileExt == "svg" || $fileExt == "SVG" )
        #set( $binaryImageHeader = "")
        #foreach( $i in [0..2000] )
          #set( $j = $i + 1 )
          #set( $value = $base64Fig.substring($i, $j) )
          ##$value
          #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
          #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
          #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
          #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
          #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
          #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
          #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
          #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
          #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
          #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
          #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
          #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
          #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
          #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
          #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
          #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
          #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
          #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
          #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
          #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
          #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
          #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
          #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
          #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
          #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
          #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
          #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
          #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
          #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
          #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
          #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
          #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
          #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
          #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
          #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
          #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
          #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
          #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
          #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
          #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
          #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
          #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
          #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
          #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
          #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
          #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
          #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
          #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
          #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
          #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
          #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
          #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
          #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
          #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
          #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
          #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
          #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
          #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
          #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
          #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
          #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
          #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
          #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
          #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
        #end
        ##IMAGE HEADER: $binaryImageHeader
        #set( $byteCount = $binaryImageHeader.length() / 8 -  1 )
        #set( $ascii = "" )
        #foreach( $byte in [0..$byteCount] )
          #set( $i = $byte * 8)
          #set( $j = $i + 8 )
          #set( $value = $binaryImageHeader.substring($i, $j) )
          #if( $value == "00100000") #set($ascii = "${ascii} ")
          #elseif( $value == "00100001") #set($ascii = "${ascii}!")
          #elseif( $value == "00100010") #set($ascii = "${ascii}$escapeTool.getQuote()")
          #elseif( $value == "00100011") #set($ascii = "${ascii}#")
          #elseif( $value == "00100100") #set($ascii = "${ascii}$")
          #elseif( $value == "00100101") #set($ascii = "${ascii}%")
          #elseif( $value == "00100110") #set($ascii = "${ascii}&")
          #elseif( $value == "00100111") #set($ascii = "${ascii}'")
          #elseif( $value == "00101000") #set($ascii = "${ascii}(")
          #elseif( $value == "00101001") #set($ascii = "${ascii})")
          #elseif( $value == "00101010") #set($ascii = "${ascii}*")
          #elseif( $value == "00101011") #set($ascii = "${ascii}+")
          #elseif( $value == "00101100") #set($ascii = "${ascii},")
          #elseif( $value == "00101101") #set($ascii = "${ascii}-")
          #elseif( $value == "00101110") #set($ascii = "${ascii}.")
          #elseif( $value == "00101111") #set($ascii = "${ascii}/")
          #elseif( $value == "00110000") #set($ascii = "${ascii}0")
          #elseif( $value == "00110001") #set($ascii = "${ascii}1")
          #elseif( $value == "00110010") #set($ascii = "${ascii}2")
          #elseif( $value == "00110011") #set($ascii = "${ascii}3")
          #elseif( $value == "00110100") #set($ascii = "${ascii}4")
          #elseif( $value == "00110101") #set($ascii = "${ascii}5")
          #elseif( $value == "00110110") #set($ascii = "${ascii}6")
          #elseif( $value == "00110111") #set($ascii = "${ascii}7")
          #elseif( $value == "00111000") #set($ascii = "${ascii}8")
          #elseif( $value == "00111001") #set($ascii = "${ascii}9")
          #elseif( $value == "00111010") #set($ascii = "${ascii}:")
          #elseif( $value == "00111011") #set($ascii = "${ascii};")
          #elseif( $value == "00111100") #set($ascii = "${ascii}<")
          #elseif( $value == "00111101") #set($ascii = "${ascii}=")
          #elseif( $value == "00111110") #set($ascii = "${ascii}>")
          #elseif( $value == "00111111") #set($ascii = "${ascii}?")
          #elseif( $value == "01000000") #set($ascii = "${ascii}@")
          #elseif( $value == "01000001") #set($ascii = "${ascii}A")
          #elseif( $value == "01000010") #set($ascii = "${ascii}B")
          #elseif( $value == "01000011") #set($ascii = "${ascii}C")
          #elseif( $value == "01000100") #set($ascii = "${ascii}D")
          #elseif( $value == "01000101") #set($ascii = "${ascii}E")
          #elseif( $value == "01000110") #set($ascii = "${ascii}F")
          #elseif( $value == "01000111") #set($ascii = "${ascii}G")
          #elseif( $value == "01001000") #set($ascii = "${ascii}H")
          #elseif( $value == "01001001") #set($ascii = "${ascii}I")
          #elseif( $value == "01001010") #set($ascii = "${ascii}J")
          #elseif( $value == "01001011") #set($ascii = "${ascii}K")
          #elseif( $value == "01001100") #set($ascii = "${ascii}L")
          #elseif( $value == "01001101") #set($ascii = "${ascii}M")
          #elseif( $value == "01001110") #set($ascii = "${ascii}N")
          #elseif( $value == "01001111") #set($ascii = "${ascii}O")
          #elseif( $value == "01010000") #set($ascii = "${ascii}P")
          #elseif( $value == "01010001") #set($ascii = "${ascii}Q")
          #elseif( $value == "01010010") #set($ascii = "${ascii}R")
          #elseif( $value == "01010011") #set($ascii = "${ascii}S")
          #elseif( $value == "01010100") #set($ascii = "${ascii}T")
          #elseif( $value == "01010101") #set($ascii = "${ascii}U")
          #elseif( $value == "01010110") #set($ascii = "${ascii}V")
          #elseif( $value == "01010111") #set($ascii = "${ascii}W")
          #elseif( $value == "01011000") #set($ascii = "${ascii}X")
          #elseif( $value == "01011001") #set($ascii = "${ascii}Y")
          #elseif( $value == "01011010") #set($ascii = "${ascii}Z")
          #elseif( $value == "01011011") #set($ascii = "${ascii}[")
          #elseif( $value == "01011100") #set($ascii = "${ascii}$escapeTool.getBackslash()")
          #elseif( $value == "01011101") #set($ascii = "${ascii}]")
          #elseif( $value == "01011110") #set($ascii = "${ascii}^")
          #elseif( $value == "01011111") #set($ascii = "${ascii}_")
          #elseif( $value == "01100000") #set($ascii = "${ascii}`")
          #elseif( $value == "01100001") #set($ascii = "${ascii}a")
          #elseif( $value == "01100010") #set($ascii = "${ascii}b")
          #elseif( $value == "01100011") #set($ascii = "${ascii}c")
          #elseif( $value == "01100100") #set($ascii = "${ascii}d")
          #elseif( $value == "01100101") #set($ascii = "${ascii}e")
          #elseif( $value == "01100110") #set($ascii = "${ascii}f")
          #elseif( $value == "01100111") #set($ascii = "${ascii}g")
          #elseif( $value == "01101000") #set($ascii = "${ascii}h")
          #elseif( $value == "01101001") #set($ascii = "${ascii}i")
          #elseif( $value == "01101010") #set($ascii = "${ascii}j")
          #elseif( $value == "01101011") #set($ascii = "${ascii}k")
          #elseif( $value == "01101100") #set($ascii = "${ascii}l")
          #elseif( $value == "01101101") #set($ascii = "${ascii}m")
          #elseif( $value == "01101110") #set($ascii = "${ascii}n")
          #elseif( $value == "01101111") #set($ascii = "${ascii}o")
          #elseif( $value == "01110000") #set($ascii = "${ascii}p")
          #elseif( $value == "01110001") #set($ascii = "${ascii}q")
          #elseif( $value == "01110010") #set($ascii = "${ascii}r")
          #elseif( $value == "01110011") #set($ascii = "${ascii}s")
          #elseif( $value == "01110100") #set($ascii = "${ascii}t")
          #elseif( $value == "01110101") #set($ascii = "${ascii}u")
          #elseif( $value == "01110110") #set($ascii = "${ascii}v")
          #elseif( $value == "01110111") #set($ascii = "${ascii}w")
          #elseif( $value == "01111000") #set($ascii = "${ascii}x")
          #elseif( $value == "01111001") #set($ascii = "${ascii}y")
          #elseif( $value == "01111010") #set($ascii = "${ascii}z")
          #elseif( $value == "01111011") #set($ascii = "${ascii}{")
          #elseif( $value == "01111100") #set($ascii = "${ascii}|")
          #elseif( $value == "01111101") #set($ascii = "${ascii}}")
          #elseif( $value == "01111110") #set($ascii = "${ascii}~") #end
        #end
        #set( $height = $ascii.replaceAll('(?s).*?<svg.*?height="(\d*).*?".*?>','$1') )
        #set( $width = $ascii.replaceAll('(?s).*?<svg.*?width="(\d*).*?".*?>','$1') )
        #if( $imageSizeArrayMHTMLReturn.add( {"width":$width, "height":$height}) ) #end
      #else
        #if( $imageSizeArrayMHTMLReturn.add( {"width":false, "height":false}) ) #end
      #end
      #if( $figure.add( $base64Fig)) #end
      #if( $figure.add( "")) #end
      #if( $base64Fig )
        #set( $imageData = "data:image/" )
        #set( $imageData = $imageData.concat($fileExt) )
        #set( $imageData = $imageData.concat(";base64, ") )
        #set( $imageData = $imageData.concat($base64Fig) )
      #else
        #set( $imageData = "" )
      #end
      #if( $imageBase64ArrayHTMLReturn.add( $imageData)) #end
    #else ##Return the same source
      #set( $newSourceLink = "")
    #end
    #if( $imageArrayMHTMLReturn.add( $newSourceLink)) #end
  #end
#end
#########################################################################################################################
##                          Macro: Convert Figures to Word shapes and resize                                          ###
##                           $input - string: string passed to the macro containing img tags                          ###
##                           $maxWidth - number: maximum allowed width of images, resize if greater                   ###
##                           Returns string with images converted to Word shapes                                      ###
##                                                                                                                    ###
#########################################################################################################################
#macro( convertFigures $input $maxWidth )
  ## clear any previous values
  #set( $width = false )
  #set( $height = false )
  #set( $targetWidth = false )
  #set( $targetHeight = false )
##
  ## set a default maximum height if none is specified in the global constants
  #if( !$maxPageHeight )
    #set ($maxHeight = 575)
  #else
    #set ($maxHeight = $maxPageHeight )
  #end

  #* ## Placeholder for future work
  ## Split the string into a substring per image
  #set ( $subs = $inString.split(">"))

  ## If an image is found process each image
  #if( $subs.size() > 1 )
    #foreach( $sub in $subs )
      #if( !$foreach.last) #set( $sub = "${sub}>") #end
      #if( $sub.indexOf("<img") > -1 && $sub.indexOf($baseUrl) > -1 )
    #end
  #end
  *#

  ## Create the initial output string
  #set( $output = $input )
##
  ## process if there is at least one image tag in the string
  #if( $input.indexOf("<img") > -1 )
##
    ## Create a list of all image Urls in the string
    #findSourceMHTML( $input )
    #set( $imgUrls = $findSourceMHTMLReturn)
    #### Debug imgUrls: $imgUrls
##
    ## Embedded each image in the MTHML output, create a list of the sources
    ## and create a list of the image sizes for PNG images
    #imageArrayMTHML( $imgUrls )
    #set( $imgSources = $imageArrayMHTMLReturn )
    #set( $imageSizes = $imageSizeArrayMHTMLReturn )
    #set( $imageBase64s = $imageBase64ArrayHTMLReturn )

    #### Debug imgSources: $imgSources
##
    

    ## For each identified image, replace the HTML image tag with a Word shape 
    ## using the MHTML embedded image as the source
    #foreach( $imgSource in $imgSources)
      ## if the image is not already base64 encoded
      #if( $imgUrls.get($foreach.index).indexOf(";base64") == -1 )
        ## Locate the position of this image
        #set( $sourcePosition = $input.indexOf($imgUrls.get($foreach.index)) )
        #set( $inputStart = $input.lastIndexOf("<img", $sourcePosition) )
        #set( $inputEnd = $input.indexOf(">", $sourcePosition) )
        #if( $inputStart > -1 && $inputEnd > -1 )
          #set( $inputImage = "" )
          #set( $inputImage = $input.substring($inputStart, $inputEnd) )
  ##
          ## Determine the size of the image stored in HTML
          #if( $inputImage.indexOf( "height=") > -1 && $inputImage.indexOf( "width=") > -1)
            #set($height = $inputImage.replaceAll('(?s).*?height="([0-9]*)".*','$1'))
            #set($width = $inputImage.replaceAll('(?s).*?width="([0-9]*)".*','$1'))
          ## If no image size is found in HTML, use the image size extracted directly from the image
          ## Only works for PNGs. Non-PNGs return a height and width of false
          #elseif( $imageSizes.size() > $foreach.index )
            #set( $height = $imageSizes.get($foreach.index).height )
            #set( $width = $imageSizes.get($foreach.index).width )
          #end
          #### Debug: width=$width, height=$height
  ##
          ## if a hight and width are known, resize the image appropriately
          #if( $height && $width )
            #set( $widthInt = $mathTool.toNumber($width) )
            #set( $heightInt = $mathTool.toNumber($height) )
            #### Debug: $widthInt x $heightInt
  ##
            #set ($aspectRatio = 1.5)
            #set ($aspectRatio = $mathTool.toDouble($widthInt) / $mathTool.toDouble($heightInt))
            #### Debug Aspect Ratio: $aspectRatio
  ##
            ## if the image is a formula created by Wiris and less than the max width, reduce the size to 75%
            #if( $input.indexOf("Wirisformula") > -1 && $widthInt <= $maxWidth )
              #set( $targetWidth = $mathTool.mul($widthInt, 0.75) )
              #set( $targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio) )
  ##
            ## if the image is higher than allowed, resize
            #elseif( $heightInt > $maxHeight )
              #set ($targetHeight = $maxHeight)
              #set ($targetWidth = $mathTool.mul($mathTool.toNumber($targetHeight), $aspectRatio))
  ##
              ## if the image is still wider than allowed, resize again
              #if( $targetWidth > $maxWidth )
                #set ($targetWidth = $maxWidth)
                #set ($targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio))
              #end
  ##
            ## if the image is wider than allowed, resize
            #elseif( $widthInt > $maxWidth )
              #set ($targetWidth = $maxWidth)
              #set ($targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio))
  ##
              ## if the image is still higher than allowed, resize again
              #if( $targetHeight > $maxHeight )
                #set ($targetHeight = $maxHeight)
                #set ($targetWidth = $mathTool.mul($mathTool.toNumber($targetHeight), $aspectRatio))
              #end
            #else
              #set ($targetWidth = $widthInt)
              #set ($targetHeight = $heightInt)
            #end
          #end

          ## find string for use in final replace all
          #set( $find = "(?s)<img{^>}*?$imgUrls.get($foreach.index){^>}*?>" )
          #set( $find = $find.replaceAll("\/", "\\/") )
          #set( $find = $find.replaceAll("\{", "[") )
          #set( $find = $find.replaceAll("\}", "]") )
          #### Debug find: $find
  ##
          ## Update size for PDF output or for Word output
          ## replace the HTML image tags with Word shapes using the images embedded in the MHTML file
          ## if a target size has been idintified, use it, otherwise provide no size at let Word chose a size
          #if( $format == "doc")
            #if( !$targetHeight || !$targetWidth )
              #set( $replace = "<!--[if gte vml 1]><v:shape style='visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]-->" )
            #else
              #if( $input.indexOf("Wirisformula") > -1 )
                #set( $replace = "<span style='position:relative;top:7.0pt;mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--></span>" )
              #else
                #set( $replace = "<!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]-->" )
              #end
            #end
          #elseif( $format == "pdf")
            #set( $replace = "<img src=$imgUrls.get($foreach.index) style='height:${targetHeight}pt;width:${targetWidth}pt' />" )
          #else
            #set( $replace = "<img src='$imageBase64s.get($foreach.index)' style='height:${targetHeight}pt;width:${targetWidth}pt' />" )
          #end
          #set( $output = $output.replaceAll($find, $replace) )
        #end
      #end
    #end
  #end
  ##------------------------
  ##  Return String        #
  ##------------------------
  $output
#end
#########################################################################################################################
##
##          START WORK IN PROGRESS
## 
#########################################################################################################################

#########################################################################################################################
##          Macro: Extracts image size from image source, if possible, in case there is no size specified in html     ###
##                      $base64Source - base64 source for the image                                                   ###
##                      $imageSizeReturn - size of image                                                              ###
#########################################################################################################################
#macro( getImageSize $base64Source )
  ## if this a PNG, get the size
  #if( $base64Source.substring(0, 16) == "iVBORw0KGgoAAAAN")
    #set( $base64ImageHeader = $base64Source.substring(16, 32) )
    
    #set( $binaryImageHeader = "")
    #foreach( $i in [0..15] )
      #set( $j = $i + 1 )
      #set( $value = $base64ImageHeader.substring($i, $j) )
      ##$value
      #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
      #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
      #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
      #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
      #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
      #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
      #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
      #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
      #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
      #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
      #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
      #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
      #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
      #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
      #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
      #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
      #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
      #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
      #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
      #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
      #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
      #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
      #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
      #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
      #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
      #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
      #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
      #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
      #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
      #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
      #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
      #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
      #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
      #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
      #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
      #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
      #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
      #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
      #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
      #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
      #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
      #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
      #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
      #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
      #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
      #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
      #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
      #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
      #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
      #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
      #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
      #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
      #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
      #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
      #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
      #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
      #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
      #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
      #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
      #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
      #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
      #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
      #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
      #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
    #end
    ##IMAGE HEADER: $binaryImageHeader
    #set( $width = $mathTool.toInteger($binaryImageHeader.substring(32, 33)) * 2147483648 +
                   $mathTool.toInteger($binaryImageHeader.substring(33, 34)) * 1073741824 +
                   $mathTool.toInteger($binaryImageHeader.substring(34, 35)) * 536870912 +
                   $mathTool.toInteger($binaryImageHeader.substring(35, 36)) * 268435456 +
                   $mathTool.toInteger($binaryImageHeader.substring(36, 37)) * 134217728 +
                   $mathTool.toInteger($binaryImageHeader.substring(37, 38)) * 67108864 +
                   $mathTool.toInteger($binaryImageHeader.substring(38, 39)) * 33554432 +
                   $mathTool.toInteger($binaryImageHeader.substring(39, 40)) * 16777216 +
                   $mathTool.toInteger($binaryImageHeader.substring(40, 41)) * 8388608 +
                   $mathTool.toInteger($binaryImageHeader.substring(41, 42)) * 4194304 +
                   $mathTool.toInteger($binaryImageHeader.substring(42, 43)) * 2097152 +
                   $mathTool.toInteger($binaryImageHeader.substring(43, 44)) * 1048576 +
                   $mathTool.toInteger($binaryImageHeader.substring(44, 45)) * 524288 +
                   $mathTool.toInteger($binaryImageHeader.substring(45, 46)) * 262144 +
                   $mathTool.toInteger($binaryImageHeader.substring(46, 47)) * 131072 +
                   $mathTool.toInteger($binaryImageHeader.substring(47, 48)) * 65536 +
                   $mathTool.toInteger($binaryImageHeader.substring(48, 49)) * 32768 +
                   $mathTool.toInteger($binaryImageHeader.substring(49, 50)) * 16384 +
                   $mathTool.toInteger($binaryImageHeader.substring(50, 51)) * 8192 +
                   $mathTool.toInteger($binaryImageHeader.substring(51, 52)) * 4096 +
                   $mathTool.toInteger($binaryImageHeader.substring(52, 53)) * 2048 +
                   $mathTool.toInteger($binaryImageHeader.substring(53, 54)) * 1024 +
                   $mathTool.toInteger($binaryImageHeader.substring(54, 55)) * 512 +
                   $mathTool.toInteger($binaryImageHeader.substring(55, 56)) * 256 +
                   $mathTool.toInteger($binaryImageHeader.substring(56, 57)) * 128 +
                   $mathTool.toInteger($binaryImageHeader.substring(57, 58)) * 64 +
                   $mathTool.toInteger($binaryImageHeader.substring(58, 59)) * 32 +
                   $mathTool.toInteger($binaryImageHeader.substring(59, 60)) * 16 +
                   $mathTool.toInteger($binaryImageHeader.substring(60, 61)) * 8 +
                   $mathTool.toInteger($binaryImageHeader.substring(61, 62)) * 4 +
                   $mathTool.toInteger($binaryImageHeader.substring(62, 63)) * 2 +
                   $mathTool.toInteger($binaryImageHeader.substring(63, 64)) * 1 )
    #set( $height = $mathTool.toInteger($binaryImageHeader.substring(64, 65)) * 2147483648 +
                   $mathTool.toInteger($binaryImageHeader.substring(65, 66)) * 1073741824 +
                   $mathTool.toInteger($binaryImageHeader.substring(66, 67)) * 536870912 +
                   $mathTool.toInteger($binaryImageHeader.substring(67, 68)) * 268435456 +
                   $mathTool.toInteger($binaryImageHeader.substring(68, 69)) * 134217728 +
                   $mathTool.toInteger($binaryImageHeader.substring(69, 70)) * 67108864 +
                   $mathTool.toInteger($binaryImageHeader.substring(70, 71)) * 33554432 +
                   $mathTool.toInteger($binaryImageHeader.substring(71, 72)) * 16777216 +
                   $mathTool.toInteger($binaryImageHeader.substring(72, 73)) * 8388608 +
                   $mathTool.toInteger($binaryImageHeader.substring(73, 74)) * 4194304 +
                   $mathTool.toInteger($binaryImageHeader.substring(74, 75)) * 2097152 +
                   $mathTool.toInteger($binaryImageHeader.substring(75, 76)) * 1048576 +
                   $mathTool.toInteger($binaryImageHeader.substring(76, 77)) * 524288 +
                   $mathTool.toInteger($binaryImageHeader.substring(77, 78)) * 262144 +
                   $mathTool.toInteger($binaryImageHeader.substring(78, 79)) * 131072 +
                   $mathTool.toInteger($binaryImageHeader.substring(79, 80)) * 65536 +
                   $mathTool.toInteger($binaryImageHeader.substring(80, 81)) * 32768 +
                   $mathTool.toInteger($binaryImageHeader.substring(81, 82)) * 16384 +
                   $mathTool.toInteger($binaryImageHeader.substring(82, 83)) * 8192 +
                   $mathTool.toInteger($binaryImageHeader.substring(83, 84)) * 4096 +
                   $mathTool.toInteger($binaryImageHeader.substring(84, 85)) * 2048 +
                   $mathTool.toInteger($binaryImageHeader.substring(85, 86)) * 1024 +
                   $mathTool.toInteger($binaryImageHeader.substring(86, 87)) * 512 +
                   $mathTool.toInteger($binaryImageHeader.substring(87, 88)) * 256 +
                   $mathTool.toInteger($binaryImageHeader.substring(88, 89)) * 128 +
                   $mathTool.toInteger($binaryImageHeader.substring(89, 90)) * 64 +
                   $mathTool.toInteger($binaryImageHeader.substring(90, 91)) * 32 +
                   $mathTool.toInteger($binaryImageHeader.substring(91, 92)) * 16 +
                   $mathTool.toInteger($binaryImageHeader.substring(92, 93)) * 8 +
                   $mathTool.toInteger($binaryImageHeader.substring(93, 94)) * 4 +
                   $mathTool.toInteger($binaryImageHeader.substring(94, 95)) * 2 +
                   $mathTool.toInteger($binaryImageHeader.substring(95, 96)) * 1 )
    #set( $imageSizeReturn = {"width":$width, "height":$height} )
  #else
    #set( $imageSizeReturn = {"width": false, "height": false} )
  #end
#end
#########################################################################################################################
##                     Macro: Embeds attached images as base64                                                        ###
##                      $jamaUrl - Url of an attached image in Jama                                                   ###
##                      $returnSource - Replacement source ID for the now embedded image                              ###
##                      $returnBase64Image - Base64 encoded image 
#########################################################################################################################
#macro( embedImage $jamaUrl )      
  #set( $returnSource = false )
  ## Define a figure array if none exists (first image in the doc)
  #if( !$figure ) #set( $figure = [] ) #end
  ## Define a files array if none exists (first image in the doc)
  #if( !$files ) #set( $files = [] ) #end

  #if( $jamaUrl )
    ## Get attachment ID and file extension
    #set( $srcEnd = $jamaUrl.indexOf("attachment/"))
    #if ( $srcEnd < 0 )
      #set( $srcEnd = $jamaUrl.indexOf("diagram/"))
      #set( $attStart = $srcEnd + 8)
    #else
      #set( $attStart = $srcEnd + 11)
    #end
    #set( $attEnd = $jamaUrl.indexOf( "/", $attStart))
    #set( $attachmentId = $jamaUrl.substring( $attStart, $attEnd))
    #set( $fileExtStart = $jamaUrl.indexOf( ".", $attEnd))
    #set( $fileExtStart = $fileExtStart + 1)
    #set( $fileExt = $jamaUrl.substring( $fileExtStart, $s.length()))
    ## Create new file name, File List Entry and Embedded file
    #set( $f = "JAMA_IMG_")
    #set( $f = $f.concat($attachmentId))
    #set( $f = $f.concat("."))
    #set( $f = $f.concat($fileExt))
    #set( $file = '<o:File HRef="')
    #set( $file = $file.concat( $f))
    #set( $file = $file.concat('"/>'))
    #if( $files.add( $file)) #end
    #set( $jama_cid = $f)
    #set( $newSourceLink = "cid:")
    #set( $newSourceLink = $newSourceLink.concat( $jama_cid))
    #if( $figure.add( $boundaryString)) #end
    #set( $img_jama_cid = "Content-ID: ")
    #set( $img_jama_cid = $img_jama_cid.concat( $jama_cid))
    #if( $figure.add( $img_jama_cid)) #end
    #if( $figure.add( "Content-Transfer-Encoding: base64 ")) #end
    #set( $contentType =  "Content-Type: image/")
    #set( $contentType = $contentType.concat($fileExt))
    #if( $figure.add( $contentType)) #end
    #if( $figure.add( "")) #end
    #set( $base64Fig = $attachmentService.getBase64Image( $mathTool.toInteger( $attachmentId)))
    #if( $figure.add( $base64Fig)) #end
    #if( $figure.add( "")) #end
    #set( $imageData = "data:image/" )
    #set( $imageData = $imageData.concat($fileExt) )
    #set( $imageData = $imageData.concat(";base64, ") )
    #set( $imageData = $imageData.concat($base64Fig) )
##
    ## Return Values
    #set( $returnSource = $newSourceLink )
    #set( $returnBase64Image = $base64Fig )
  #end
#end
#########################################################################################################################
##                          Macro: Resizes images larger than maximum                                               
##                           $inHeight - starting height of image
##                           $inWidth - starting width of image
##                           $maxHeight - maximum allowed height of image
##                           $maxWidth - maximum allowed width of image
##                           $returnHeight - resized height
##                           $returnWidth - resized width                                     
#########################################################################################################################
#macro( resizeImage $inHeight $inWidth $maxHeight $maxWidth )
  #if( $inHeight && $inWidth && $maxHeight && $maxWidth )
    #set( $widthInt = $mathTool.toNumber($inWidth) )
    #set( $heightInt = $mathTool.toNumber($inHeight) )
    #### Debug: $widthInt x $heightInt
##
    #set ($aspectRatio = 1.5)
    #set ($aspectRatio = $mathTool.toDouble($widthInt) / $mathTool.toDouble($heightInt))
    #### Debug Aspect Ratio: $aspectRatio
##
    ## if the image is a formula created by Wiris and less than the max width, reduce the size to 75%
    #if( $input.indexOf("Wirisformula") > -1 && $widthInt <= $maxWidth )
      #set( $returnWidth = $mathTool.mul($widthInt, 0.75) )
      #set( $returnHeight = $mathTool.div($mathTool.toNumber($returnWidth), $aspectRatio) )
##
    ## if the image is higher than allowed, resize
    #elseif( $heightInt > $maxHeight )
      #set ($returnHeight = $maxHeight)
      #set ($returnWidth = $mathTool.mul($mathTool.toNumber($returnHeight), $aspectRatio))
##
      ## if the image is still wider than allowed, resize again
      #if( $returnWidth > $maxWidth )
        #set ($returnWidth = $maxWidth)
        #set ($returnHeight = $mathTool.div($mathTool.toNumber($returnWidth), $aspectRatio))
      #end
##
    ## if the image is wider than allowed, resize
    #elseif( $widthInt > $maxWidth )
      #set ($returnWidth = $maxWidth)
      #set ($returnHeight = $mathTool.div($mathTool.toNumber($returnWidth), $aspectRatio))
##
      ## if the image is still higher than allowed, resize again
      #if( $returnHeight > $maxHeight )
        #set ($returnHeight = $maxHeight)
        #set ($returnWidth = $mathTool.mul($mathTool.toNumber($returnHeight), $aspectRatio))
      #end
    #else
      #set ($returnWidth = $widthInt)
      #set ($returnHeight = $heightInt)
    #end
  #else
    #set ($returnWidth = false )
    #set ($returnHeight = false )
  #end
#end

#########################################################################################################################
##                          Macro: Convert Figures to Word shapes and resize                                          ###
##                           $input - string: string passed to the macro containing img tags                          ###
##                           $maxWidth - number: maximum allowed width of images, resize if greater                   ###
##                           Returns string with images converted to Word shapes                                      ###
##                                                                                                                    ###
##      WORK IN PROGRESS TO ADDRESS VEXPORT-DEF-22
#########################################################################################################################
#macro( convertFiguresNew $input $maxWidth )
  ## clear any previous values
  #set( $width = false )
  #set( $height = false )
  #set( $targetWidth = false )
  #set( $targetHeight = false )
##
  ## set a default maximum height if none is specified in the global constants
  #if( !$maxPageHeight )
    #set ($maxHeight = 575)
  #else
    #set ($maxHeight = $maxPageHeight )
  #end
##
  ## Split the string into a substring per html tag
  #set( $subs = [] )
  #set( $output = "" )
  #set( $subsStepOne = $input.split(">") )
  #if( $subsStepOne.size() > 1 )
    #foreach( $subStepOne in $subsStepOne )
      #if( !$foreach.last) #set( $subStepOne = "${subStepOne}>") #end
      #set( $subsStepTwo = $subStepOne.split("<") )
      #foreach( $subStepTwo in $subsStepTwo )
        #if( !$foreach.first) #set( $subStepTwo = "<${subStepTwo}") #end
        #set( $success  = $subs.add($subStepTwo) )
      #end
    #end
  #end
##
  ## Notes on the approach
  ## Word: resized v:shape object referencing base64 attachment (use this approach for embedded base64 images and attached images in Jama)
  ## PDF:  resized <img tag with link to jama location for attached images or inline base64
  ## HTML: resized <img tag with inline base64

  ## Iterate through each substring and convert each image -- STILL A WORK IN PROGRESS
  #foreach( $sub in $subs )
    #if( $sub.indexOf("<img") > -1 )
      #set( $srcStart = $sub.indexOf("src=") )
      #set( $srcStart = $srcStart + 5 )
      #set( $srcEnd = $sub.indexOf('"', $srcStart) )
      #set( $jamaSrc = $sub.substring($srcStart, $srcEnd) )
      #if( $sub.indexOf(";base64") > -1 )
        ## image embedded in rich text in base64 format
        ## Extract base64 image
        #set( $base64DataStart = $sub.indexOf(";base64") )
        #set( $base64DataStart = $base64DataStart + 8 )
        #set( $base64DataEnd = $sub.indexOf('"', $base64DataStart) )
        #set( $base64Data = $sub.substring($base64DataStart, $base64DataEnd) )
        ## Determine size of the image
        #getImageSize( $base64Data ) ## Creates $imageSizeReturn
        ## Resize the image if it's too large for the page
        #resizeImage( $imageSizeReturn.height $imageSizeReturn.width $maxHeight $maxWidth ) ## Creates $returnWidth and $returnHeight
        #if( $returnHeight && $returnWidth )
          ##convert dimensions from pt to px
          ##set( $targetHeight = $returnHeight * 1.33 )
          ##set( $targetWidth = $returnWidth * 1.33 )
          #set( $targetHeight = $returnHeight )
          #set( $targetWidth = $returnWidth )
          ##set( $replace = "height='$targetHeight' width='$targetWidth' />" )
          #set( $sub = "<!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$jamaSrc' o:title='image' /></v:shape><![endif]-->" )
        #end
        #set( $output = "$output$sub")
      #elseif( $sub.indexOf($baseUrl) > -1 )
        ## image stored as an attachment
        ## Embed attachement and obtain new source link
        
        #embedImage( $jamaSrc ) ## Creates $returnSource and $returnBase64Image
        #set( $newSource = $returnSource )
        ## Determine Current Image Size and resize as needed
        #if( $sub.indexOf( "height=") > -1 && $sub.indexOf( "width=") > -1)
          ## If there is a size in HTML, use it
          #set($height = $sub.replaceAll('(?s).*?height="([0-9]*)".*','$1'))
          #set($width = $sub.replaceAll('(?s).*?width="([0-9]*)".*','$1'))
          #resizeImage( $height $width $maxHeight $maxWidth ) ## Creates $returnWidth and $returnHeight
        #else
          ## If no image size is found in HTML, use the image size extracted directly from the image
          ## Only works for PNGs. Non-PNGs return a height and width of false
          #getImageSize( $returnBase64Image ) ## Creates $imageSizeReturn
          #resizeImage( $imageSizeReturn.height $imageSizeReturn.width $maxHeight $maxWidth ) ## Creates $returnWidth and $returnHeight
        #end
        
        #set( $output = "$output$sub")
      #end
    #end
  #end
  $output
#end
#########################################################################################################################
#########################################################################################################################
##
##          END WORK IN PROGRESS
## 
#########################################################################################################################

#########################################################################################################################
##          Macro: convertEquals
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( convertEquals $inString )
#set( $string = $inString )
#set( $string = $string.replaceAll("=", "=3D"))
$string
#end
#########################################################################################################################
##          Macro: formatText
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatText $inString )
#set( $string = $inString )
## clear all span satements to remove character formatting
#set( $string = $string.replaceAll("<span.*?>",""))
#set( $string = $string.replaceAll("<\/span>",""))
## clear all embedded headings from rich text fields
#set( $string = $string.replaceAll("<h\d*?.*?>","<p><strong>"))
#set( $string = $string.replaceAll("<\/h\d*?>","</strong></p>"))
$string
#end
#########################################################################################################################
##          Macro: formatTables
##          Input: $inString - input string
##                 $maxWidth - number: maximum allowed width(pts) of tables, resize if greater 
##                 $tableAlign - left, right, center alignment of table              
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatTables $inString $maxWidth $tableAlign )
##
  #if( $inString.contains("<table") )
    ## Clear variables used in the macro
    #set( $output = "" ) ##
    #set( $table = false ) ##
    #set( $tableHeader = false ) ##
    #set( $tableCell = false ) ##
    #set( $tableCellParagraph = false ) ##
##
    ## For tables, each tag that makes up the table needs to be independnetly processed, so split the description into
    ## an array where each each value in the array is a single tag of the HTML, split on '>'
    ## $sub = array of individual tags in the description
    #set ( $subs = $inString.split(">"))##
##
    ## Iterate on each substring
    #foreach ($sub in $subs) ##
      ## append > to each sub except the last one since the split cut it off
      #if( !$foreach.last) #set( $sub = "${sub}>") #end ##
##
      ## Determine where in a table we are
      #if( $sub.contains("<table") ) 
        #set( $table = true )  
        #set( $ogTableWidthPt = false ) ## clear value since this table is new 
        #set( $newTableWidthPt = false ) ## clear value since this table is new 
        #set( $tableScaleFactor = false ) ## clear value since this table is new 
      #end ##
      #if( $sub.contains("<thead") ) #set( $tableHeader = true )  #end ##
      #if( $sub.contains("<td") || $sub.contains("<th") ) #set( $tableCell = true )  #end ##
      #if( $sub.contains("<p") || $sub.contains("<li") ) #set( $tableCellParagraph = true )  #end ##
##
      ###########################################################################
      ## - make sure all table cells include a paragraph with an apropriate class
      ###########################################################################
     #if( $table && !$tableHeader && $tableCell)
        #set($sub = $sub.replaceAll('<p(.*)','<p class=TableCell$1')) ##
        #set( $sub = $sub.replaceAll('<li(.*?)>','<li class=TableCell$1>'))
      #end


      #if($table && $tableHeader && $tableCell)
        #set($sub = $sub.replaceAll('<p(.*)','<p class=TableHeader$1')) ##
        #set( $sub = $sub.replaceAll('<li(.*?)>','<li class=TableHeader$1>'))
      #end

      ## cells with no formatting
      #if( $sub.contains("<td") &&
            !$subs[$nextSubIndex].contains("<p") && 
            !$subs[$nextSubIndex].contains("<li") )
        #set( $sub = "$sub<p class=TableCell>")
      #end

      #if( $sub.contains("<th") && ($docName != "Inspection Plan" && $docName != "Release History") &&
            !$subs[$nextSubIndex].contains("<p") && 
            !$subs[$nextSubIndex].contains("<li") )
        #set( $sub = "$sub<p class=TableHeader>")
      #end
      #if( ($sub.contains("</td") || $sub.contains("</th")) &&
            !$subs[$prevSubIndex].contains("</p") && 
            !$subs[$prevSubIndex].contains("</li") )
        #set( $end = $sub.indexOf("</t") )
        #set( $contents = $sub.substring(0, $end) ) ##
        #set( $endTag = $sub.substring($end, $sub.length()) )
        #set( $sub = "$contents</p>$endTag")
      #end
      ###########################################################################
##
      ###########################################################################
      ## - make sure all tables have the borders collapsed
      ###########################################################################
      #if( $sub.contains("<table") && !$sub.contains("border-collapse") )
          #if( $sub.contains("style") )
            #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;border-collapse:collapse$4") )
          #else
            #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='border-collapse:collapse'$3") )
          #end
      #end
      ###########################################################################
##
      ###########################################################################
      ## - add header background color
      ###########################################################################
      #if( ($tableHeader && $sub.contains("<td")) || $sub.matches("(?s).*<th[^e].*") )
        #if( $sub.contains("style") )
          #set( $replace = "$1$2;background-color:$tableHeaderBackgroundColor$3" )
          #set( $sub = $sub.replaceAll("(<t.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)",$replace) )
        #else
          #set( $replace = "$1 style='background-color:$tableHeaderBackgroundColor'$2" )
          #set( $sub = $sub.replaceAll("(<t.*?)(>)",$replace) )
        #end
      #end
      ###########################################################################
##
      ###########################################################################
      ## - add border color
      ###########################################################################
      #*
      #if( $sub.contains("<table") )
          #if( $sub.contains("style") )
            #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;border: 0.5pt solid $tableBorderColor$4") )
          #else
            #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='border: 0.5pt solid $tableBorderColor'$3") )
          #end
      #end
      *#
      #if( $sub.contains("<td") || $sub.matches("(?s).*<th[^e].*") )
        #if( $sub.contains("style") )
          #set( $replace = "$1$2;border-color: $tableBorderColor$3" )
          #set( $sub = $sub.replaceAll("(<t.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)",$replace) )
        #else
          #set( $replace = "$1 style='border-color: $tableBorderColor'$2" )
          #set( $sub = $sub.replaceAll("(<t.*?)(>)",$replace) )
        #end
      #end
      ###########################################################################
##
      ###########################################################################
      ## - resize table widths to fit the page and use only point-based widths
      ###########################################################################
      #if( $sub.contains("<table") )
        ## Try finding a width
        #set( $tableWidth = $sub.replaceAll("(?s).*[\x22\x27; ]width.*?:.*?(\d*.*?)[;\x27\x22].*","$1") )
        ## there is no width already, see if the cells can be added up to calculate a width
        #if( $tableWidth == $sub)
          #set( $calcTableWidth = 0 )
          #set( $rowWidth = 0)
          #set( $start = $foreach.index )
          #set( $end = $subs.size() - 1 )
          ## Iterate through each sub between the current position and the end of the table
          #foreach( $i in [$start..$end] )
            #set( $iSub = $subs.get($i) )
            #if( $iSub.contains("<td") )
              #set( $cellWidth = $iSub.replaceAll("(?s).*[\x22\x27; ]width\s*:\s*(\d*.*?)[;\x27\x22].*","$1") )
              ## cell width found
              #if( $cellWidth != $iSub)
                ## width in pt
                #if( $cellWidth.contains("pt") ) ##
                  #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("pt"))) ) ##
                ## width in px
                #elseif( $cellWidth.contains("px") ) ##
                  #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("px"))) ) ## Extract number part
                  #set( $cellWidth = $cellWidth * 0.75 ) ## Convert px to pt
                ## width in % or other.  Essentially ignoring
                #else
                  #set( $cellWidth = 0 )
                #end
              ## no cell width found
              #else
                #set( $cellWidth = 0 )
              #end
              #set( $rowWidth = $rowWidth + $cellWidth )
            #end
            ## calculate width for each row and take the widest one
            #if( $iSub.contains("</tr") )
              #if( $rowWidth > $calcTableWidth )
                #set( $calcTableWidth = $rowWidth )
              #end
              #set( $rowWidth = 0)
            #end
            ## stop once the end of the table is reached in case there are mutliple tables
            #if( $iSub.contains("</table>") )
              #break
            #end
          #end
##
          ## Save table width in pt for cell processing 
          #set( $ogTableWidthPt = $calcTableWidth ) 
          #set( $newTableWidthPt = $calcTableWidth ) 
##
          ## Resize all tables greater than 100% to 100%
          #if( $ogTableWidthPt > $maxWidth )
            #set( $newTableWidthPt = $maxWidth )
          #end

          ## Resize all tables less than 1% to 100%
          #if( $ogTableWidthPt < 1 )
            #set( $newTableWidthPt = $maxWidth )
          #end
          ## Calculate resize factor for use later
          ## Debug New Table Width (Calc): $newTableWidthPt
          #set( $tableScaleFactor = $newTableWidthPt / $ogTableWidthPt )
          ## Debug Scale Factor (Calc): $tableScaleFactor
##
          ## add a table width to the table
          #if( $newTableWidthPt )
            #if( $sub.contains("style") )
              #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;width:${newTableWidthPt}pt$4") )
            #else
              #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='width:${newTableWidthPt}pt'$3") )
            #end
          #else
            #if( $sub.contains("style") )
              #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;width:${maxWidth}pt$4") )
            #else
              #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='width:${maxWidth}pt'$3") )
            #end
          #end
        ## There is a width, convert it to a point-based width equal or less than maxWidth
        #else
          ## widths in pt
          #if( $tableWidth.contains("pt") ) ##
            #set( $tableWidth = $mathTool.toDouble($tableWidth.substring(0,$tableWidth.indexOf("pt"))) ) ##
            ##<p>DEBUG FOUND TABLE WIDTH (pt) 1: $tableWidth</p>
            #set( $ogTableWidthPt = $tableWidth ) ## Save table width in pt for cell processing 
            ##<p>DEBUG FOUND TABLE WIDTH (pt) 2: $tableWidth</p>
          ## widths in px
          #elseif( $tableWidth.contains("px") ) ##
            #set( $tableWidth = $mathTool.toDouble($tableWidth.substring(0,$tableWidth.indexOf("px"))) ) ## Extract number part
            ##<p>DEBUG FOUND TABLE WIDTH (px) 1: $tableWidth</p>
            #set( $tableWidth = $tableWidth * 0.75 ) ## Convert px to pt
            #set( $ogTableWidthPt = $tableWidth ) ## Save table width in pt for cell processing 
            ##<p>DEBUG FOUND TABLE WIDTH (px) 2: $tableWidth</p>
          ## widths in %
          #elseif( $tableWidth.contains("%") ) ##
            #set( $tableWidth = $mathTool.toDouble($tableWidth.substring(0,$tableWidth.indexOf("%"))) ) ##
            #set( $ogTableWidthPt = $maxWidth * ($tableWidth/100) ) ## Save table width in pt for cell processing
            ##<p>DEBUG FOUND TABLE WIDTH (%) 1: $tableWidth</p>
          ## unknown width, force to 100%
          #else
            #set( $ogTableWidthPt = $maxWidth ) ## Save table width in pt for cell processing
          #end
          ##<p>DEBUG FOUND TABLE WIDTH 3: $tableWidth</p>
          #set( $newTableWidthPt = $ogTableWidthPt )
          ## Resize all tables greater than 100% to 100%
          #if( $ogTableWidthPt > $maxWidth )
            #set( $newTableWidthPt = $maxWidth )
          #end
          ##<p>DEBUG FOUND TABLE WIDTH 4: $tableWidth</p>
          ## Calculate resize factor for use later
          ## Debug New Table Width: $newTableWidthPt
          #set( $tableScaleFactor = $newTableWidthPt / $ogTableWidthPt )
          ##<p>Debug Scale Factor: $tableScaleFactor = $newTableWidthPt divided by $ogTableWidthPt</p>
##
          ## replace width with new value
          #if( $newTableWidthPt )
            #set( $find = "(?s)(.*[\x22\x27; ]width.*?:.*?)(\d*.*?)([;\x27\x22].*)")
            #set( $replace = "$1${newTableWidthPt}pt$3" )
            #set( $sub = $sub.replaceAll($find, $replace) )
          #end
        #end
      #end ##if( $sub.contains("<table") )
      ###########################################################################
##
      ###########################################################################
      ## - resize cell widths to use only point-based widths
      ## - requires the following values from the table width sizing
      ##   $newTableWidthPt
      ##   $tableScaleFactor
      ###########################################################################
      #if( $sub.contains("<td") || $sub.matches("(?s).*<th[^e].*"))
        ## Try finding a width
        #set( $cellWidth = $sub.replaceAll("(?s).*[\x22\x27; ]width\s*:\s*(\d*.*?)[;\x27\x22].*","$1") )
        ##<p>DEBUG cell wdith: |$cellWidth|</p>
        ##<p>DEBUG table scale: |$tableScaleFactor|</p>
        ##<p>DEBUG table width pt: |$newTableWidthPt|</p>
        ## if there is a width, convert to % and scale with table resizing
        #if( $cellWidth != $sub)
          ## widths in pt
          #if( $cellWidth.contains("pt") ) ##
            #if( $tableScaleFactor && $newTableWidthPt)
              #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("pt"))) ) ##
              ## Debug Start Width (pt): $cellWidth
              ## Debug Scale Factor: $tableScaleFactor
              #set( $cellWidthPt = $cellWidth * $tableScaleFactor ) ## Scale cell proportial to table
              ## Debug scaled Width (pt): $cellWidth
            #end
          ## widths in px
          #elseif( $cellWidth.contains("px") ) ##
            #if( $tableScaleFactor && $newTableWidthPt)
              #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("px"))) ) ## Extract number part
              #set( $cellWidth = $cellWidth * 0.75 ) ## Convert px to pt
              #set( $cellWidthPt = $cellWidth * $tableScaleFactor ) ## Scale cell proportial to table
              ##<p>Debug scaled Width (%): $cellWidth</p>
            #end
          ## widths in %
          #elseif( $cellWidth.contains("%") ) ##
            #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("%"))) ) ##
            #if( $newTableWidthPt )
              #set( $cellWidthPt = ($cellWidth/100) * $newTableWidthPt ) ## Convert % to pt
            #else
              #set( $cellWidthPt = ($cellWidth/100) * $maxWidth )
            #end
          #else
            ## Ignoring widths uzing unknown units
          #end
          ## replace width with new value
          #if( $cellWidthPt )
            #set( $cellWidthPt = $cellWidthPt - 4 ) ## account for cell padding
            #set( $find = "(?s)(.*[\x22\x27; ]width.*?:.*?)(\d*.*?)([;\x27\x22].*)")
            #set( $replace = "$1${cellWidthPt}pt$3" )
            #set( $sub = $sub.replaceAll($find, $replace) )
          #else
            #set( $cellWidthPt = false )
          #end
        #end
      #end
      ###########################################################################
      ## - resize any images in the table
      ###########################################################################
      #if( $tableCell && $sub.contains("<v:shape") )
        #set( $start = $mathTool.toNumber($sub.indexOf("width")) + 6 )
        #set( $end = $mathTool.toNumber($sub.indexOf("pt",$start)) )
        #set( $width = $mathTool.toDouble($sub.substring($start,$end)) )
        #set( $start = $mathTool.toNumber($sub.indexOf("height")) + 7 )
        #set( $end = $mathTool.toNumber($sub.indexOf("pt",$start)) )
        #set( $height = $mathTool.toDouble($sub.substring($start,$end)) )
        #set( $aspectRatio = $height / $width )
        ##<p>DEUBG cell width: $cellWidthPt</p>
        ##<p>DEUBG img width: $width</p>

        #if( $cellWidthPt )
          #if( $width > ($cellWidthPt - 8) )
            #set( $width = $cellWidthPt - 8 )
            #set( $height = $width * $aspectRatio )
            #set( $replace = "width:${width}pt" )
            #set( $sub = $sub.replaceAll("width:([\d\.]*?)pt",$replace) )
            #set( $replace = "height:${height}pt" )
            #set( $sub = $sub.replaceAll("height:([\d\.]*?)pt",$replace) )
          #end
        #end
      #end
      ###########################################################################
      ## - align table per $tableAlign, remove any align statement coming from Jama
      ###########################################################################
      #if( $sub.contains("<table") )
        #set( $sub = $sub.replaceAll("align=[\x27\x22].*?[\x27\x22] ", "") )
      #end
      #if( $sub.contains("<table") )
        #set( $sub = "<div align=$tableAlign>$sub")
      #end
      #if( $sub.contains("</table") )
        #set( $sub = "$sub</div>")
      #end
      #if( $sub.contains("<table") )
        #set( $sub = $sub.replaceAll("margin-left:.*?([;\x27\x22])", "$1") )
      #end
      #if( $sub.contains("<td") || $sub.contains("<th") )
        #set( $sub = $sub.replaceAll("padding.*?([;\x27\x22])", "$1") )
      #end
      #if( $format == "pdf" )
        #set( $sub = $sub.replaceAll("writing-mode:tb-rl","") )
      #end
      ###########################################################################
      ## add the processed sub to the output string
      #set ( $output = "${output}${sub}" ) ##
      ## Determine where in a table we are
      #if( $sub.contains("</p") || $sub.contains("</li") ) #set( $tableCellParagraph = false )  #end ##
      #if( $sub.contains("</thead") ) #set( $tableHeader = false ) #end ##
      #if( $sub.contains("</td") || $sub.contains("</th") ) #set( $tableCell = false ) #end ##
      #if( $sub.contains("</table") ) #set( $table = false ) #end ##
    #end ##foreach ($sub in $subs)
  #else ##
    #set ( $output = $inString )
  #end ##if( $inString.contains("<table") )

  $output
#end
#########################################################################################################################
##          Macro: convertHyperlinks
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( convertHyperlinks $inString )
  ## Reset variables used in the macro
  #set( $subs = [] )
  #set( $output = "" )
  #set( $destDoc = false )
  #set( $deleteNextSub = false )
##
  ## split the string by > to break it up into HTML tags
  #set ( $subs = $inString.split(">"))
##
  ## Parse each substring
  #foreach ($sub in $subs) ##
    ## split removes the split character, so all subs are missing a > except for the last one
    #if( !$foreach.last) #set( $sub = "${sub}>") #end
    ## Hyperlinks are made up of two HTML tags.  If replacing a hyperlink weas just replaced, delete the second part of it
    #if( !$deleteNextSub )
      ## only process strings that contain a docID and the current Jama base URL, indicating they are hyperinks to a Jama item
      #if( $sub.contains("docId=") && $sub.contains($baseUrl) )
        ##Locate the doc ID in the string
        #set( $docIdStart = $sub.indexOf("docId=") + 6 )
        ## the doc ID might before or after the project ID, so check for & or " as the next character
        #set( $docIdEnd = $sub.indexOf( "&", $docIdStart))
        #if( $docIdEnd == -1 )
          #set( $docIdEnd = $sub.indexOf( '"', $docIdStart))
        #end
        ## Extract the doc ID from the string
        #set( $docId = $sub.substring( $docIdStart, $docIdEnd))
        ## Get the document corresponding to the docID
        #set ( $destDoc = $docDao.getDocument( $mathTool.toInteger($docId) ))
        
        #if($baselineMode)
          #set($destReferencable = $referenceableDocIds.contains($destDoc.id)) ## Checks the orgin document ID's of all exportlist items
        #else
          #set($destReferencable = $referenceableDocIds.contains($destDoc.id)) ## Checks only the export list ids
        #end

        ## Validate that the destination Doc was found
        #if ( $destDoc && $destReferencable )
          ## Find out the $objectTypeField of the destination item, if it has one
          #set( $destObjectType = false )
          #foreach( $destTypeField in $destDoc.documentType.documentTypeFields )
            #if( $destTypeField.documentField.name == $objectTypeField )
              #set ( $destObjectType = $velocityReportUtil.getValueForField($destDoc, $objectTypeField, $dateFormat ) )
              #break
            #end
          #end
  ##
          ## Replace the hyperink with a Word cross-reference appropriate for the type of destination item
          #if( $format == "doc" )
            #if( $destObjectType == "Figure" )
              #set( $referenceLabel = "Figure ?" )
              #foreach( $figure in $figureList)
                #if( $figure.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "Figure $figure.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<!--[if supportFields]><span style='mso-element:field-begin'></span>REF _API${docId} \\h <span style='mso-element:field-separator'></span><![endif]-->$referenceLabel<!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->") )
              #set( $deleteNextSub = true )
            #elseif( $destObjectType == "Table" )
              #set( $referenceLabel = "Table ?" )
              #foreach( $table in $tableList)
                #if( $table.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "Table $table.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<!--[if supportFields]><span style='mso-element:field-begin'></span>REF _API${docId} \\h <span style='mso-element:field-separator'></span><![endif]-->$referenceLabel<!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->") )
              #set( $deleteNextSub = true )
            #elseif( $destObjectType == "Equation" )
              #set( $referenceLabel = "eq. ?" )
              #foreach( $equation in $equationList)
                #if( $equation.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "eq. $equation.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<!--[if supportFields]><span style='mso-element:field-begin'></span>REF _API${docId} \\h <span style='mso-element:field-separator'></span><![endif]-->$referenceLabel<!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->") )
              #set( $deleteNextSub = true )
            #else
              #set ($sub = $sub.replaceAll("(?s)<a.*?docId=.*?>", "<!--[if supportFields]><span style='mso-element:field-begin'></span>REF _API${docId} \\h <span style='mso-element:field-separator'></span><![endif]--><span style='mso-no-proof:yes'>$destDoc.name</span><!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->") )
              #set( $deleteNextSub = true )
            #end
          #else
            #if( $destObjectType == "Figure" )
              #set( $referenceLabel = "Figure ?" )
              #foreach( $figure in $figureList)
                #if( $figure.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "Figure $figure.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<a href='#_API${docId}'>$referenceLabel</a>") )
              #set( $deleteNextSub = true )
            #elseif( $destObjectType == "Table" )
              #set( $referenceLabel = "Table ?" )
              #foreach( $table in $tableList)
                #if( $table.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "Table $table.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<a href='#_API${docId}'>$referenceLabel</a>") )
              #set( $deleteNextSub = true )
            #elseif( $destObjectType == "Equation" )
              #set( $referenceLabel = "eq. ?" )
              #foreach( $equation in $equationList)
                #if( $equation.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "eq. $equation.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<a href='#_API${docId}'>$referenceLabel</a>") )
              #set( $deleteNextSub = true )
            #else
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<a href='#_API${docId}'>$destDoc.name</a>") )
              #set( $deleteNextSub = true )
            #end
          #end
        #end
      #end
      ## append the converted sub to the output string
      #set ( $output = "${output}${sub}" ) ##
    #else
      #if( $sub.indexOf("</a>") > -1 )
        #set( $deleteNextSub = false )
      #end
    #end
  #end ##
  ## return the string with hyperlinks replaced with Word cross-references
  $output
#end
#########################################################################################################################
##          Macro: formatTableCell
##          Input: $inString - input string
##                 $justification - string, justification to apply to output. (left, right, center)
##                 $$maxImageWidth - number, maximum wide of any image in the cell
##          Output: string, ready for opening in Word
#########################################################################################################################
#macro( formatTableCell $inString $justification $maxImageWidth)
  #if( $inString && $justification && $maxImageWidth )
    #set( $string = $inString.toString() )
    ## Re-format text for consistent look and feel
    #set( $string = "#formatText($string)" )
    ## Prep figures for Word, use defined maximum width
    #set( $string = "#convertFigures($string, $maxImageWidth)" )
    ## Re-format tables for consistent look and feel
    #set( $string = "#formatTables($string, $maxImageWidth, 'left')" )
    ## Convert hyperlinks in Jama to Word cross-references
    #set( $string = "#convertHyperlinks($string)" )
    ## format lists appropriately
    #set( $string = $string.replaceAll('<li>','<li class=TableCell>') )
    #set( $string = $string.replaceAll('<li\s([^c].*?)>','<li class=TableCell $1>') )
    ## Make sure all cells are contained in a paragraph with the appropriate style
    #if( !$string.contains("<p"))
      #set( $string = "<p class=TableCell style='text-align:$justification'>$string</p>" )
    #else
      #set( $string = $string.replaceAll("<p>","<p class=TableCell style='text-align:$justification'>") )
      #set( $string = $string.replaceAll("<p\s([^c].*?)>","<p class=TableCell $1 style='text-align:$justification'>") )
    #end
    $string
  #end
#end
#########################################################################################################################
##          Macro: formatRichText
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatRichText $inString )
  #if( $inString )
    #set( $string = $inString.toString() )
    ## Re-format text for consistent look and feel
    #set( $string = "#formatText($string)" )
    ## Prep figures for Word, use globally defined maximum width
    #set( $string = "#convertFigures($string, $maxPageWidth)" )
    ## Re-format tables for consistent look and feel
    #set( $string = "#formatTables($string, $maxPageWidth, 'center')" )
    ## Convert hyperlinks in Jama to Word cross-references
    #set( $string = "#convertHyperlinks($string)" )
    ## format lists appropriately
    #set( $string = $string.replaceAll('<li>','<li class=MsoListParagraph>'))
    #set( $string = $string.replaceAll('<li\s([^c].*?)>','<li class=MsoListParagraph $1>'))
    ## Make sure all content that is not already in a paragraph with a class is in a paragraph with class Normal
    #if( !$string.contains("<p"))
      #set( $string = "<p class=MsoNormal>$string</p>" )
    #else
      #set( $string = $string.replaceAll("<p>","<p class=MsoNormal>") )
      #set( $string = $string.replaceAll("<p\s([^c].*?)>","<p class=MsoNormal $1>") )
    #end
    $string
  #end
#end
#########################################################################################################################
## **********************************************************************************************************************
##
##  8.2 ITEM_TYPE_MACROS: Item Type Formatting Macros
##
##  >>>> Create one macro for each item format <<<<##>
##
##  Macros can be used for one or more Jama item types
##
## **********************************************************************************************************************
#########################################################################################################################
##
## Create a heading with the name of the document object and a bookmark named by the Jama API ID 
## bookmarks are used for cross-references
#macro( formatHeading $doc $hierarchyLevel $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.originDocument.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #if( $hierarchyLevel < 7 )
      <h$hierarchyLevel>
        <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
      </h$hierarchyLevel>
    #else
      <p class=MsoHeading$hierarchyLevel>
        <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
      </p>
    #end
  #end
#end
##
## Simple Name and Description, suitable for Text Items similar item types
#macro( formatNameDescription $doc $hierarchyLevel $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.originDocument.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #if( $hierarchyLevel < 7 )
      <h$hierarchyLevel>
        <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
      </h$hierarchyLevel>
    #else
      <p class=MsoHeading$hierarchyLevel>
        <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
      </p>
    #end
    #formatRichText($doc.description)
  #end
#end
##
#macro( formatName $doc $hierarchyLevel  )

	##since this the baseline to baseline comparison - you have to go to the current version - a link to a prev. version won't work
    #set($currentDoc = $doc.currentVersion.originDocument) 

    #if( $hierarchyLevel < 7 )
      <h$hierarchyLevel>
		#createLink( $currentDoc)
        <a href='$createLinkReturn'>$doc.documentKey</a> $doc.name
        ##<a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
      </h$hierarchyLevel>
    #else
      <p class=MsoHeading$hierarchyLevel>
        #createLink( $currentDoc)
        <a href='$createLinkReturn'>$doc.documentKey</a> $doc.name
      </p>
    #end
    ##formatRichText($doc.description)

#end
## Description Only
#macro( formatDescription $doc $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #formatRichText($doc.description)
  #end
#end
##
## Figures
#macro( formatFigureObject $doc $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.originDocument.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #set( $referenceNumber = 0 )
    #foreach( $figure in $figureList)
      #if( $figure.id == $docID ) 
        #set( $referenceNumber = $figure.reference )
        #break
      #end
    #end
    #formatRichText($doc.description)
    
    <p class=MsoCaption style='margin-top:6pt;page-break-after:avoid'>
      <a name="_API${docID}"><span style='mso-bookmark:_API${docID}'>Figure </span></a>
      #*
      <span style='mso-bookmark:_API${docID}'>
        <span style='mso-no-proof:yes'>$referenceNumber</span>
      </span>
      *#
      <!--[if supportFields]>
        <span style='mso-bookmark:_API${docID}'></span>
        <span style='mso-element:field-begin'></span>
        <span style='mso-bookmark:_API${docID}'>
          <span style=3D'mso-spacerun:yes'></span>SEQ Figure \* ARABIC 
            <span style=3D'mso-element:field-separator'></span>
          </span>
      <![endif]-->
      <!--[if supportFields]>
        <span style='mso-bookmark:_API${docID}'></span>
        <span style='mso-element:field-end'></span>
      <![endif]-->
      <span style='mso-bookmark:_API${docID}'></span>. $doc.name
    </p>
    
  #end
#end
##
## Tables
#macro( formatTableObject $doc $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.originDocument.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #set( $referenceNumber = 0 )
    #foreach( $table in $tableList)
      #if( $table.id == $docID ) 
        #set( $referenceNumber = $table.reference )
        #break
      #end
    #end
    <p class=MsoCaption style='margin-top:6pt;page-break-after:avoid'><a name="_API${docID}">Table </a><!--[if supportFields]><span
        style='mso-bookmark:_API${docID}'></span><span style='mso-element:field-begin'></span><span
        style='mso-bookmark:_API${docID}'>SEQ Table
        \* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span
        style='mso-bookmark:_API${docID}'><span style='mso-no-proof:yes'>$referenceNumber</span></span><!--[if supportFields]><span
        style='mso-bookmark:_API${docID}'></span><span style='mso-element:field-end'></span><![endif]--><span
        style='mso-bookmark:_API${docID}'></span>. $doc.name
    </p>
    #formatRichText($doc.description)
  #end
#end
##
## Equations
#macro( formatEquationObject $doc $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.originDocument.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #set( $referenceNumber = 0 )
    #foreach( $equation in $equationList)
      #if( $equation.id == $docID ) 
        #set( $referenceNumber = $equation.reference )
        #break
      #end
    #end
    #set( $output = $doc.description )
    #set( $output = "#formatRichText($output)" )
    #if( $format == "doc" )
      #if( $output.indexOf("<p") > -1 )
        #set( $output = $output.replaceAll('(?s)<p.*?>','<p class=MsoCaption style="tab-stops:right 7.0in">'))
        #set( $output = $output.replaceAll('<\/p>',''))
      #else
        #set( $output = '<p class=MsoCaption style="tab-stops:right 7.0in">$output' )
      #end
      $output
      <span style='mso-tab-count:1'><a name="_API${docID}">eq.</a><span style='mso-spacerun:yes'> </span><!--[if supportFields]><span
        style='mso-bookmark:_API${docID}'></span><span style='mso-element:field-begin'></span><span
        style='mso-bookmark:_API${docID}'><span style='mso-spacerun:yes'> </span>SEQ Equation
        \* ARABIC <span style='mso-element:field-separator'></span></span><![endif]-->
    <span style='mso-bookmark:_API${docID}'><span style='mso-no-proof:yes'>$referenceNumber</span></span><!--[if supportFields]><span
        style='mso-bookmark:_API${docID}'></span><span style='mso-element:field-end'></span><![endif]-->
		<span
        style='mso-bookmark:_API${docID}'></span>
      </span></p>
    #else
      <div style="float:left;width:368pt">$output</div>
      <div class=MsoCaption style="float:left;width:90pt;text-align:right"><a name="_API${docID}">eq. $referenceNumber</a></div>
    #end
  #end
#end
##
#########################################################################################################################
##          formatUpdatedItemsHeader 
##          Input: $baseDoc $bData1 $bData2 
##          Return: Header section Updated Items Section 1.0 
#########################################################################################################################  
#macro( formatUpdatedItemsHeader $baseDoc $bData1 $bData2 )

#formatName( $baseDoc 2)
#*<h2>
  <a href="perspective.req?projectId=$orginDoc.project.id&docId=$orginDoc.id">$baseDoc.documentKey</a> $baseDoc.name
</h2>*#
<table class="MsoTableGrid" width=90% border="1" cellspacing="0" cellpadding="0"
style='margin-left:.5in;border-collapse:collapse;border:none;mso-border-alt: solid windowtext .5pt;
mso-yfti-tbllook:1184;padding:.05in 5.75pt 0in 5.75pt'>
  <thead>
    <tr>
      <td width=96 style='word-break: normal;width:1.0in;background:#CCCCCC;padding:.05in 5.75pt 0in 5.75pt'>
        <p class=MsoNormal align=center style='margin-left:0in;text-align:center'>
          Field Label</p>
      </td>
      #if( $report_showFinText == true)
          #*<td width=365 style='width:3.8in;background:#CCCCCC;padding:.05in 5.75pt 0in 5.75pt'><p
          class=MsoNormal align=center>Baseline v$bVer.versionNumber</p></td>*#
        <td width=365 style='width:3.8in;background:#CCCCCC;padding:.05in 5.75pt 0in 5.75pt'>
          <p class=MsoNormal align=center>
            Baseline $bData1.name
          </p>
        </td>
      #end
      <td width=365 #if( $report_showFinText == false) colspan=2 #end style='width:3.8in;background:#CCCCCC;padding:.05in 5.75pt 0in 5.75pt'>
        <p class=MsoNormal align=center>
          Differences</p>
      </td>
      #if( $report_showFinText == true)
        #*<td width=365 style='width:3.8in;background:#CCCCCC;padding:.05in 5.75pt 0in 5.75pt'><p
        class=MsoNormal align=center>Baseline v$aVer.versionNumber</p></td>*#
        <td width=365 style='width:3.8in;background:#CCCCCC;padding:.05in 5.75pt 0in 5.75pt'><p
        class=MsoNormal align=center>

        Baseline $bData2.name</p></td>  
      #end ##if( $report_showFinText == true)
    </tr>
  </thead>

#end
##
#########################################################################################################################
##          formatFieldOrTestCaseStepsBaseDoc
##          Input: $b $baseDoc
##          Return: Table Cell of field value or table cell of Test Case Steps, report body Updated Items 1.0
#########################################################################################################################  
#macro( formatFieldOrTestStepsBaseDoc $b $baseDoc )
                  
<td width=365 valign=top style='word-wrap: break-word;width:3.8in;border-top:none;border-left:none;
border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 5.4pt 5.4pt;width:4.0n'>
##<p class="MsoNormal" style='margin-left:0in;'>

<!--- testCaseSteps is 1 field of everything concat together, we want to output each field --->

#if( $b != "testCaseSteps" )
  
  #if( $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat))
    #formatTableCell( $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat), "left", 130)
  #end ##if( $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat))
#else
  #set($i = 1)
  
  #foreach($baseTS in $baseDoc.testCaseSteps)
    <p class="MsoNormal" style='margin-left:0in'><b>$i.</b> 
    #if( $baseTS.action.length() > 0)  
      ##$baseTS.action 
      #set( $print = "")
      #set( $print = $baseTS.action)
      #set( $print = "#convertFigures($print, 150)" )
      $!print
    #end ##if( $baseTS.action.length() > 0)  
    </p>
    <p class="MsoNormal" style='margin-left:8pt'><b>Expected Results:</b> 
    #if( $baseTS.expectedResult.length() > 0) 
      ##$baseTS.expectedResult 
      #set( $print = "")
      #set( $print = $baseTS.expectedResult)
      #set( $print = "#convertFigures($print, 150)" )
      $!print
    #end ##if( $baseTS.expectedResult.length() > 0) 
    </p>
    <p class="MsoNormal" style='margin-left:8pt'><b>Notes:</b> 
    #if( $baseTS.notes.length() > 0) 
      ##$baseTS.notes 
      #set( $print = "")
      #set( $print = $baseTS.notes)
      #set( $print = "#convertFigures($print, 150)" )
      $!print
    #end ##if( $baseTS.notes.length() > 0) 
    </p>
    
    #set($i = $i + 1)
  #end ##foreach($baseTS in $baseDoc.testCaseSteps)
#end ##if($b != "testCaseSteps")

</td> 
#end 
##
##
#########################################################################################################################
##          showComparisonForFields
##          Input: $b $baseDoc $compareDoc
##          Return: Table Cell of field value or table cell of Test Case Steps, report body Updated Items 1.0
#########################################################################################################################  
#macro( showComparisonForFields $b $baseDoc $compareDoc )

<td valign=top #if( $report_showFinText == false) colspan=2 #end
style='width:8.0in;border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 5.4pt 5.4pt'>

##<p class=TableCell style='margin-left:0in;'>

#if( $b != "testCaseSteps" )

  #if( $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat))
    #set($beforeVal = $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat))
    #set($afterVal = $velocityReportUtil.getValueForField($compareDoc, $b, $dateFormat))
    #if($beforeVal.length() > $maxDiff || $afterVal.length() > $maxDiff)
      <p class="toobig">$maxedOut $maxDiff.</p>
    #else
      #set( $print = "")
      #set( $print = $diffService.getDiff($beforeVal, $afterVal))
      #if( $report_showFinText == false)
        #set( $imageWid = $maxImageWidth)
      #else
        #set( $imageWid = 150)
      #end
      #set( $print = "#convertFigures($print, $imageWid)" )
        $!print
    #end ##if($beforeVal.length() > $maxDiff || $afterVal.length() > $maxDiff)
  #end ###if( $velocityReportUtil.getValueForField($baseDoc, $b, $dateFormat))

#else
  #set($baseSteps = $baseDoc.testCaseSteps)
  #set($activeSteps = $compareDoc.testCaseSteps)
  #set($length = $mathTool.max($baseSteps.size(), $activeSteps.size()))
  #set($stepNum = [1..$length])
  
  #foreach( $i in $stepNum )
    #set($beforeStep = "")
    #set($afterStep = "")
    #set($index = $i - 1)
    #if($i <= $baseSteps.size())
      #set($beforeStep = $baseSteps.get($index))
      #set($beforeStepText =
      "<p class='MsoNormal' style='margin-left:0in'><b>" + $i
      +".</b> " + $!beforeStep.action
      + "<p class='MsoNormal' style='margin-left:8pt'><b>Expected Results:</b> " + $beforeStep.expectedResult
      + "<p class='MsoNormal' style='margin-left:8pt'><b>Notes:</b> " + $beforeStep.notes)
    #else
      #set($beforeStepText =
      "<p class='MsoNormal' style='margin-left:0in'><b>"+ $i +
      ".</b> ")
    #end

  #if( $i <= $activeSteps.size() )
    #set( $afterStep = $activeSteps.get($index))
    #set( $afterStepText =
    "<p class='MsoNormal' style='margin-left:0in'><b>" + $i
    + ".</b> " + $afterStep.action
    + "<p class='MsoNormal' style='margin-left:8pt'><b>Expected Results:</b> " + $afterStep.expectedResult
    + "<p class='MsoNormal' style='margin-left:8pt'><b>Notes:</b> " + $afterStep.notes)
  #else
    #set($afterStepText =
    "<p class='MsoNormal' style='margin-left:0in'><b>"+ $i +
    ".</b> ")
  #end ##if( $i <= $activeSteps.size() )
  
  #if( $beforeStepText.length() > $maxDiff || $afterStepText.length() > $maxDiff)
    <p class="toobig">$maxedOut $maxDiff.</p>
  #else
    ##$diffService.getDiff($beforeStepText, $afterStepText)
    #set( $print = "")
    #set( $print = $diffService.getDiff($beforeStepText, $afterStepText))
    #if( $report_showFinText == false)
      #set( $imageWid = $maxImageWidth)
    #else
      #set( $imageWid = 150)
    #end
    #set( $print = "#convertFigures($print, $imageWid)" )
    $!print

  #end ##if( $beforeStepText.length() > $maxDiff || $afterStepText.length() > $maxDiff)
#end ##if( $b != "testCaseSteps" )
#end  ##if( $velocityReportUtil.getValueForField( $baseDoc, $b, $dateFormat) != $velocityReportUtil.getValueForField( $compareDoc, $b, $dateFormat ))

</td>

#end 
## 
#########################################################################################################################
##          formatFieldOrTestCaseStepsCompareDoc
##          Input: $b $compareDoc
##          Return: Table Cell of field value or table cell of Test Case Steps, report body Updated Items 1.0
#########################################################################################################################  
#macro( formatFieldOrTestCaseStepsCompareDoc $b $compareDoc )
<td width=365 valign=top style='width:3.8in;border-top:none;border-left:none; border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 5.4pt 5.4pt'>
  
  #if($b != "testCaseSteps")
    #if( $velocityReportUtil.getValueForField($compareDoc, $b, $dateFormat))
    ##$velocityReportUtil.getValueForField($compareDoc, $b, $dateFormat)
    #formatTableCell(  $velocityReportUtil.getValueForField($compareDoc, $b, $dateFormat), "left", 130)
    #end 
  #else
    #set($i = 1)
    #foreach($compareTS in $compareDoc.testCaseSteps)
      <p class="MsoNormal" style='margin-left:0in'><b>$i.</b> 
      #if( $compareTS.action.length() > 0)  
        ##$compareTS.action 
        #set( $print = "")
        #set( $print = $compareTS.action)
        #set( $print = "#convertFigures($print, 150)" )
        $!print
      #end ##if( $compareTS.action.length() > 0) 
      </p>
      <p class="MsoNormal" style='margin-left:8pt'><b>Expected Results:</b> 
      #if( $compareTS.expectedResult.length() > 0) 
        ##$compareTS.expectedResult 
        #set( $print = "")
        #set( $print = $compareTS.expectedResult)
        #set( $print = "#convertFigures($print, 150)" )
        $!print
      #end
      </p>
      <p class="MsoNormal" style='margin-left:8pt'>
      <b>Notes:</b> 
      #if( $compareTS.notes.length() > 0) 
        ##$compareTS.notes 
        #set( $print = "")
        #set( $print = $compareTS.notes)
        #set( $print = "#convertFigures($print, 150)" )
        $!print
      #end
      </p>
      #set($i = $i + 1)
    #end ##foreach($compareTS in $compareDoc.testCaseSteps)
  #end ##if($b != "testCaseSteps")
</td>
#end 
##

#########################################################################################################################
##          buildRelationshipCounts 
##          Input: $baseDoc $originDoc $rl $r2 
##          Return: $base1RelsSize, $base2RelsSize, $relsMatch, $base1Resls $base2Rels
#########################################################################################################################  
#macro( buildRelationshipCounts $baseDoc $originDoc $rl $r2 ) 
  #set($start = 0)
  #set($count = 20)
  #set( $base1Rels = [])
  #set( $base2Rels = [])
  #set( $pageSize = 20)

  ##Baseline id 1: $r1, item id: $baseDoc.id, Origin Doc: $orginDoc.id<br>
  ##Baseline id 2: $r2, itemid: $orginDoc.id<br>

  #set($base1RelsPage = $documentSource.getRelationships($orginDoc.id,$r1,$start,$count))
  #set($base2RelsPage = $documentSource.getRelationships($orginDoc.id,$r2,$start,$count))
 
  ##BASE1RELSPAGE $base1RelsPage.getPageInfo()<br>
  ##BASE2RELSPAGE $base2RelsPage.getPageInfo()<br>

  #set( $totalRels1 = [])
  #set( $totalRels1 = $base1RelsPage.getPageInfo().getTotalResults())

  #set( $totalRels2 = [])
  #set( $totalRels2 = $base2RelsPage.getPageInfo().getTotalResults())

  ##Total Rels 1: $totalRels1 TotalRels2: $totalRels2<br>

    #if( $totalRels1 && $totalRels1 > 0) ## Did not make it into here
      #set( $page_count = $mathTool.floor( $mathTool.div($totalRels1,$pageSize) ) )

      #foreach( $page in [0..$page_count])

        #set($base1RelsPage = $documentSource.getRelationships($orginDoc.id,$r1,$start,$count))

        ##Base1RelsPage: $base1RelsPage.getResults().size()<br>

        #set( $addIsSuccessful = $base1Rels.addAll($base1RelsPage.getResults()))

        ##Base1Rels: $base1Rels<br>

        #set( $start = $start + $count)

      #end ##foreach( $page in [0..$page_count])
    
    #end ##if( $totalRels1 && $totalRels1 > 0)

    #set( $start = 0)
    #if( $totalRels2 && $totalRels2 > 0)
      #set( $page_count = $mathTool.floor($mathTool.div($totalRels2,$pageSize)) )
      #set( $page_count = $page_count + 1)
      #foreach( $page in [0..$page_count])
        #set($base2RelsPage = $documentSource.getRelationships($orginDoc.id,$r2,$start,$count))
        #set( $addIsSuccessful = $base2Rels.addAll($base2RelsPage.getResults()) )
        #set( $start = $start + $count)
      #end ##foreach( $page in [0..$page_count])
    #end ##if( $totalRels2 && $totalRels2 > 0)

    #if( !$base1Rels.size())
      #set( $base1RelsSize = 0)
    #else
      #set( $base1RelsSize = $base1Rels.size())
    #end ##if( !$base1Rels.size())

    #if( !$base2Rels.size())
      #set( $base2RelsSize = 0)
    #else
      #set( $base2RelsSize = $base2Rels.size())
    #end  ##if( !$base2Rels.size())

    ##Baseline1size: $base1Rels $base1Rels.size(), Baseline 2 size: $base2Rels $base2Rels.size()<br>
    #if( $base1RelsSize == $base2RelsSize)
      #if( $base1RelsSize == 0 && $base2RelsSize == 0)
        #set( $relsMatch = true)
      #else
        ##The size might match, but the relationship numbers might not, so need to check each rel.
        #set( $sameRel = 0)
        #foreach( $rel1 in $base1Rels)
          #set( $rel1Id = $rel1.id)
          #foreach( $rel2 in $base2Rels)
            #set( $rel2Id = $rel2.id)
            ##Rel1id: $rel1Id Rel2id: $rel2Id<br>
            
            #if( $rel1Id == $rel2Id)
              #set( $sameRel = $sameRel + 1)

              #break
            #end ##if( $rel1Id == $rel2Id)
          #end ##foreach( $rel2 in $base2Rels)
        #end ##foreach( $rel1 in $base1Rels)
        ##SameRel: $sameRel<br>
        #if( $base1Rels.size() == $sameRel)
          #set( $relsMatch = true)
        #else
          #set( $relsMatch = false)
        #end
        ##RelsMatch: $relsMatch
      #end  ##if( $base1RelsSize == 0 && $base2RelsSize == 0)

    #elseif( $base1RelsSize != $base2RelsSize )

      #set( $relsMatch = false )

    #end ##if( $base1RelsSize == $base2RelsSize)

## returns $base1RelsSize, $base2RelsSize, $relsMatch, $base1Rels $base2Rels
#end 
##
#########################################################################################################################
##          formatRelationshipRow  
##          Input: base1RelsSize base2RelsSize relsMatch
##          Return: Relationships row for section 1.0 
#########################################################################################################################
#macro( formatRelationshipRow $aVer $bVer $base1Rels $base2Rels $base1RelsSize $base2RelsSize $relsMatch )

#if( $base1RelsSize != 0 || $base2RelsSize != 0)
  #if( $relsMatch == false)
  <tr>
    <td rowspan="2" valign=top style='width:1.0in;border:solid windowtext 1.0pt;
    border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt; padding:5.4pt 5.4pt 0in 4.05pt'>
      
      <p class=TableCell style='margin-left:0in'>

      Relationships

      </p>
    </td>
    <td width=365 style='width:3.8in;background:#CCCCCC;padding:.05in 5.75pt 0in 5.75pt'>
    ##<p class=MsoNormal align=center>Baseline v$bVer.versionNumber</p>
    
    #set( $baselineVersion = "")
    #set( $baselineVersion = "Baseline v")
    #set( $baselineVersion = $baselineVersion.concat( $bVer.versionNumber))
    #formatTableCell( $baselineVersion, "left", 30)

    </td>

    #if( $report_showFinText == true)
      <td></td>
    #end

    <td width=365 style='width:3.8in;background:#CCCCCC;padding:.05in 5.75pt 0in 5.75pt'>
    ##<p class=MsoNormal align=center>Baseline v$aVer.versionNumber</p>
    
    #set( $baselineVersion = "")
    #set( $baselineVersion = "Baseline v")
    #set( $baselineVersion = $baselineVersion.concat( $aVer.versionNumber))
    #formatTableCell( $baselineVersion, "left", 30)

    </td>
  </tr>
  <tr>
    <td valign=top style='width:3.8in;border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
    border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
    mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 0in 5.4pt;width:4.0n'>
      <p class=TableCell style='margin-left:0in;'>
        
        #foreach( $versionedRelationship in $base1Rels )
        ##<h4>Relationship ID: $versionedRelationship.getId()</h4>
        <p>
        ##suspect: $versionedRelationship.getSuspect() <br><br>
        #set($fromItemId = $versionedRelationship.getFromItem().getValue().get(0))
        #set($fromItemVersion = $versionedRelationship.getFromItem().getValue().get(1))
        #set($toItemId = $versionedRelationship.getToItem().getValue().get(0))
        #set($toItemVersion = $versionedRelationship.getToItem().getValue().get(1))

        #set($fromItem = $documentSource.getItem($fromItemId, $fromItemVersion))
        #set($toItem = $documentSource.getItem( $toItemId, $toItemVersion ))
		#createLink( $fromItem)
        <a href='$createLinkReturn'>$fromItem.documentKey</a>
		#createLink( $toItem)
        --> <a href='$createLinkReturn'>$toItem.documentKey</a>
        <br> <br>
        </p>
        #end
    </p>
    </td>
        #if( $report_showFinText == true)
        <td></td>
        #end
    <td valign=top style='width:3.8in;border-top:none;border-left:none; border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 0in 4.05pt'>
      <p class=TableCell style='margin-left:0in'>
        
        #foreach( $versionedRelationship in $base2Rels )
      
        ##suspect: $versionedRelationship.getSuspect() <br><br>
        #set($fromItemId = $versionedRelationship.getFromItem().getValue().get(0))
        ##set($fromItemVersion = $versionedRelationship.getFromItem().getValue().get(1))
        #set($toItemId = $versionedRelationship.getToItem().getValue().get(0))
        ##set($toItemVersion = $versionedRelationship.getToItem().getValue().get(1))

          ##From ItemId2: $fromItemId, To docID: $toItemId BaseDocid: $baseDoc.id Compare Doc ID: $compareDoc.id<br>
          #if( $fromItemId == $compareDoc.id)
            #set( $fromItem = $compareDoc)
            #set($toItemId = $versionedRelationship.getToItem().getValue().get(0))
            #set($toItemVersion = $versionedRelationship.getToItem().getValue().get(1))
            #set($toItem = $documentSource.getItem($toItemId , $toItemVersion))
          #elseif( $toItemId == $compareDoc.id)
            #set( $toItem = $compareDoc)
            #set($fromItemId = $versionedRelationship.getFromItem().getValue().get(0))
            #set($fromItemVersion = $versionedRelationship.getFromItem().getValue().get(1))
            #set($fromItem = $documentSource.getItem($fromItemId , $fromItemVersion))
          #end
		
		#createLink( $fromItem)
        <a href='$createLinkReturn'>$fromItem.documentKey</a>
		#createLink( $toItem)
        --> <a href='$createLinkReturn'>$toItem.documentKey</a>
        <br> <br>
        </p>
        #end ##foreach( $versionedRelationship in $base2Rels )
      </p>
    </td>
  </tr>
  #end ##if( $relsMatch == false)

#end ##if( $base1RelsSize != 0 || $base2RelsSize != 0)

#end
##
#########################################################################################################################
##          formatVersionComments
##          Input: $next $total $baseOrigin
##          Return: Version Details Row for section Updtate Items 1.0 ready for opening in word
#########################################################################################################################
#macro( formatVersionCommentRow $next $total $baseOrigin )
  #set( $colSpan = 3)
  #if( $report_showFinText == true)
    #set( $colSpan = 4)
  #else
    #set( $colSpan = 3)
  #end ##if( $report_showFinText == true)
  <tr bgcolor='#CCCCCC'>
    <td colspan=$colSpan style='padding:.05in 5.75pt 0in 5.75pt'>
    <p class=TableCell align=center>Version Details</p></td>
  </tr>
  <tr>
    <td width="9in" valign="top" colspan=$colSpan
    style='border:solid windowtext 1.0pt; mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 0in 5.4pt ;width:9in;'>
    
    #foreach( $n in [1..$total] )
      <p class=TableCell style='margin-left:0.0in;'>
      #set($v = $verDao.getVersionByDocAndVersionNumber( $baseOrigin, $next ))
      #if( $v )
        <b>Version: </b>v$v.versionNumber
        - $userDao.getUserFullName($v.createdBy)
        - $dateTool.format('MMM d, yyyy',$v.createdDate)
        </p>
        <p class=TableCell style='margin-left:0.5in;'>
        <b>Change Details: </b>#if($v.comments)$v.comments #end
        </p>
        <p class=TableCell style='margin-left:0.5in;'>
        #if($v.userComment)
        <b>User Comment: </b>$v.userComment
        </p>
        #else
        </p>
        #end ##if($v.userComment)
      #end ##if( $v )
      #set($next = $next + 1)
      #if($next == $total)
        #break
      #end ##if($next == $total)
    #end ##foreach( $n in [1..$total] )

    </td>
  </tr>

#end 
#########################################################################################################################
##          formatDeletedItems 
##          Input: deleted
##          Return: Deleted Items Section 2.0 formatted for Word
#########################################################################################################################
#macro( formatDeletedItems $deleted )

<h1 style='page-break-after:avoid'>DELETED ITEMS</h1>

<table class="MsoTableGrid" width=90% border="1" cellspacing="0" cellpadding="0"
style='margin-left:.5in;border-collapse:collapse;border:none;
mso-border-alt: solid windowtext .5pt;mso-yfti-tbllook:1184;padding:.05in 5.75pt 0in 5.75pt'>

  #foreach($k in $deleted)
  <tr>
    <td width="9in" valign="top" style='border:solid windowtext 1.0pt; 
    mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 0in 5.4pt ;width:9in;'>

    <p class=TableCell style='margin-left:0in'>

    <h2>$k.documentKey $k.name</h2>
    
    </p>
   
    #if( $k.description) 
      #formatTableCell( $k.description, "left", 650) 
    #end
    
    </td>
  <tr>
    <td width="9in" valign="top"style='border:solid windowtext 1.0pt; 
    mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 5.4pt 5.4pt ;width:9in;'>
      <p class=TableCell style='margin-left:0in'>

        Deleted items may have had relationships before deletion, but those relationships are not accessible upon deletion.

      </p>
    </td>
  </tr>
  #end ##formatDeletedItems( $deleted )
</table>
#end 
#########################################################################################################################
##          formatAddedItems
##          Input: compareOriginIds 
##          Return: Added Items section 3.0 formatted for Word
#########################################################################################################################

#macro( formatAddedItems $compareOriginIds )

<h1>ADDED ITEMS</h1>

<table class="MsoTableGrid" width=90% border="1" cellspacing="0" cellpadding="0"
style='margin-left:.5in;border-collapse:collapse;border:none;'>
  #foreach($aa in $compareOriginIds)
  #set($cDoc = $docDao.getDocument($aa))
    #if(!$baseOrgIds.contains($aa))
      <tr>
          <td width="9in" valign="top"
              style='border:solid windowtext 1.0pt; mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 5.4pt 5.4pt ;width:9in;'>
              <p class=TableCell style='margin-left:0in'>
              #formatName( $cDoc)
			  #*<h2>
                  <a href="perspective.req?projectId=$cDoc.project.id&docId=$cDoc.id">$cDoc.documentKey</a> $cDoc.name
              </h2>*#
              </p>
              
                  #if( $cDoc.description) #formatTableCell( $cDoc.description, "left", 650) #end 
        
          </td>
      </tr>

    #if( $includeRelationships == true)
      <tr>
        <td width="9in" valign="top" style='border:solid windowtext 1.0pt; 
        mso-border-alt:solid windowtext .5pt;padding:5.4pt 5.4pt 0in 5.4pt ;width:9in;'>
          <p class=TableCell style='margin-left:0in'>
          
            <b>Relationships</b>

          </p>


          #set( $start = 0)
          #set( $i = 20)
          ##CDocId: $cDoc.id, AA: $aa Start: $start, Count: $count, B2: $r2<br>
          #set($addedRels = $documentSource.getRelationships($aa,$r2,$start,$i))

          ##AddedRels: $addedRels.getResults().size()<br>

          #if( $addedRels.getResults().size() > 0)

            <p class=TableCell style='margin-left:0in'>

            #foreach( $versionedRelationship in $addedRels.getResults() )

              #set($fromItemId = $versionedRelationship.getFromItem().getValue().get(0))
              #set($fromItemVersion = $versionedRelationship.getFromItem().getValue().get(1))
              #set($toItemId = $versionedRelationship.getToItem().getValue().get(0))
              #set($toItemVersion = $versionedRelationship.getToItem().getValue().get(1))

              #set($fromItem = $documentSource.getItem($fromItemId , $fromItemVersion))
              #set($toItem = $documentSource.getItem($toItemId , $toItemVersion))

			#createLink( $fromItem)
              <a href='$createLinkReturn'>$fromItem.documentKey</a>
			#createLink( $toItem)
              --> <a href='$createLinkReturn'>$toItem.documentKey</a>
              <br> <br>
            #end ##foreach( $versionedRelationship in $addedRels.getResults() )

            </p>
          #else
            <p class=TableCell style='margin-left:0in'>This item does not have any related items.</p>
          #end ##if( $addedRels.getResults().size() > 0)

                    
        </td>
      </tr>
      #end ##if( $includeRelationships == true)
    #end ##if(!$baseOrgIds.contains($aa))
  #end ##foreach($aa in $compareOriginIds)
</table>
#end 
###################################################################################################
#macro( createLink $sDoc)
	
	#set( $createLinkReturn = "")
	#set( $createLinkReturn = $baseUrl + "/perspective.req#/items/" + $sDoc.id.toString() + "?projectId=" + $project.id.toString())
	
	##https://customexports.jamacloud.com/perspective.req#/items/2116510?projectId=20181
#end

##
##
#########################################################################################################################
##  8.3 BODY_MACRO - Creates the body of the report
##          Input: None
##          Return: body of the report
#########################################################################################################################
#macro( createBody )

<body lang=EN-US link=blue vlink="#954F72" style='tab-interval:.5in'>
#if( $format == "pdf")
  <div class="main">
#else
  <div class=WordSectionLandscape>
#end


#########################################################################################################################
## **********************************************************************************************************************
##
##  8.3.1 TITLE_PAGE: Title Page
##
##  >>>> Customize this section to replace the title page <<<< ##>
##
## **********************************************************************************************************************
#########################################################################################################################
##
## Get information from the document container
#if( $containerDoc ) ##
  #set( $title = $containerDoc.name) ##
  #set( $docNumber = $velocityReportUtil.getValueForField( $containerDoc, "document_id", $dateFormat )) ##
  #set( $docStatus = $velocityReportUtil.getValueForField( $containerDoc, "document_status", $dateFormat )) ##
  #set( $docAuthors = $velocityReportUtil.getValueForField( $containerDoc, "authors", $dateFormat )) ##
  #set( $docApprovers = $velocityReportUtil.getValueForField( $containerDoc, "approvers", $dateFormat )) ##
  #set( $docChangeHistory = $velocityReportUtil.getValueForField( $containerDoc, "change_history", $dateFormat )) ##
#else ##
  #set( $title = "Baseline Comparison Report" ) ##
#end ##


#################### Load list of first baseline document nodes - nodes so can sort on global ID #################
#foreach($doc1 in $baseDao.getDocumentIds($r1))
    #set($dN1=$docNodeDao.getDocumentNodeForBaseLine( 5, $doc1, $r1))
    #if($dN1.scopeId == 5)
        #if( $baseDocNodes.add($dN1))#end
        ###################### check to see if item type field's have been collected ###################
        #foreach($a in $docList)
            #if($a.get(0) == $docDao.getDocument($dN1.refId).documentType.id)
                #set($found = 'yes')
                #break
            #end
            #set($count=$count+1)
        #end
        ###################### load item type fields ###################
        #if($found == 'no')
            #set($docField = [] )
            #if($docField.add($docDao.getDocument($dN1.refId).documentType.id))#end
            #foreach($d in $dtDao.getDocumentTypeFieldListByType($docDao.getDocument($dN1.refId).documentType.id))
                #if($docField.add($d.documentField.name))#end
            #end
            #if($docList.add($docField))#end
             #set($count=$count+1)
        #end
        #set($found = 'no')
    #end
#end

#################### Load list of original IDs of first baseline ids for update & deletion check #################
#foreach($dn in $baseDocNodes)
    #if($baseOrgIds.add($verDao.getVersionByDocumentId($dn.refId).originDocument.id))#end
#end

#################### Load list of original IDs of second baseline ids for update & deletion check #################
#foreach($cmp in $baseDao.getDocumentIds( $r2))
    #set($dN2=$docNodeDao.getDocumentNodeForBaseLine(5,$cmp,$r2))
    #if($dN2.scopeId == 5)
        #if($compareOriginIds.add($verDao.getVersionByDocumentId($dN2.refId).originDocument.id))#end
        #if($compareDocIds.add($dN2.refId))#end
    #end
#end

#set($bData1 = $baseDao.getBaseLine( $mathTool.toInteger( $report_baseline1 )))
#set($bData2 = $baseDao.getBaseLine( $mathTool.toInteger( $report_baseline2 )))
<p class=MsoNormal>&nbsp;</p>

## Main Title Page Content
    <p class=MsoNormal style='margin-left:0in'><span style='font-size:24.0pt;line-height:115%'>Jama Software</span></p>
    <p class=MsoNormal style='margin-left:0in'><span style='font-size:16.0pt;line-height:115%'>Baseline to Baseline Comparison Report</span>
    </p>
    <p class=MsoNormal style='margin-left:0in'><span style='font-size:16.0pt;line-height:115%'>&nbsp;</span></p>
    <p class=MsoNormal style='margin-left:0in'><span style='font-size:16.0pt;line-height:115%'>&nbsp;</span></p>
    <p class=MsoNormal style='margin-left:0in'><span style='font-size:16.0pt;line-height:115%'>&nbsp;</span></p>
    <p class=MsoNormal style='margin-left:0in'><span
            style='font-size:16.0pt;line-height:115%'>Baseline 1 - $bData1.name</span></p>
    <p class=MsoNormal style='margin-left:0in'><span
            style='font-size:12.0pt;line-height:115%'>Created by $userDao.getUserFullName($bData1.createdBy)
                on $dateTool.format('MMM d, yyyy',$bData1.createdDate)</span></p>
    <p class=MsoNormal style='margin-left:0in'><span
            style='font-size:16.0pt;line-height:115%'>Baseline 2 - $bData2.name</span></p>
    <p class=MsoNormal style='margin-left:0in'><span
            style='font-size:12.0pt;line-height:115%'>Created by $userDao.getUserFullName($bData2.createdBy)
                on $dateTool.format('MMM d, yyyy',$bData2.createdDate)</span></p>


#########################################################################################################################
##
##  WORK_AROUND_HEADER_FOOTER
##
#########################################################################################################################
##--------------------------------------------------------------
##  Headers and Footers                                        #
##--------------------------------------------------------------
#if( $format == "doc" )
  <table style='margin-left:15in'>
    <tr style='height:.1in;mso-height-rule:exactly'>
      <td>
        <div style='mso-element:footnote-separator' id=fs>

        <p class=MsoNormal><span style='mso-special-character:footnote-separator'><![if !supportFootnotes]>

        <hr align=left size=1 width="33%">

        <![endif]></span></p>

        </div>

        <div style='mso-element:footnote-continuation-separator' id=fcs>

        <p class=MsoNormal><span style='mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

        <hr align=left size=1>

        <![endif]></span></p>

        </div>

        <div style='mso-element:endnote-separator' id=es>

        <p class=MsoNormal><span style='mso-special-character:footnote-separator'><![if !supportFootnotes]>

        <hr align=left size=1 width="33%">

        <![endif]></span></p>

        </div>

        <div style='mso-element:endnote-continuation-separator' id=ecs>

        <p class=MsoNormal><span style='mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

        <hr align=left size=1>

        <![endif]></span></p>

        </div>

        <div style='mso-element:header' id=h1>

          <p class=MsoHeader>$project.name
          <w:PTab Alignment="CENTER" RelativeTo="MARGIN" Leader="NONE"></w:PTab>
          <w:PTab Alignment="RIGHT" RelativeTo="MARGIN" Leader="NONE"></w:PTab>$title</p>

        </div>

        <![if !supportTextWrap]><br clear=ALL>
        <![endif]>

        <p class=MsoFooter style='margin-right:.25in'><o:p>&nbsp;</o:p></p>

        </div>

        <div style='mso-element:footer' id=f1>

          <p class=MsoFooter>$project.name
            <w:PTab Alignment="CENTER" RelativeTo="MARGIN" Leader="NONE"></w:PTab><span style='color:gray'>Confidential. $project.organization.name</span>
            <w:PTab Alignment="RIGHT" RelativeTo="MARGIN" Leader="NONE"></w:PTab>
            Page&nbsp;<!--[if supportFields]><span style='mso-element:field-begin'></span>PAGE <span style='mso-element:field-separator'></span>
            <![endif]-->2<!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->&nbsp;of&nbsp;<span style='mso-field-code:" NUMPAGES  "'>4</span></p>
          </p>

        </div>

        <div style='mso-element:header' id=fh1>

        <p class=MsoHeader><o:p>&nbsp;</o:p></p>

        <p class=MsoHeader align=right style='text-align:right'><o:p>&nbsp;</o:p></p>

        </div>

        <div style='mso-element:footer' id=ff1>

        <p class=MsoFooter style='text-align:center'>
          &copy; $project.organization.name, All Right Reserved. This document may not in any form be reproduced, distributed or utilized, in whole or in part without prior, express written consent of $project.organization.name.
        </p>

        </div>
      </td>
    </tr>
  </table>
#end
#########################################################################################################################

## Page Break
<br clear=all style='mso-special-character:line-break;page-break-before:always'>

#if( $format == "doc" )
#########################################################################################################################
##
##  8.3.2 TABLE_OF_CONTENTS
##
#########################################################################################################################

## Title
<p class=MsoTocHeading>Table of Contents</p>

## Word field for a table of contents
<div>
 <p class=MsoNormal>
    <!--[if supportFields]><span style='mso-element:field-begin'></span> 
    TOC \h \o 1-3 \* MERGEFORMAT <span
    style='mso-element:field-separator'></span>
  <![endif]--><span
    style='color:red;mso-no-proof:yes'>Select the entire document (Windows: Ctrl+a) (Mac: Command+a) and press F9 to update the TOC and Cross-References</span><!--[if supportFields]><span
    style='mso-element:field-end'></span><![endif]--></p>
	
</div>

## Page Break
<br clear=all style='mso-special-character:line-break;page-break-before:always'>
#end ##if( $format == "doc" )



#########################################################################################################################
##
##  8.3.3 BASELINE_BODY
##
#########################################################################################################################



<!--------------------------   Build Section 1.0 Updated Items    ------------------------------->

<h1>UPDATED ITEMS</h1>

#foreach( $node1 in $sortTool.sort( $baseDocNodes,"globalSortOrder") )
  
  #set($baseDoc = $docDao.getDocument($node1.refId))
  #if( $documentList.add( $baseDoc)) #end ## add baseDocs to documentlist to get header and footer    
  
  #set( $baseOrigin = $verDao.getVersionByDocumentId($baseDoc.id).originDocument.id)
  #set( $orginDoc = $docDao.getDocument( $baseOrigin ))

  #if( $compareOriginIds.contains( $baseOrigin ) )
    #set( $baseDN2 = $docNodeDao.getDocumentNodeForBaseLine(5,$compareDocIds.get($compareOriginIds.indexOf( $baseOrigin )), $r2))
    #set( $compareDoc = $docDao.getDocument( $baseDN2.refId) )
    #set( $bVer = $verDao.getVersionByDocumentId( $baseDoc.id) )
    #set( $aVer = $verDao.getVersionByDocumentId( $compareDoc.id) )
    
    #set( $relsMatch = true )

<!--- Check for relationships changes  --->
    #if( $includeRelationships == true)
      #buildRelationshipCounts( $baseDoc $originDoc $rl $r2 ) 
      ## returns $base1RelsSize, $base2RelsSize, $relsMatch, $base1Rels $base2Rels
    #end ##if( $includeRelationships == true)

    ##Basedoc: $baseDoc.id Compare: $compareDoc.id<br> 
    #if( $baseDoc.id != $compareDoc.id || $relsMatch == false) 
      #set($index = $count - 1) ##COUNT $count 
      #set($spot = 0)

      #formatUpdatedItemsHeader( $baseDoc $bData1 $bData2 )
    
      <!--- go through list of item types and find the one that matched the item being checked --->
      #set($foundChg = 0)

      #foreach($dl in $docList)
        
        #if( $dl.get(0) == $baseDoc.documentType.id )

      <!--- once you have the item type, check field values and build comparison btwn baseDoc and compareDoc --->
      
          #foreach($b in $dl)
            #if( $spot != 0 )
              #if( ($report_excludeStatus == false) || ( $report_excludeStatus == true && $b != "status" && $b != "modifiedDate" ))
        
                <!--- check to see if field for b1 is different than same field for b2 --->

                #if( $velocityReportUtil.getValueForField( $baseDoc, $b, $dateFormat) != 
                     $velocityReportUtil.getValueForField( $compareDoc, $b, $dateFormat ))
                      
                      #set( $foundChg = 1 )
        
                  <tr>
                    <td valign=top style='width:1.0in;border:solid windowtext 1.0pt;border-top:none;
                    mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt; padding:5.4pt 5.4pt 5.4pt 5.4pt'>
                      #formatTableCell( $dtDao.getDocumentTypeFieldByName($b, $baseDoc.documentType.id).label, "left", 130)
                    </td>

                    #if( $report_showFinText == true )
                      #formatFieldOrTestStepsBaseDoc( $b $baseDoc )
                    #end ##if( $report_showFinText == true )

                    #showComparisonForFields( $b $baseDoc $compareDoc )

                    #if( $report_showFinText == true )
                      #formatFieldOrTestCaseStepsCompareDoc( $b $compareDoc )
                    #end ##if( $report_showFinText == true)
                  </tr>
                
                #end ##if( $velocityReportUtil.getValueForField( $baseDoc, $b, $dateFormat) !=
              #end ##if( ($report_excludeStatus == false) || ( $report_excludeStatus == true && $b != "status" && $b != "modifiedDate" ))
            #end ##if( $spot != 0 )
            
            #set( $spot = 1 )
          
          #end ##foreach($b in $dl)
    
          #if($foundChg == 0)
            <tr>
            #set( $colSpan = 3)
            #if( $report_showFinText == true)
              #set( $colSpan = 4)
            #else
              #set( $colSpan = 3)
            #end  ##if( $report_showFinText == true)

            <td colspan=$colSpan valign=top style='border:solid windowtext 1.0pt;border-top:none;mso-border-top-alt:solid windowtext .5pt;
            mso-border-alt:solid windowtext .5pt; padding:5.4pt 5.4pt 0in 4.05pt'>
              <p class=TableCell style='margin-left:0in'>
                All item fields have been reset to the Baseline 1 state or have not been
                changed. Refer to version comments for history. If no version comments
                exist, the fields have not changed.</p>
            </td>
          </tr>
          #end ##if($foundChg == 0)
  
      #end  ##foreach($dl in $docList)
    #end  ##if( $baseDoc.id != $compareDoc.id || $relsMatch == false) ##Basedoc: $baseDoc.id Compare: $compareDoc.id<br> 



<!---------------           Build Relationships Row        ---------------------------->

  #if( $includeRelationships == true)  
    #formatRelationshipRow( $aVer $bVer $base1Rels $base2Rels $base1RelsSize $base2RelsSize $relsMatch )
  #end ##end include relationships


<!---------------          Build Versioned Comment Row     ----------------------------->
    #set( $count=0 )

    #if( $baseDoc.id != $compareDoc.id )

      #set($next = $mathTool.toInteger($bVer.versionNumber)+1)
      #set($total = $mathTool.toInteger($aVer.versionNumber)+1)
      
      #if($report_showComment == true)
        #formatVersionCommentRow( $next $total $baseOrigin )
      #end ##if($report_showComment == true)
    
    #end ##if( $baseDoc.id != $compareDoc.id )

</table> ## Closes Updated Items Section 1.0 
#end ##if( $compareOriginIds.contains( $baseOrigin ) )

 

#else
  #if($deleted.add($baseDoc))#end
#end

#end ##foreach( $node1 in $sortTool.sort( $baseDocNodes,"globalSortOrder") )

<!--------------         Build the Deleted Item Section 2.0    ---------------------->

#formatDeletedItems( $deleted )

<!--------------          Build the Added Item Section 3.0     ---------------------->

#formatAddedItems( $compareOriginIds )



#*
#########################################################################################################################
##
##  8.3.6 OUTPUT_DOCUMENT_LIST: Generate each item in DocumentList
##
#########################################################################################################################

#foreach( $vDoc in $documentList )
  ## Skip the first item in baseline mode since it is the container
  #if( $foreach.index > 0 || !$baselineMode )
    ## creates $doc, which is the document object for the current item in the list
    #set( $doc = $vDoc.document )
    ## creates $docTypeKey, which is the document type for the current item in the list
    #set( $docTypeKey = $doc.documentType.documentTypeKey )

    ## creates $nextDoc, the next document in list.  
    ## $nextDoc is false if $doc is the last item in the list
    #if( $foreach.hasNext )
      #set( $nextIndex = $foreach.index + 1 )
      #set( $nextDoc = $documentList.get($nextIndex).document )
    #else
      #set( $nextDoc = false )
    #end

    ## Get the heading level compared to the container
    #getHierarchyLevel($doc $baselineMode $baselineId) ## creates $hierarchyLevel
    ##Debug Hierarchy: $hierarchyLevel
    ## Get the doc's status value
    #getStatus($doc) ## creates $docStatus, false if there is none

    ## Get the doc's object_status value, if it has one
    #getObjectType($doc) ## creates $docObjectType, false if there is none

    #########################################################################################################################
    ## **********************************************************************************************************************
    ##
    ##  8.3.6.1 ITEM_TYPE_MAP: Map the current document object to the correct output format macro
    ##
    ##  >>>> Add new item type mappings in this section <<<< ##>
    ##
    ## **********************************************************************************************************************
    #########################################################################################################################

    ## Containers
    #if( $docTypeKey == $cmpKey ||
         $docTypeKey == $setKey || 
         $docTypeKey == $fldKey ) #formatHeading( $doc $hierarchyLevel $docStatus )
    ## Figures
    #elseif( $docObjectType == $figureObjectType ) #formatFigureObject( $doc $docStatus )
    ## Tables
    #elseif( $docObjectType == $tableObjectType ) #formatTableObject( $doc $docStatus )
    ## Equations
    #elseif( $docObjectType == $equationObjectType ) #formatEquationObject( $doc $docStatus )
    ## Information
    #elseif( $docObjectType == $informationObjectType ) #formatNameDescription( $doc $hierarchyLevel $docStatus )
    ## Information without Heading
    #elseif( $docObjectType == $informationWoHeadingObjectType ) #formatDescription( $doc $docStatus )
    ## Text Items
    #elseif( $docTypeKey == $txtKey ) #formatNameDescription( $doc $hierarchyLevel $docStatus )

    ## V&V Item Types
    #elseif( $docTypeKey == "VER" ||
             $docTypeKey == "TC" ||
             $docTypeKey == "VAL" ||
             $docTypeKey == "VALTC" ||
             $docTypeKey == "VERTC" ||
             $docTypeKey == "REPVER") #formatVV( $doc $testRunMode $docStatus )

    ## Auto VSO Item Types
    #elseif( $docTypeKey == "CR" ) #formatAutoVsoChangeRequest( $doc $docStatus )
    #elseif( $docTypeKey == "TOOL" ) #formatAutoVsoToolEval( $doc $docStatus )
    #elseif( $docTypeKey == "ELEMENT" ||
             $docTypeKey == "SWUNIT" ) #formatAutoVsoImpObject( $doc $docStatus )
    #elseif( $docTypeKey == "FSR" ||
             $docTypeKey == "HWRQ" ||
             $docTypeKey == "HWSR" ||
             $docTypeKey == "IO" ||
             $docTypeKey == "SG" ||
             $docTypeKey == "SWRQ" ||
             $docTypeKey == "SWSR" ||
             $docTypeKey == "SHRQ" ||
             $docTypeKey == "SYSRQ" ||
             $docTypeKey == "TSR" ||
             $docTypeKey == "SWARCH"||
             $docTypeKey == "SWDES" ) #formatAutoVsoReqSpec( $doc $docTypeKey $docStatus )
    ## Medical Device Framework Item Types
    #elseif( $docTypeKey == "SUBSREQ" ) #formatSubSystemRequirement( $doc $nextDoc $docStatus )
    ## Semiconductor Framework Item Types
    #elseif( $docTypeKey == "PRD" || 
             $docTypeKey == "BLKRQ" ) #formatICBlockRequirement( $doc $nextDoc $docStatus )
    ## Unknown Item Types
    #else #formatNameDescription( $doc $hierarchyLevel $docStatus ) #end


    #########################################################################################################################
    ## **********************************************************************************************************************
    #########################################################################################################################
  #end
#end*#

</div>

</body>
#end
#########################################################################################################################
## **********************************************************************************************************************
#########################################################################################################################
##
#########################################################################################################################
##
##  9. DOCUMENT_INITIALIZATION
##
##  All code the executes before the report loops through $documentList goes here.
##
##  Outputs the following information for use in the rest of the report:
##  --> $containerDoc - Set or Component that contains the items in the document.  Used for Headers, Footers and Title page.
##  --> $documentRev - Name of the baseline that all items are part of. Appended with an asterisk if some items have 
##                     changed since latest baseline.
##  --> $referenencableDocIds - List of all items that will have bookmark references available in the doc
##
#########################################################################################################################
##getContainer( true ) ## Creates: $containerDoc
#### Debug: $containerDoc.documentKey: $containerDoc.name
## Only show a revision if exporting from a baseline
#*#if( $baselineMode )
  #getDocumentRev() ## Creates: $documentRev, $baselineId
  #### Debug $documentRev
#else
  #set( $documentRev = "N/A" )
  #set( $baselineId = false )
#end
#getReferenceableDocIds() ## Creates: $referenencableDocIds*#
##
#########################################################################################################################

#########################################################################################################################
##
##  10. REPORT_BODY
##
#########################################################################################################################

#set( $body = "#createBody()")
#if( $format == "doc" )
  #convertEquals( $body )
#else
  $body
#end

#########################################################################################################################
##
##  11. PDF_HEADER_FOOTER
##
#########################################################################################################################
#if( $format == "pdf" )
  ##---------------------------------------------------------------------------
  ## Get information from the document container
  ##---------------------------------------------------------------------------
  #if( $containerDoc )
    #set( $title = $containerDoc.name)
  #else
    #set( $title = "Baseline Comparison Report" )
  #end
  ##---------------------------------------------------------------------------
  <jamaheader>
    <style type="text/css">
      div
      {float:left;
       width: 3.25in;
       max-width: 3.25in;}
      p
      {font-size:9pt;
       font-family:"${primaryFont}",sans-serif;}
      div.left
        {margin-left:1in;}
      p.left
      {text-align: left;}
      p.right
        {text-align: right;}
    </style>
    <div class=left><p class=left>$project.name</p></div>
    <div><p class=right>$title</p></div>
  </jamaheader>
  <jamafooter>
    <style type="text/css">
      div
      {float:left;
       width: 2.16in;
       max-width: 2.16in;}
      p
      {font-size:9pt;
       font-family:"${primaryFont}",sans-serif;}
      div.left
        {margin-left:1in;}
      p.left
      {text-align: left;}
      p.middle
        {text-align: center;
        color:gray;}
      p.right
        {text-align: right;}
    </style>
    <div class=left><p class=left>$project.name</p></div>
    <div><p class=middle>Confidential. $project.organization.name</p></div>
    <div><p class=right>Page $$PAGEOF$$</p></div>
  </jamafooter>
#end

</html>

#########################################################################################################################
##
##  12. MS_WORD_OBJECTS
##
#########################################################################################################################

#if( $format == "doc" )
#########################################################################################################################
##  Embed images
#########################################################################################################################

#foreach( $f in $figure)
$f
#end

#########################################################################################################################

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/item0001.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<b:Sources xmlns:b=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography" xmlns=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography" SelectedStyle=3D"/APASixthEditionOfficeOnline.xsl" StyleName=3D"APA" Version=3D"6"/>

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/props001.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?>
<ds:datastoreItem ds:itemID=3D"{A1D0A804-CF3A-234A-AB79-452ECE125E33}" xmlns:ds=3D"http://schemas.openxmlformats.org/officeDocument/2006/customXml"><ds:schemaRefs><ds:schemaRef ds:uri=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography"/></ds:schemaRefs></ds:datastoreItem>

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/themedata.thmx
Content-Transfer-Encoding: base64
Content-Type: application/vnd.ms-officetheme

UEsDBBQABgAIAAAAIQDp3g+//wAAABwCAAATAAAAW0NvbnRlbnRfVHlwZXNdLnhtbKyRy07DMBBF
90j8g+UtSpyyQAgl6YLHjseifMDImSQWydiyp1X790zSVEKoIBZsLNkz954743K9Hwe1w5icp0qv
8kIrJOsbR12l3zdP2a1WiYEaGDxhpQ+Y9Lq+vCg3h4BJiZpSpXvmcGdMsj2OkHIfkKTS+jgCyzV2
JoD9gA7NdVHcGOuJkTjjyUPX5QO2sB1YPe7l+Zgk4pC0uj82TqxKQwiDs8CS1Oyo+UbJFkIuyrkn
9S6kK4mhzVnCVPkZsOheZTXRNajeIPILjBLDsAyJX89nIBkt5r87nons29ZZbLzdjrKOfDZezE7B
/xRg9T/oE9PMf1t/AgAA//8DAFBLAwQUAAYACAAAACEApdan58AAAAA2AQAACwAAAF9yZWxzLy5y
ZWxzhI/PasMwDIfvhb2D0X1R0sMYJXYvpZBDL6N9AOEof2giG9sb69tPxwYKuwiEpO/3qT3+rov5
4ZTnIBaaqgbD4kM/y2jhdj2/f4LJhaSnJQhbeHCGo3vbtV+8UNGjPM0xG6VItjCVEg+I2U+8Uq5C
ZNHJENJKRds0YiR/p5FxX9cfmJ4Z4DZM0/UWUtc3YK6PqMn/s8MwzJ5PwX+vLOVFBG43lExp5GKh
qC/jU72QqGWq1B7Qtbj51v0BAAD//wMAUEsDBBQABgAIAAAAIQBreZYWgwAAAIoAAAAcAAAAdGhl
bWUvdGhlbWUvdGhlbWVNYW5hZ2VyLnhtbAzMTQrDIBBA4X2hd5DZN2O7KEVissuuu/YAQ5waQceg
0p/b1+XjgzfO3xTVm0sNWSycBw2KZc0uiLfwfCynG6jaSBzFLGzhxxXm6XgYybSNE99JyHNRfSPV
kIWttd0g1rUr1SHvLN1euSRqPYtHV+jT9yniResrJgoCOP0BAAD//wMAUEsDBBQABgAIAAAAIQC2
9GeYkwcAAMkgAAAWAAAAdGhlbWUvdGhlbWUvdGhlbWUxLnhtbOxZzYsbyRW/B/I/NH2X9dWtj8Hy
ok/P2jO2sWSHPdZIpe7yVHeJqtKMxWII3lMugcAm5JCFve0hhCzswi655I8x2CSbPyKvqlvdVVLJ
nhkcMGFGMHSXfu/Vr9579d5T1d3PXibUu8BcEJb2/Pqdmu/hdM4WJI16/rPZpNLxPSFRukCUpbjn
b7DwP7v361/dRUcyxgn2QD4VR6jnx1KujqpVMYdhJO6wFU7huyXjCZLwyqPqgqNL0JvQaqNWa1UT
RFLfS1ECah8vl2SOvZlS6d/bKh9TeE2lUANzyqdKNbYkNHZxXlcIsRFDyr0LRHs+zLNglzP8Uvoe
RULCFz2/pv/86r27VXSUC1F5QNaQm+i/XC4XWJw39Jw8OismDYIwaPUL/RpA5T5u3B63xq1Cnwag
+RxWmnGxdbYbwyDHGqDs0aF71B416xbe0N/c49wP1cfCa1CmP9jDTyZDsKKF16AMH+7hw0F3MLL1
a1CGb+3h27X+KGhb+jUopiQ930PXwlZzuF1tAVkyeuyEd8Ng0m7kyksUREMRXWqKJUvloVhL0AvG
JwBQQIokST25WeElmkMUDxElZ5x4JySKIfBWKGUChmuN2qTWhP/qE+gn7VF0hJEhrXgBE7E3pPh4
Ys7JSvb8B6DVNyBvf/75zesf37z+6c1XX715/fd8bq3KkjtGaWTK/fLdH/7zzW+9f//w7S9f/zGb
ehcvTPy7v/3u3T/++T71sOLSFG//9P27H79/++ff/+uvXzu09zk6M+EzkmDhPcKX3lOWwAId/PEZ
v57ELEbElOinkUApUrM49I9lbKEfbRBFDtwA23Z8ziHVuID31y8swtOYryVxaHwYJxbwlDE6YNxp
hYdqLsPMs3UauSfnaxP3FKEL19xDlFpeHq9XkGOJS+UwxhbNJxSlEkU4xdJT37FzjB2r+4IQy66n
ZM6ZYEvpfUG8ASJOk8zImRVNpdAxScAvGxdB8Ldlm9Pn3oBR16pH+MJGwt5A1EF+hqllxvtoLVHi
UjlDCTUNfoJk7CI53fC5iRsLCZ6OMGXeeIGFcMk85rBew+kPIc243X5KN4mN5JKcu3SeIMZM5Iid
D2OUrFzYKUljE/u5OIcQRd4TJl3wU2bvEPUOfkDpQXc/J9hy94ezwTPIsCalMkDUN2vu8OV9zKz4
nW7oEmFXqunzxEqxfU6c0TFYR1Zon2BM0SVaYOw9+9zBYMBWls1L0g9iyCrH2BVYD5Adq+o9xQJ6
JdXc7OfJEyKskJ3iiB3gc7rZSTwblCaIH9L8CLxu2nwMpS5xBcBjOj83gY8I9IAQL06jPBagwwju
g1qfxMgqYOpduON1wy3/XWWPwb58YdG4wr4EGXxtGUjspsx7bTND1JqgDJgZgi7DlW5BxHJ/KaKK
qxZbO+WW9qYt3QDdkdX0JCT9YAe00/uE/7veBzqMt3/5xrEPPk6/41ZsJatrdjqHksnxTn9zCLfb
1QwZX5BPv6kZoXX6BEMd2c9Ytz3NbU/j/9/3NIf2820nc6jfuO1kfOgwbjuZ/HDl43QyZfMCfY06
8MgOevSxT3Lw1GdJKJ3KDcUnQh/8CPg9s5jAoJLTJ564OAVcxfCoyhxMYOEijrSMx5n8DZHxNEYr
OB2q+0pJJHLVkfBWTMChkR526lZ4uk5O2SI77KzX1cFmVlkFkuV4LSzG4aBKZuhWuzzAK9RrtpE+
aN0SULLXIWFMZpNoOki0t4PKSPpYF4zmIKFX9lFYdB0sOkr91lV7LIBa4RX4we3Bz/SeHwYgAkJw
HgfN+UL5KXP11rvamR/T04eMaUUANNjbCCg93VVcDy5PrS4LtSt42iJhhJtNQltGN3gihp/BeXSq
0avQuK6vu6VLLXrKFHo+CK2SRrvzPhY39TXI7eYGmpqZgqbeZc9vNUMImTla9fwlHBrDY7KC2BHq
NxeiEdy8zCXPNvxNMsuKCzlCIs4MrpNOlg0SIjH3KEl6vlp+4Qaa6hyiudUbkBA+WXJdSCufGjlw
uu1kvFziuTTdbowoS2evkOGzXOH8VovfHKwk2RrcPY0Xl94ZXfOnCEIsbNeVARdEwN1BPbPmgsBl
WJHIyvjbKUx52jVvo3QMZeOIrmKUVxQzmWdwncoLOvqtsIHxlq8ZDGqYJC+EZ5EqsKZRrWpaVI2M
w8Gq+2EhZTkjaZY108oqqmq6s5g1w7YM7NjyZkXeYLU1MeQ0s8JnqXs35Xa3uW6nTyiqBBi8sJ+j
6l6hIBjUysksaorxfhpWOTsftWvHdoEfoHaVImFk/dZW7Y7dihrhnA4Gb1T5QW43amFoue0rtaX1
rbl5sc3OXkDyGEGXu6ZSaFfCyS5H0BBNdU+SpQ3YIi9lvjXgyVtz0vO/rIX9YNgIh5VaJxxXgmZQ
q3TCfrPSD8NmfRzWa6NB4xUUFhkn9TC7sZ/ABQbd5Pf2enzv7j7Z3tHcmbOkyvTdfFUT13f39cbh
u3uPQNL5stWYdJvdQavSbfYnlWA06FS6w9agMmoN26PJaBh2upNXvnehwUG/OQxa406lVR8OK0Gr
puh3upV20Gj0g3a/Mw76r/I2BlaepY/cFmBezevefwEAAP//AwBQSwMEFAAGAAgAAAAhAA3RkJ+2
AAAAGwEAACcAAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFnZXIueG1sLnJlbHOEj00KwjAU
hPeCdwhvb9O6EJEm3YjQrdQDhOQ1DTY/JFHs7Q2uLAguh2G+mWm7l53JE2My3jFoqhoIOumVcZrB
bbjsjkBSFk6J2TtksGCCjm837RVnkUsoTSYkUiguMZhyDidKk5zQilT5gK44o49W5CKjpkHIu9BI
93V9oPGbAXzFJL1iEHvVABmWUJr/s/04GolnLx8WXf5RQXPZhQUoosbM4CObqkwEylu6usTfAAAA
//8DAFBLAQItABQABgAIAAAAIQDp3g+//wAAABwCAAATAAAAAAAAAAAAAAAAAAAAAABbQ29udGVu
dF9UeXBlc10ueG1sUEsBAi0AFAAGAAgAAAAhAKXWp+fAAAAANgEAAAsAAAAAAAAAAAAAAAAAMAEA
AF9yZWxzLy5yZWxzUEsBAi0AFAAGAAgAAAAhAGt5lhaDAAAAigAAABwAAAAAAAAAAAAAAAAAGQIA
AHRoZW1lL3RoZW1lL3RoZW1lTWFuYWdlci54bWxQSwECLQAUAAYACAAAACEAtvRnmJMHAADJIAAA
FgAAAAAAAAAAAAAAAADWAgAAdGhlbWUvdGhlbWUvdGhlbWUxLnhtbFBLAQItABQABgAIAAAAIQAN
0ZCftgAAABsBAAAnAAAAAAAAAAAAAAAAAJ0KAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFn
ZXIueG1sLnJlbHNQSwUGAAAAAAUABQBdAQAAmAsAAAAA

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/colorschememapping.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"yes"?>
<a:clrMap xmlns:a=3D"http://schemas.openxmlformats.org/drawingml/2006/main" bg1=3D"lt1" tx1=3D"dk1" bg2=3D"lt2" tx2=3D"dk2" accent1=3D"accent1" accent2=3D"accent2" accent3=3D"accent3" accent4=3D"accent4" accent5=3D"accent5" accent6=3D"accent6" hlink=3D"hlink" folHlink=3D"folHlink"/>

#########################################################################################################################
##
##  13. WORD_HEADER_FOOTER: MS Word Header / Footer Definition
##  Removed due to Word for Mac bug
##
#########################################################################################################################
#*
------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/header.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="utf-8"

<html xmlns:v=3D"urn:schemas-microsoft-com:vml"
xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns:dt=3D"uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml"
xmlns=3D"http://www.w3.org/TR/REC-html40">

##---------------------------------------------------------------------------
## Get information from the document container
##---------------------------------------------------------------------------
#if( $containerDoc )
  #set( $title = $containerDoc.name)
#else
  #set( $title = "Baseline Comparison Report" )
#end
##---------------------------------------------------------------------------

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 15">
<meta name=3DOriginator content=3D"Microsoft Word 15">
<link id=3DMain-File rel=3DMain-File href=3D"../WordTemplate.htm">
<![if IE]>
<base href=3D"file:///C:/D993472D/WordTemplate.fld/header.htm" id=3D"webarch_temp_base_tag">
<![endif]><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"2049"/>
</xml><![endif]-->
</head>

<body lang=3DEN-US link=3Dblue vlink=3D"#954F72">

<div style=3D'mso-element:footnote-separator' id=3Dfs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1 width=3D"33%">

<![endif]></span></p>

</div>

<div style=3D'mso-element:footnote-continuation-separator' id=3Dfcs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1>

<![endif]></span></p>

</div>

<div style=3D'mso-element:endnote-separator' id=3Des>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1 width=3D"33%">

<![endif]></span></p>

</div>

<div style=3D'mso-element:endnote-continuation-separator' id=3Decs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1>

<![endif]></span></p>

</div>

<div style=3D'mso-element:header' id=3Dh1>

  <p class=3DMsoHeader>$project.name
  <w:PTab Alignment=3D"CENTER" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>
  <w:PTab Alignment=3D"RIGHT" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>$title</p>

</div>

<![if !supportTextWrap]><br clear=3DALL>
<![endif]>

<p class=3DMsoFooter style=3D'margin-right:.25in'><o:p>&nbsp;</o:p></p>

</div>

<div style=3D'mso-element:footer' id=3Df1>

  <p class=3DMsoFooter>$project.name
    <w:PTab Alignment=3D"CENTER" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab><span style=3D'color:gray'>Confidential. $project.organization.name</span>
    <w:PTab Alignment=3D"RIGHT" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>
    Page&nbsp;<!--[if supportFields]><span style=3D'mso-element:field-begin'></span>PAGE <span style=3D'mso-element:field-separator'></span>
    <![endif]-->2<!--[if supportFields]><span style=3D'mso-element:field-end'></span><![endif]-->&nbsp;of&nbsp;<span style=3D'mso-field-code:" NUMPAGES  "'>4</span></p>
  </p>

</div>

<div style=3D'mso-element:header' id=3Dfh1>

<p class=3DMsoHeader><o:p>&nbsp;</o:p></p>

<p class=3DMsoHeader align=3Dright style=3D'text-align:right'><o:p>&nbsp;</o:p></p>

</div>

<div style=3D'mso-element:footer' id=3Dff1>

<p class=3DMsoFooter style=3D'text-align:center'>
  &copy; $project.organization.name, All Right Reserved. This document may not in any form be reproduced, distributed or utilized, in whole or in part without prior, express written consent of $project.organization.name.
</p>

</div>

</body>

</html>
*#


#########################################################################################################################

#########################################################################################################################
##
##  14. WORD_EMBEDDED_FILE_LIST
##
#########################################################################################################################

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/filelist.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml; charset="utf-8"

<xml xmlns:o=3D"urn:schemas-microsoft-com:office:office">
 <o:MainFile HRef=3D"../WordTemplate.htm"/>
 <o:File HRef=3D"item0001.xml"/>
 <o:File HRef=3D"props001.xml"/>
 <o:File HRef=3D"themedata.thmx"/>
 <o:File HRef=3D"colorschememapping.xml"/>
##<o:File HRef=3D"header.htm"/>
 #foreach( $file in $files)
 #convertEquals($file)
 #end
 <o:File HRef=3D"filelist.xml"/>
</xml>
------=_NextPart_01D506B0.1F52D2B0--
#end
