#if( $format == "doc" )
MIME-Version: 1.0
Content-Type: multipart/related; boundary="----=_NextPart_01D506B0.1F52D2B0"
#end

## ======================================================================================================================
## Name: reviewCommentsAndSignaturesv9.vm
## 
## Description: Context Insensitive report that shows Review Approver Signatures and Comments. 
##
##              User enters a string 'REV-id' and report will show Approver Signatures from the latest revision of the 
##              review, a comment summary of the review, and for each revision in the review the revision item comments. 
##         
##              The user can also enter a string revision 'V-x' version number to get comments for the select revision 
##              only. 
## ======================================================================================================================
## MODIFICATION HISTORY 
## 
## Date         Revision   Person            Comments 
## -----------  ---------  ----------------  ---------------------------------- 
## 2024-02-16     1.0      Anna FitzGerald    Review Center Comments 
## 2024-02-27     1.1      Anna FitzGerald    Update for revoked approver signatures 
##                                            Update of review comment summary revision item heading
## 2023-03-05     1.2      Anna FitzGerald    Update of Approvers & Reviewers tables structure and added 'Status' column
##                                            Removed the 'Important' and 'Active' column from the comments tables 
##                                            Adjusted logic to show all comments up to and including the revision version exported 
##                                            Updated the Revision Item Comment table with 'Thread Identity' column
##                                            Updated comments tables with 'Review Version' column.
## 2023-03-11     1.3      Anna FitzGerald    Removed Revision Item Version number from heading 
##                                            Removed condition around comment row that had set a limitation on what comments show. 
##                                            Updated revision items to be grouped by global id so that there is one table per revision item. 
## 2024-03-15     1.4      Anna FitzGerald    Updated so that all revision items show regardless of it they have comments 
## 2024-04-23     3.2      Anna FitzGerald    Added condition around retrieving base64 for an attachment to ensure base64 conversion is possible
##                                            Updated regex pattern that gets input review id
## 2023-04-24     3.3      Anna FitzGerald    Updated timeZones to be consistently UTC and formatted w/ ISO International date format
## 2024-04-26     3.3.1    Liam Rotchford     Minor $dateTool.format() string adjustment for month from 'mm' to proper 'MM' to resolve date 
##                                              conversion error for #getDate() and #getDateTime() macros. 
## 2024-04-29     3.3.2    Anna FitzGerald    Updated condition in the #formatTables macro so that a mapped row value is only checked if its not false
## 2024-04-30     3.4      Anna FitzGerald    Added method so that if the review is not located by id it is located by sequence
##                                            Added logic so that only active comments show
## 2024-04-30     3.4.1    Anna FitzGerald    Minor update added count initiation for deleted comments on revision items
## 2024-04-30     3.4.2    Anna FitzGerald    Minor update adjustment of colspan
## 2024-05-07     3.4.3    Anna FitzGerald    Updated review event conditions w/ the inclusion of a new macro #compareEventDates.
##                                            Set additional types of review events to utilize in event date comparison
##                                            Added a nextRev and nextRevCreatedDate variable to utilize for comparing dates to ensure 
##                                             that the event of concern is the latest state of the 'Review activity' given the respective review or revision. 
##                                            Reconfigured active comments logic 
## ======================================================================================================================
##
## Report Criteria:
## ---------------------------    
##  * Note: If being used this criteria will need to be added to the report configuration.  
##
##     Type:       Display Name:       Report Global Variable:   Function:
##      ----------------------------------------------------------------------------------------------------------------------
##     String       Review Id           reportReviewId        supplies the report with the review id, i.e. "Rev-25", not case sensitive
##     String       Revision Version    reportRevisionV       supplies the report with the revision version, i.e. "V2", not case sensitive
##
##    
##
## ======================================================================================================================
##
##
#########################################################################################################################
#########################################################################################################################
##
##  Installation Instructions
#########################################################################################################################
## Review Comments & Signatures:
## 
## Word & PDF Format
##	-Report Formats: Micosoft Word, PDF
##  -Scope: Organization
##  -Organization: Select yours
##  -Visible to Users: true
##  -Add criteria
##  -Context Sensitive: false
## 
##
##
#########################################################################################################################
##
##  1. DATA_SOURCES
##
#########################################################################################################################
##
## 
##
## Data Sources loaded for this report
##-------------------------------------------
#if( $documentSource ) ##
  #set( $docDao = $documentSource )
  #set( $documentNodeDao = $documentSource )
  #set( $attachmentDao = $documentSource )
  #set( $attachmentService = $documentSource )
  #set( $relDao = $documentSource )
  #set( $versionDao = $documentSource )
  #set( $testRunDao = $testSource )
  #set( $velocityServiceWrapper = $documentSource )
  #set( $baselineDao = $baselineSource )
  #set( $filterDao = $filterSource)
#end
##
##
##
## Review Comments Report Parameters ## 
##-------------------------------------------
#set( $printParameterWarningMessage = false )
#set( $reviewId = false )
#set( $reviewForComments = false )
#set( $revisionInput = false )
#set( $revisionListUpToVersion = [] )
##
## Get the REV-id 
##-------------------------------------------
#if( $reportReviewId.toUpperCase().contains("REV"))
	#set( $reviewId = $reportReviewId.replaceAll("(?:rev|REV).(\d*)", "$1"))
	#set( $reviewId = $reviewId.trim())
	#set( $reviewForComments = $reviewSource.getReview($mathTool.toInteger($reviewId)))
  #if( !$reviewForComments )
    #set( $reviewSequence = $reviewId) 
    #set( $reviewForComments = $reviewSource.getReviewBySequence($mathTool.toInteger($reviewSequence)))
  #end 
#else 
	#set( $printParameterWarningMessage = true)
#end
##
##
## Get if user selected revision 
##-------------------------------------------
#if( $reportRevisionV.toUpperCase().contains("V"))
	#set( $revisionNum = $reportRevisionV.replaceAll("v|V", ""))
	#set( $revisionNum = $mathTool.toInteger($revisionNum.trim()))
	#if( $reviewForComments )
		#set( $revisions = $reviewForComments.revisions ) 
		#foreach( $revision in $revisions )
			#if( $revision.sequenceNumber == $revisionNum )
				#set( $revisionForComments = $revision )
				#set( $revisionInput = true )
        #set( $success = $revisionListUpToVersion.add( $revision ))
        #if( $foreach.hasNext )
          #set( $nextIdx = $foreach.index + 1 )
          #set( $nextRev = $revisions[$nextIndex])
          #set( $nextRevCreatedDate = $nextRev.createdDate)
        #else 
          #set( $nextRev = false )
          #set( $nextRevCreatedDate = false)
        #end 
			#elseif( $revision.sequenceNumber < $revisionNum)
        #set( $success = $revisionListUpToVersion.add( $revision ))
      #end 
		#end 
	#end 
#end 
##
##
## IF the user has not selected a revision 
## set the latest revision of the review 
## for signatures, headers, and review closure details. 
##------------------------------------------- 
#if( !$revisionForComments )
  #set( $revisions = $reviewForComments.revisions )
  #set( $revisionsSorted = $sortTool.sort( $revisions, "createdDate:desc"))
  #set( $revisionForComments = $revisionsSorted[0])
#end 
#########################################################################################################################
## **********************************************************************************************************************
##
##  2. CONSTANTS
##
##  >>>> Modify global constants for the report here <<<<
##
## **********************************************************************************************************************
#########################################################################################################################
#set( $boundaryString = "------=_NextPart_01D506B0.1F52D2B0") ##
#set( $filePrefix = "file:///C:/D993472D/WordTemplate.fld/") ##
#set( $cmpKey = "CMP") ##
#set( $setKey = "SET") ##
#set( $fldKey = "FLD") ##
#set( $txtKey = "TXT") ##
##
#set( $timeZone = "Etc/UTC" ) ##
##
## 
## Status values to exlude from export
#set( $excludedStatuses = ["Rejected","Deleted"] ) ##
##
## Maximum image width and height in points.  
## 468 pt is equivalant to 6.5"
## 612 pt is equivalant to 8.5"

#set( $maxPageWidth = 468 )##
#set( $maxHeight = 612 ) ## 
##
#set( $tableRefNum = 0) ## 'doc' Counter -> Tables
#set( $figureRefNum = 0) ## 'doc' Counter -> Figures 
#set( $equationRefNum = 0) ## 'pdf' or 'doc' Counter -> Equations 

## Automatically include a TOF or TOT for Word if 'true' (PDF select option at time of report install)
#set( $tableOfFigures = false )
#set( $tableOfTables = false )

## All Tables/Figures with captions/figcaptions will be included in the TOT and TOF 
## Automatically include all other Tables/Figures exported regardless of captions/figcaptions
## Equations will be provided static captions created by the custom report.
#set( $TOT_includeAllTables = false )
#set( $TOF_includeAllFigures = false )
#set( $TOE_includeAllEquations = false )

## Document Link Cross References
## If a customer would like any exported hyperlink that goes to a Jama item to redirect to the item heading
## if it is present in the export document, set this value to 'true'.
#set($includeCrossReferences = false)
#if($includeCrossReferences)
  #getReferenceableDocIds() ## Creates: $referenencableDocIds
#end

## Formatting
#set( $tableHeaderBackgroundColor = "#F2F2F2" )
#set( $tableBorderColor = "#7F7F7F" )


## iText PDF does not have Arial, the closest typeface it has is Helvetica
## Arimo is very close in appearance to Arial, and the remote accessible font is linked in the PDF head
#if( $format == "doc" )
	#set( $primaryFont = "Open Sans")
	##set( $primaryFont = "Arial")
#else ## pdf, html 
	##set( $primaryFont = "Arimo")  	
  	#set( $primaryFont = "Open Sans")
#end

#set( $primaryFontSize = "10pt")
#set( $h1FontSize = "16pt")
#set( $h2FontSize = "13pt")
#set( $h3FontSize = "12pt")
#set( $h4FontSize = "11pt")
#set( $h5FontSize = "11pt")
#set( $h6FontSize = "11pt")
#set( $h7FontSize = "11pt")
#set( $tableCellFontSize = "10pt")
#########################################################################################################################
## **********************************************************************************************************************
#########################################################################################################################
##
#########################################################################################################################
##
##  3. WORD_HTML_HEAD
##
#########################################################################################################################
#if( $format == "doc")

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="utf-8"

<html xmlns:v=3D"urn:schemas-microsoft-com:vml"
xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml"
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 15">
<meta name=3DOriginator content=3D"Microsoft Word 15">
<link rel=3DFile-List href=3D"WordTemplate.fld/filelist.xml">
<link rel=3DEdit-Time-Data href=3D"WordTemplate.fld/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Jama Software</o:Author>
  <o:LastAuthor>Jama Software</o:LastAuthor>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=3DdataStoreItem href=3D"WordTemplate.fld/item0001.xml" target=3D"WordTemplate.fld/props001.xml">
<link rel=3DthemeData href=3D"WordTemplate.fld/themedata.thmx">
<link rel=3DcolorSchemeMapping href=3D"WordTemplate.fld/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>100</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:EnableOpenTypeKerning/>
   <w:DontFlipMirrorIndents/>
   <w:OverrideTableStyleHps/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val=3D"Cambria Math"/>
   <m:brkBin m:val=3D"before"/>
   <m:brkBinSub m:val=3D"&#45;-"/>
   <m:smallFrac m:val=3D"off"/>
   <m:dispDef/>
   <m:lMargin m:val=3D"0"/>
   <m:rMargin m:val=3D"0"/>
   <m:defJc m:val=3D"centerGroup"/>
   <m:wrapIndent m:val=3D"1440"/>
   <m:intLim m:val=3D"subSup"/>
   <m:naryLim m:val=3D"undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState=3D"false" DefUnhideWhenUsed=3D"false"
  DefSemiHidden=3D"false" DefQFormat=3D"false" DefPriority=3D"99"
  LatentStyleCount=3D"376">
  <w:LsdException Locked=3D"false" Priority=3D"0" QFormat=3D"true" Name=3D"Normal"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"heading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 9"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 9"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 9"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footnote text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"header"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footer"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index heading"/>
  <w:LsdException Locked=3D"false" Priority=3D"35" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"caption"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"table of figures"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"envelope address"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"envelope return"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footnote reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"line number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"page number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"endnote reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"endnote text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"table of authorities"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"macro"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"toa heading"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"10" QFormat=3D"true" Name=3D"Title"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Closing"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Signature"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"Default Paragraph Font"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Message Header"/>
  <w:LsdException Locked=3D"false" Priority=3D"11" QFormat=3D"true" Name=3D"Subtitle"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Salutation"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Date"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text First Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text First Indent 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Note Heading"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Block Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Hyperlink"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"FollowedHyperlink"/>
  <w:LsdException Locked=3D"false" Priority=3D"22" QFormat=3D"true" Name=3D"Strong"/>
  <w:LsdException Locked=3D"false" Priority=3D"20" QFormat=3D"true" Name=3D"Emphasis"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Document Map"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Plain Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"E-mail Signature"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Top of Form"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Bottom of Form"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal (Web)"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Acronym"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Address"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Cite"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Code"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Definition"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Keyboard"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Preformatted"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Sample"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Typewriter"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Variable"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal Table"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation subject"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"No List"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Contemporary"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Elegant"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Professional"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Subtle 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Subtle 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Balloon Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"Table Grid"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Theme"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" Name=3D"Placeholder Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" QFormat=3D"true" Name=3D"No Spacing"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" Name=3D"Revision"/>
  <w:LsdException Locked=3D"false" Priority=3D"34" QFormat=3D"true"
   Name=3D"List Paragraph"/>
  <w:LsdException Locked=3D"false" Priority=3D"29" QFormat=3D"true" Name=3D"Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"30" QFormat=3D"true"
   Name=3D"Intense Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"19" QFormat=3D"true"
   Name=3D"Subtle Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"21" QFormat=3D"true"
   Name=3D"Intense Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"31" QFormat=3D"true"
   Name=3D"Subtle Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"32" QFormat=3D"true"
   Name=3D"Intense Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"33" QFormat=3D"true" Name=3D"Book Title"/>
  <w:LsdException Locked=3D"false" Priority=3D"37" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"Bibliography"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"TOC Heading"/>
  <w:LsdException Locked=3D"false" Priority=3D"41" Name=3D"Plain Table 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"42" Name=3D"Plain Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"43" Name=3D"Plain Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"44" Name=3D"Plain Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"45" Name=3D"Plain Table 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"40" Name=3D"Grid Table Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"46" Name=3D"Grid Table 1 Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark"/>
  <w:LsdException Locked=3D"false" Priority=3D"51" Name=3D"Grid Table 6 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"52" Name=3D"Grid Table 7 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"46" Name=3D"List Table 1 Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark"/>
  <w:LsdException Locked=3D"false" Priority=3D"51" Name=3D"List Table 6 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"52" Name=3D"List Table 7 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Mention"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Smart Hyperlink"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Hashtag"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Unresolved Mention"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Smart Link"/>
 </w:LatentStyles>
</xml><![endif]-->

#########################################################################################################################
##
##  3.1 WORD_STYLE_SHEET
##
#########################################################################################################################
<style>
<!--
 /* Font Definitions */
 @font-face
  {font-family:Wingdings;
  panose-1:5 0 0 0 0 0 0 0 0 0;
  mso-font-charset:77;
  mso-generic-font-family:decorative;
  mso-font-pitch:variable;
  mso-font-signature:3 268435456 0 0 -2147483647 0;}
@font-face
  {font-family:"Cambria Math";
  panose-1:2 4 5 3 5 4 6 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:roman;
  mso-font-pitch:variable;
  mso-font-signature:-536870145 1107305727 0 0 415 0;}
@font-face
  {font-family:"Calibri";
  panose-1:2 15 5 2 2 2 4 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:swiss;
  mso-font-pitch:variable;
  mso-font-signature:-1610611985 1073750139 0 0 159 0;}
@font-face
  {font-family:"Times New Roman \(Body CS\)";
  panose-1:2 11 6 4 2 2 2 2 2 4;
  mso-font-alt:"Times New Roman";
  mso-font-charset:0;
  mso-generic-font-family:roman;
  mso-font-pitch:auto;
  mso-font-signature:0 0 0 0 0 0;}
@font-face
  {font-family:"Helvetica Neue";
  panose-1:2 0 5 3 0 0 0 2 0 4;
  mso-font-charset:0;
  mso-generic-font-family:auto;
  mso-font-pitch:variable;
  mso-font-signature:-452984065 1342208475 16 0 1 0;}
@font-face
  {font-family:Times;
  panose-1:0 0 5 0 0 0 0 2 0 0;
  mso-font-charset:0;
  mso-generic-font-family:auto;
  mso-font-pitch:variable;
  mso-font-signature:-536870145 1342185562 0 0 415 0;}
@font-face
	{font-family:"Open Sans";
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536870161 1073750107 40 0 415 0;}

/* Set the global font family and base font-size */

body {
   font-family:"${primaryFont}",sans-serif;
   font-size:${primaryFontSize};}

 /* Style Definitions */
 p, p.MsoNormal, li.MsoNormal, div.MsoNormal
  {mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-parent:"";
  margin:3pt 0pt 3pt 0pt;
  mso-pagination:widow-orphan;
  font-family:"${primaryFont}",sans-serif;
  font-size:${primaryFontSize};
text-align:left;}
p.error
  {mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-parent:"";
  margin:0pt;
  mso-pagination:widow-orphan;
  color:red;}
h1
  {mso-style-priority:9;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:12pt 0pt 3pt .3in;
  text-indent:-.3in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:1;
  mso-list:l0 level1 lfo1;
  font-size:${h1FontSize};
  color:#2F5496;
  mso-font-kerning:0pt;
  font-weight:normal;}
h2
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .4in;
  text-indent:-.4in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:2;
  mso-list:l0 level2 lfo1;
  font-size:${h2FontSize};
  color:#2F5496;
  font-weight:normal;}
h3
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .5in;
  text-indent:-.5in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:3;
  mso-list:l0 level3 lfo1;
  font-size:${h3FontSize};
  color:#1F3763;
  font-weight:normal;}
h4
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .6in;
  text-indent:-.6in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:4;
  mso-list:l0 level4 lfo1;
  font-size:${h4FontSize};
  color:#2F5496;
  font-weight:normal;
  font-style:italic;}
h5
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .7in;
  text-indent:-.7in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:5;
  mso-list:l0 level5 lfo1;
  font-size:${h5FontSize};
  color:#2F5496;
  font-weight:normal;}
h6
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .8in;
  text-indent:-.8in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:6;
  mso-list:l0 level6 lfo1;
  font-size:${h6FontSize};
  color:#1F3763;
  font-weight:normal;}
/*tables of... leaders ->blank,dashed,dotted,heavy,lined,middot */
span {
	.mso-tab-count:blank !important;
}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:6pt 0pt 3pt .8in;
  text-indent:-.8in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:7;
  mso-list:l0 level7 lfo1;
  font-size:${h7FontSize};
  color:#1F3763;
  font-weight:normal;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:6pt 0pt 0pt 0pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:12.0pt;
  font-weight:bold;
  font-style:italic;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:6pt 0pt 0pt 11pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:11.0pt;
  font-weight:bold;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:3pt 0pt 0pt 22pt;
  font-family:"Arial",sans-serif;
  mso-pagination:widow-orphan;
  font-size:10.0pt;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:3pt 0pt 0pt 33pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:10.0pt;}
p.MsoToc5, li.MsoToc5, div.MsoToc5
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:3pt 0pt 0pt 44pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:10.0pt;}
p.MsoToc6, li.MsoToc6, div.MsoToc6
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:3pt 0pt 0pt 55pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:10.0pt;}
p.MsoToc7, li.MsoToc7, div.MsoToc7
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin:3pt 0pt 0pt 66pt;
  mso-pagination:widow-orphan;
  font-family:"Arial",sans-serif;
  font-size:10.0pt;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
  {mso-style-priority:99;
  mso-style-qformat:yes;
  margin:0pt;
  mso-pagination:widow-orphan;
  font-size:9.0pt;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
  {mso-style-priority:99;
  mso-style-qformat:yes;
  margin:0pt;
  mso-pagination:widow-orphan;
  tab-stops:center 3.25in right 6.5in;
  font-size:9.0pt;}

p.MsoCaption, li.MsoCaption, div.MsoCaption,span.MsoCaption
 {font-size:9.0pt !important;
  color:#44546A !important;
  font-style:italic !important;
  font-family:'Helvetica',sans-serif !important;
  page-break-inside:avoid !important;
/*  font-weight:bold;*/
  margin:0;
}
p.MsoTitle, li.MsoTitle, div.MsoTitle
  {mso-style-priority:10;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:0pt;
  line-height:normal;
  mso-add-space:auto;
  mso-pagination:widow-orphan;
  font-size:40.0pt;
  color:#4F81BD;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
  {mso-style-priority:11;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  line-height:normal;
  margin:0pt 0pt 3pt 0pt;
  mso-pagination:widow-orphan;
  font-size:12.0pt;}
a:link, span.MsoHyperlink, span.CrossRefLink
  {mso-style-priority:99;
  color:#0563C1;
  mso-themecolor:hyperlink;
  text-decoration:underline;
  text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
  {mso-style-noshow:yes;
  mso-style-priority:99;
  color:#954F72;
  mso-themecolor:followedhyperlink;
  text-decoration:underline;
  text-underline:single;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
  {mso-style-priority:34;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin:0pt;
  mso-add-space:auto;
  mso-pagination:widow-orphan;
  font-size:"${primaryFontSize}";}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
  {mso-style-priority:39;
  mso-style-qformat:yes;
  mso-style-parent:"Heading 1";
  mso-style-next:Normal;
  margin:0pt;
  text-align:center;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  font-size:16.0pt;}
p.TableHeader, li.TableHeader, div.TableHeader
  {mso-style-name:"Table Header";
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin:0pt;
  mso-pagination:widow-orphan;
  font-size:"${primaryFontSize}";
  font-weight:bold;}
td, p.TableCell, li.TableCell, div.TableCell
  {mso-style-name:"Table Cell";
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin:0pt;
  mso-pagination:widow-orphan;
  font-size:${tableCellFontSize};}
ol
  {margin:0pt;
  padding:0pt;
  text-align:left;}
ul
  {margin:0pt;
  padding:0pt;
  text-align:left;}
li
  {margin:0pt;
  padding:0pt;
  text-align:left;}

 /* Table of... List Definitions */
@list l0
  {mso-list-id:1764108000;
  mso-list-template-ids:1094757160;}
@list l0:level1
  {mso-level-style-link:"Heading 1";
  mso-level-text:%1;
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.3in;
  text-indent:-.3in;}
@list l0:level2
  {mso-level-style-link:"Heading 2";
  mso-level-text:"%1\.%2";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.4in;
  text-indent:-.4in;}
@list l0:level3
  {mso-level-style-link:"Heading 3";
  mso-level-text:"%1\.%2\.%3";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.5in;
  text-indent:-.5in;}
@list l0:level4
  {mso-level-style-link:"Heading 4";
  mso-level-text:"%1\.%2\.%3\.%4";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.6in;
  text-indent:-.6in;}
@list l0:level5
  {mso-level-style-link:"Heading 5";
  mso-level-text:"%1\.%2\.%3\.%4\.%5";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.7in;
  text-indent:-.7in;}
@list l0:level6
  {mso-level-style-link:"Heading 6";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.8in;
  text-indent:-.8in;}
@list l0:level7
  {mso-level-style-link:"Heading 7";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.9in;
  text-indent:-.9in;}
@list l0:level8
  {mso-level-style-link:"Heading 8";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:1.0in;
  text-indent:-1.0in;}
@list l0:level9
  {mso-level-style-link:"Heading 9";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8\.%9";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:1.1in;
  text-indent:-1.1in;}

/********************************************************************************************************
		3.2 WORD_PAGE_DEFINITIONS_STYLE_SHEET
********************************************************************************************************/

/* Normal Page Definition */
/*
@page
  {mso-footnote-separator:url("WordTemplate.fld/header.htm") fs;
  mso-footnote-continuation-separator:url("WordTemplate.fld/header.htm") fcs;
  mso-endnote-separator:url("WordTemplate.fld/header.htm") es;
  mso-endnote-continuation-separator:url("WordTemplate.fld/header.htm") ecs;}
@page WordSectionPortrait
  {size:8.5in 11.0in;
  margin:1.0in 1.0in 1.0in 1.0in;
  mso-header-margin:.5in;
  mso-footer-margin:.5in;
  mso-title-page:yes;
  mso-header:url("WordTemplate.fld/header.htm") pageHeader;
  mso-footer:url("WordTemplate.fld/header.htm") pageFooter;
  mso-first-header:url("WordTemplate.fld/header.htm") titlepageheader;
  mso-first-footer:url("WordTemplate.fld/header.htm") titlepagefooter;
  mso-paper-source:0;}
*/
/* Header Import Bug Workaround Page Definition */
@page
  {mso-footnote-separator: fs;
  mso-footnote-continuation-separator: fcs;
  mso-endnote-separator: es;
  mso-endnote-continuation-separator: ecs;}
@page WordSectionPortrait
  {size:8.5in 11.0in;
  margin:.5in .5in .5in .5in;
  mso-header-margin:.5in;
  mso-footer-margin:.5in;
  mso-title-page:no;
  mso-header: pageHeader;
  mso-footer: pageFooter;
/*  mso-first-header: titlepageHeader;
  mso-first-footer: titlepageFooter;*/
  mso-paper-source:0;}
div.WordSectionPortrait
  {page:WordSectionPortrait;}
@page WordSectionLandscape
  {size:11.0in 8.5in;
  mso-page-orientation:landscape;
  margin:.5in .5in .5in .5in;
  mso-header-margin:.5in;
  mso-footer-margin:.5in;
  mso-title-page:no;
  mso-header: pageHeader;
  mso-footer: pageFooter;
 /* mso-first-header: titlepageHeader;
  mso-first-footer: titlepageFooter;*/
  mso-paper-source:0;}
div.WordSectionLandscape
  {page:WordSectionLandscape;}


/********************************************************************************************************
		3.3 WORD_TABLE_STYLE_SHEET
********************************************************************************************************/
table 
  {margin-top:2pt;
  border-collapse: collapse;
  table-layout: fixed;}
th, td
  {padding-left: 2pt;
  padding-right: 2pt;
  text-align:left;
  overflow-wrap:break-word; /*normal | anywhere | break-word | initial | inherit */ 
  white-space:normal !important; 
  font-size:${tableCellFontSize}}
 th
  {background:$tableHeaderBackgroundColor;}
 table.MsoNormalTable
  {mso-style-name:"Table Normal";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-noshow:yes;
  mso-style-priority:99;
  mso-style-parent:"";
  border-collapse:collapse;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-para-margin:0in;
  mso-pagination:widow-orphan;
  font-size:${tableCellFontSize};
  font-family:"${primaryFont}",sans-serif;}
table.MsoTableGrid
  {mso-style-name:"Table Grid";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-priority:39;
  mso-style-unhide:no;
  border:solid $tableBorderColor 1.0pt;
  border-collapse:collapse;
  mso-border-alt:solid $tableBorderColor .5pt;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-border-insideh:.5pt solid $tableBorderColor;
  mso-border-insidev:.5pt solid $tableBorderColor;
  mso-para-margin:0in;
  mso-pagination:widow-orphan;
  font-size:${tableCellFontSize};
  mso-bidi-font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;}
table.TableGridwithHeader
  {table-layout:fixed;
  mso-table-layout-alt:fixed;
  border-collapse:collapse;
  border:none;
  mso-style-name:"Table Grid with Header";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-priority:99;
  mso-style-unhide:no;
  mso-style-parent:"Table Grid";
  border:solid $tableBorderColor 1.0pt;
  mso-border-alt:solid $tableBorderColor .5pt;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-border-insideh:.5pt solid $tableBorderColor;
  mso-border-insidev:.5pt solid $tableBorderColor;
  mso-para-margin:0in;
  mso-pagination:widow-orphan;
  font-size:${tableCellFontSize};
  font-family:"${primaryFont}",sans-serif;}
th.TableHeader
  {border:solid $tableBorderColor .5pt;}
td.TableCell
  {border:solid $tableBorderColor .5pt;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext=3D"edit">
  <o:idmap v:ext=3D"edit" data=3D"1"/>
 </o:shapelayout></xml><![endif]-->

#else ## pdf ##
#########################################################################################################################
##
##  4. PDF_HTML_HEAD
##
#########################################################################################################################
## If the PDF report has remote access fonts, include via a <link> here. Example:
## <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Math&display=swap" rel="stylesheet">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap" rel="stylesheet">


#########################################################################################################################
##
##  4.1 PDF_STYLE_SHEET
##  
##  iText PDF has 14 standard fonts which can be referenced in the CSS/HTML without an external link: 
##  
##  Courier, Courier-Bold, Courier-Bold Oblique, Courier-Oblique, Helvetica, Helvetica-Bold, Helvetica-Bold Oblique,  
##  Helvetica-Oblique, Times-Roman, Times-Bold,Times-BoldItalic, Times-Italic, Symbol, ZapfDingbats
##  
##  If the client has a typeface that is locally accessible to them, it can be included using @font-face. 
##  Make sure to place within the style tags below, Example:
##  @font-face {
##		font-family: 'rakkasregular';
##		src: url('/Users/krichards/Desktop/Rakkas/Rakkas-Regular.ttf') format('ttf'),
##		url('/Users/krichards/Desktop/Rakkas/Rakkas-Regular.ttf') format('ttf');
##		font-weight: normal;
##		font-style: normal;}  
##
#########################################################################################################################


<style>

/* Style Definitions */

* { 
  line-height:130%;
  font-size:${primaryFontSize};
  font-family:"${primaryFont}",sans-serif;
}

body {margin:auto;
counter-reset: figCapCounter tableCapCounter;} 

/* Font Styles- Note: The PDF ToC will include any content within h1-h6 tags */
p, p.MsoNormal 
{margin:0;
font-weight:400;}
p.error
{margin-bottom:.0001pt;
color:red;}
h1
{margin:12pt 0pt 3pt .3in;
text-indent:-.3in;
page-break-after:avoid;
page-break-inside:avoid;
font-size:${h1FontSize};
color:#2F5496;
font-weight:normal;}
h2 
{margin:6pt 0pt 3pt .4in;
text-indent:-.4in;
font-size:${h2FontSize};
page-break-after:avoid;
page-break-inside:avoid;
color:#2F5496;
font-weight:normal;}
h3 
{margin:6pt 0pt 3pt .5in;
text-indent:-.5in;
font-size:${h3FontSize};
page-break-after:avoid;
page-break-inside:avoid;
color:#1F3763;
font-weight:normal;}
h4 
{margin:6pt 0pt 3pt .6in;
text-indent:-.6in;
font-size:${h4FontSize};
font-style:italic;
page-break-after:avoid;
page-break-inside:avoid;
color:#2F5496;
font-weight:normal;}
h5 
{margin:6pt 0pt 3pt .7in;
text-indent:-.7in;
font-size:${h5FontSize};
page-break-after:avoid;
page-break-inside:avoid;
color:#2F5496;
font-weight:normal;}
h6 
{margin:6pt 0pt 3pt .8in;
text-indent:-.8in;
font-size:${h6FontSize};
page-break-after:avoid;
page-break-inside:avoid;
color:#1F3763;
font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
{margin:6pt 0pt 3pt .8in;
text-indent:-.8in;
page-break-after:avoid;
font-size:12.0pt;
color:#1F3763;
font-weight:normal;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
{margin:0pt;
font-size:40.0pt;
color:#4F81BD;
line-height:99%;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
{margin-top:0pt 0pt 3pt 0pt;
font-size:12.0pt;
line-height:75%;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
{ margin:0pt;
  font-size:10.0pt;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
{ margin:0pt;
  font-size:10.0pt;}
p.TableHeader, li.TableHeader, div.TableHeader
{margin:0pt;
font-weight:bold;}
p.TableCell, li.TableCell, div.TableCell
{font-size:10pt;
margin:0pt;}
p.ListParagraph, li.ListParagraph, div.ListParagraph
{margin:0pt;}
ol
{margin:0pt;}
ul
{margin:0pt;}
li
{margin:0pt;}
a:link, span.CrossRefLink
{color:#0563C1;
text-decoration:underline;
text-underline:single;}
a:visited
{color:#954F72;
text-decoration:underline;
text-underline:single;}

span {line-height:normal;}
/*Superscript and Subscript */
sub, sup {font-size:7pt;}

/* Images */ 

figure {padding:0;
margin:0;}

img {
max-height:100%;
max-width:100%;
padding:0;
margin:0;
object-fit:contain;
}

.MsoCaption, figcaption, caption 
{font-size:9.0pt;
color:#44546A;
font-style:italic;
page-break-inside:avoid;
margin:0;
line-height:180%;
/*font-weight:bold;*/
}

figcaption {margin-top:0pt;}

caption {margin-top:6pt;}



/********************************************************************************************************

    4.1.1 PDF_TABLE_OF_STYLE_SHEET 

The TOC, TOT, and TOF can be selected at the time of report installation, 
and will automatically generate to the report, considering these circumstances: 

    o The TOC will include any content with hierarchy of 1-6 (formatted in h1-h6 tags).
    o The TOF will include Figures if they have a figcaption in Jama. 
    o The ToT will include Tables if they have a caption in Jama. 

Use the following Jama Connect classes to style the ToC, ToF, and ToT and trail the CSS property value with !important; 
https://jamaservice.atlassian.net/wiki/spaces/EN/pages/1714126862/iText+Table+of...+Styling
********************************************************************************************************/
/*
.table-of-reference-page-break {
page-break-before: always;
} To overide page-break-before: avoid!important;
*/

.table-of-reference-title {
  font-size:16.0pt !important;
  font-weight:normal !important;
}

.TOC_table-of-contents-item-level1 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:11.5pt !important;
  font-style:italic !important;
  font-weight: 700 !important;
  width: 90% !important;
}

.TOC_table-of-contents-item-level2 {
  font-family:"${primaryFont}",sans-serif !important;
  width: 90% !important;
  font-size:11pt !important;
  font-weight: 700 !important;
}

.TOC_table-of-contents-item-level3 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10.5pt !important;
  width: 90% !important;
}

.TOC_table-of-contents-item-level4 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10pt !important;
  width: 90% !important;
}

.TOC_table-of-contents-item-level5 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10pt !important;
  width: 90% !important;
}

.TOC_table-of-contents-item-level6 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10pt !important;
  width: 90% !important;
}

.TOC_table-of-contents-item-level7 {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10pt !important;
  width: 90% !important;
}

.TOT_table-of-tables-item,
.TOF_table-of-figures-item {
  font-family:"${primaryFont}",sans-serif !important;
  font-size:10pt !important;
  padding: 0 !important!;
  overflow:hidden !important;
  width:90% !important;
}


/********************************************************************************************************
    
    3.1.1.1 PDF_COUNTERS_STYLE_SHEET
  
********************************************************************************************************/

/* Report Body Counter */

div.reportBodyCounterContainer {counter-reset:h1Report h2Report h3Report h4Report h5Report h6Report h7Report;}

h1 {counter-increment: h1Report;
	counter-reset:h2Report h3Report h4Report h5Report h6Report h7Report;}

h2 {counter-increment:h2Report;
	counter-reset:h3Report h4Report h5Report h6Report h7Report;}

h3 {counter-increment: h3Report;
   counter-reset:h4Report h5Report h6Report h7Report;}

h4 {counter-increment: h4Report;
   counter-reset:h5Report h6Report h7Report;}

h5 {counter-increment:h5Report;
   counter-reset:h6Report h7Report;}

h6 {counter-increment: h6Report;
   counter-reset:h7Report;}

.MsoHeading7{counter-increment: h7Report;}

h1::before 
  {content: counter( h1Report ) "\0000a0";}
h2::before 
  {content: counter( h1Report) "." counter(h2Report) "\0000a0";}
h3::before 
  {content: counter( h1Report) "." counter(h2Report) "." counter(h3Report) "\0000a0";}
h4::before 
  {content: counter( h1Report) "." counter(h2Report) "." counter(h3Report) "." counter(h4Report) "\0000a0";}
h5::before
  {content: counter(h1Report) "." counter(h2Report) "." counter(h3Report) "." counter(h4Report) "." counter(h5Report) "\0000a0";}
h6::before
  {content: counter(h1Report) "." counter(h2Report) "." counter(h3Report) "." counter(h4Report) "." counter(h5Report) "." counter(h6Report) "\0000a0";}
.MsoHeading7::before
  {content: counter(h1Report) "." counter(h2Report) "." counter(h3Report) "." counter(h4Report) "." counter(h5Report) "." counter(h6Report) "." counter(h7Report) "\0000a0";}


/* Report Body Counter for Figures (counter-reset on the body) */

figcaption::before {
  counter-increment: figCapCounter;
  content: "Figure" "\0000a0" counter(figCapCounter) "\0000a0";
}


/* Report Body Counter For Tables  (counter-reset on the body) */

caption::before {
  counter-increment: tableCapCounter;
  content:"Table" "\0000a0" counter(tableCapCounter) "\0000a0";
}


/* Table of Contents 7 levels of counters */

.tocCounterContainer {
  counter-reset: h1toc h2toc h3toc h4toc h5toc h6toc h7toc; 
}


.TOC_table-of-contents-item-level1-forCount { 
  counter-reset: h2toc h3toc h4toc h5toc h6toc h7toc;
  counter-increment: h1toc;
}
.TOC_table-of-contents-item-level1::before {
  content: counter(h1toc) "\0000a0";
}


.TOC_table-of-contents-item-level2-forCount {
  counter-reset: h3toc h4toc h5toc h6toc h7toc;
  counter-increment: h2toc;
}
.TOC_table-of-contents-item-level2::before {
  content: counter(h1toc) "." counter(h2toc) "\0000a0";
}


.TOC_table-of-contents-item-level3-forCount {
  counter-reset: h4toc h5toc h6toc h7toc;
  counter-increment: h3toc;
}
.TOC_table-of-contents-item-level3::before {
  content: counter(h1toc) "." counter(h2toc) "." counter(h3toc) "\0000a0";
}


.TOC_table-of-contents-item-level4-forCount {
  counter-reset: h5toc h6toc h7toc;
  counter-increment: h4toc;
}
.TOC_table-of-contents-item-level4::before {
  content: counter(h1toc) "." counter(h2toc) "." counter(h3toc) "." counter(h4toc) "\0000a0";
}


.TOC_table-of-contents-item-level5-forCount {
  counter-reset: h6toc h7toc;
  counter-increment: h5toc;
}
.TOC_table-of-contents-item-level5::before {
  content: counter(h1toc) "." counter(h2toc) "." counter(h3toc) "." counter(h4toc) "." counter(h5toc) "\0000a0";
}


.TOC_table-of-contents-item-level6-forCount {
  counter-reset: h7toc;
  counter-increment: h6toc;
}
.TOC_table-of-contents-item-level6::before {
  content: counter(h1toc) "." counter(h2toc) "." counter(h3toc) "." counter(h4toc) "." counter(h5toc) "." counter(h6toc) "\0000a0";
}


.TOC_table-of-contents-item-level7-forCount {
  counter-increment: h7toc;
}
.TOC_table-of-contents-item-level7::before {
  content: counter(h1toc) "." counter(h2toc) "." counter(h3toc) "." counter(h4toc) "." counter(h5toc) "." counter(h6toc) "." counter(h7toc) "\0000a0";
}


/* Table of Figures Counter */

div.tofCounterContainer {
  counter-reset:tableOfFigures;
}

.TOF_table-of-figures-item::before 
  {counter-increment: tableOfFigures;
  content: "Figure" "\0000a0" counter(tableOfFigures) "\0000a0"; 
} 


/* Table of Tables Counter */

div.totCounterContainer {
  counter-reset:tableOfTables;
}

.TOT_table-of-tables-item::before 
  {counter-increment: tableOfTables;
  content: "Table" "\0000a0" counter(tableOfTables) "\0000a0"; 
} 


/********************************************************************************************************
    
    4.1.2 PDF_PAGE_DEFINITIONS_STYLE_SHEET

********************************************************************************************************/

@page {  
  size:11.0in 8.5in;  /* Specify page size/orientation, i.e. size: "Landscape"; or size: "A4"; etc. */
  margin: .5in .5in .5in .5in; /* set margins to preference */
  @top-center 
  {content: element(pageHeader)}
  @bottom-center 
  {content: element(pageFooter)}
}
  /* If no diff first page header/footer change to match what you have named pageHeader/pageFooter 
  or comment-out the "@page :first..." block */
/*
@page :first {     
  margin: 1.0in 1.0in 1.5in 1.0in;
  @top-center 
  {content: element(titlepageHeader)} 
  @bottom-center 
  {content: element(titlepageFooter)}
}*/
#pageNumber::after {
    content: counter(page)
}
#totalPages::after {
    content: counter(pages)
}

/* apply margin for the header/footer to the container div.<header/footerClass> */
div.titlepageHeader {
  display: block;
  text-align: center;
  position: running(titlepageHeader);
 }
div.titlepageFooter {
  display: block;
  text-align: center;
  position: running(titlepageFooter);
}
div.pageHeader {
  display: block;
  text-align: center;
  position: running(pageHeader);
}
div.pageFooter {
  display: block;
  text-align: center;
  position: running(pageFooter);
}
/* To center a table vertically and horizontally use margin:auto; */
.pageHeader-table,
.pageFooter-table {
  margin:auto; 
  border:none;
  width:100%;
  height:100%;
}
/********************************************************************************************************
    4.1.3 PDF_TABLE_STYLE_SHEET
********************************************************************************************************/
table 
  {margin-top:2pt;
  border-collapse:collapse;
  table-layout:fixed;}
th, td
  {padding:3pt 3pt 3pt 3pt;
  text-align:left;
  overflow-wrap:break-word; /*normal | anywhere | break-word | initial | inherit */ 
  white-space:normal !important; 
  font-size:${tableCellFontSize};
line-height:150%;} 
th
  {background:$tableHeaderBackgroundColor;}
table.MsoNormalTable
  {padding:0in 5.4pt 0in 5.4pt;
  margin:0in;
  font-size:${tableCellFontSize};}
table.MsoTableGrid
  {border:solid $tableBorderColor 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;
  font-size:${tableCellFontSize};}
table.TableGridwithHeader
  {table-layout:fixed;
  border:solid $tableBorderColor 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;
  margin:0in;
  font-size:${tableCellFontSize};}
th.TableHeader
  {border:solid $tableBorderColor .5pt;}
td.TableCell
  {border:solid $tableBorderColor .5pt;}

</style>


#end ##if( $format == "doc")...#else(pdf or possibly html)...## 


</head>
#########################################################################################################################
##
##  5. MACROS
##
#########################################################################################################################
##
#########################################################################################################################
##
##  5.1 STANDARD_MACROS
#########################################################################################################################
#########################################################################################################################
##          Macro: getReferenceableDocIds
##          Input: documentList
##          Output: getReferenceableDocIds - list of all the doc IDs that will be referenceable in the document
#########################################################################################################################
#macro( getReferenceableDocIds ) 
  #set( $referenceableDocIds = [] )
  #foreach( $vDoc in $documentList )
    #set( $doc = $vDoc.document )
    #if($baselineMode)
      #set( $success = $referenceableDocIds.add($doc.currentVersion.id) )
    #else
      #set( $success = $referenceableDocIds.add($doc.id) )
    #end
  #end
#end
#########################################################################################################################
##          Macro: convertEquals
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( convertEquals $inString )
#set( $string = $inString )
#set( $string = $string.replaceAll("=", "=3D"))
$string
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getDate
##          Input: Java Time Zone ID to determine which timezone to display the date in
##          Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDate $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  #set( $date = $dateTool.format( 'yyyy/MM/dd', $inputDate, $locale, $outTz ))
  $!date
#end
#########################################################################################################################
##          Macro: getDateTime
##          Input: Java Time Zone ID to determine which timezone to display the date in
##          Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDateTime $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  ## noted customized formatting to yyyy/mm/dd considering ISO international format
  #set( $dateTime = $dateTool.format( 'yyyy/MM/dd hh:mm a z', $inputDate, $locale, $outTz ))
  $!dateTime
#end
#########################################################################################################################
##          Macro: getHierarchyLevel
##          Input: $doc - document object
##                 $baselineMode - true: export was from a baseline, false: export was from the project
##                 $baselineId   - ID of the baseline that the items are part of, if in baseline mode
##          Output: $hierarchyLevel - number, which heading level this item is in Jama relative to the container
#########################################################################################################################
#macro( getHierarchyLevel $doc $baselineMode $baselineId )
  #set( $seqSubStrings = [] )
  #set( $hierarchyLevel = 1)
  ## Get hierarchy from the baseline
  #if( $baselineMode )
    #set( $docNode = $documentNodeDao.getDocumentNodeForBaseLine(5, $mathTool.toInteger($doc.id), $mathTool.toInteger($baselineId)))
  ## Get hierarchy from the project
  #else
    #set( $docNode = $documentNodeDao.getDocumentNode(5, $doc.id))
  #end
  ##Debug: $docNode
  #if(!$docNode.indent)
    #set( $hierarchyLevel = 1)
  #else
    #set( $hierarchyLevel = $docNode.indent)
  #end

  #if( !$hierarchyLevelTop )
    #set($hierarchyLevelTop = $hierarchyLevel)
  #end
  #set($hierarchyLevel = $hierarchyLevel - $hierarchyLevelTop + 1)
#end
#########################################################################################################################
##          Macro: getStatus
##          Input: $doc - document object
##          Output: $docStatus - status of the item
#########################################################################################################################
#macro( getStatus $doc )
  #set( $docStatus = false )
  #foreach( $docTypeField in $doc.documentType.documentTypeFields )
    #if( $docTypeField.documentField.name == "status" )
      #set ( $docStatus = $doc.status.name )
      #break
    #end
  #end
#end
#########################################################################################################################
##                         Macro: Returns a source string from a description                                         ###
##                          @sText - string: string you searching                                                     ###
##                          @return - array: an array of image sources (url)                                          ###
#########################################################################################################################
#macro( findSourceMHTML $sText )
  #set( $findSourceMHTMLReturn = [])
  #set( $lastImageIndex = $sText.lastIndexOf("<img"))  ##>             
  #set( $startCheck = $sText.indexOf("<img")) ##>  
  #foreach( $x in [$startCheck..$lastImageIndex])
    #if( $x == $sText.indexOf( "<img", $x))  ##>
      #set($end = $sText.indexOf(">", $mathTool.toInteger($x)))
      #set($imgString = ( $sText.substring( $mathTool.toInteger($x), $mathTool.toInteger($end))))
      #### Debug: $imgString
      #set($imgStringCaseMod = $imgString.toLowerCase())

      #set($srcStart = $imgStringCaseMod.indexOf("src="))
      #if($imgStringCaseMod.contains('src="'))
        #set($srcStart = $srcStart + 5)
      #else
        #set($srcStart = $srcStart + 4)
      #end

      #if($imgStringCaseMod.contains(".png"))
        #set( $srcEnd = $imgStringCaseMod.indexOf('.png', $srcStart))
      #elseif($imgStringCaseMod.contains(".jpg"))
        #set( $srcEnd = $imgStringCaseMod.indexOf('.jpg', $srcStart))
      #elseif($imgStringCaseMod.contains(".jpeg"))
        #set( $srcEnd = $imgStringCaseMod.indexOf('.jpeg', $srcStart))
      #elseif($imgStringCaseMod.contains(".svg"))
        #set( $srcEnd = $imgStringCaseMod.indexOf('.svg', $srcStart))
      #end
      
      #if($imgStringCaseMod.contains(".jpeg"))
        #set( $srcEnd = $srcEnd + 5)
      #else
        #set( $srcEnd = $srcEnd + 4)
      #end

      #if( $srcStart < $srcEnd )
	      #set($imgSrc = $imgString.substring( $srcStart, $srcEnd ))
	      #set($imgSrc = $imgSrc.replaceAll("\?dpi.*$", ""))

	      #if($imgString.indexOf( $baseUrl) > -1 && $imgString.indexOf( "blob:http") == -1)
	        #set( $success = $findSourceMHTMLReturn.add( $imgSrc))
	      #end
	  #end 
    #end
  #end
#end
#########################################################################################################################
##                     Macro: Returns a source with a new cid and appends the base64 image to the end of the file    ###
##                      @sText - array: string of source                                                              ###
##                      @return - array: returns an array of strings of the new image src                             ###
#########################################################################################################################
#macro( imageArrayMTHML $sText )      
  #set( $imageArrayMHTMLReturn = [])
  #set( $imageSizeArrayMHTMLReturn = [])
  #set( $imageBase64ArrayHTMLReturn = [])
  ## Define a figure array if none exists (first image in the doc)
  #if( !$figure ) #set( $figure = [] ) #end
  ## Define a files array if none exists (first image in the doc)
  #if( !$files ) #set( $files = [] ) #end
  ##$return.clear()
  ##set( $sourceArray = [])
  ##SText: $sText<br>
  #foreach( $s in $sText)  
  ##SOURCE: $s, BASEURL: $baseUrl<br>
    #if( $s.indexOf( $baseUrl) > -1)
      #set( $srcEnd = $s.indexOf("attachment/"))
      #if ( $srcEnd < 0 )
        #set( $srcEnd = $s.indexOf("diagram/"))
        #set( $attStart = $srcEnd + 8)
      #else
        #set( $attStart = $srcEnd + 11)
      #end
      #set( $attEnd = $s.indexOf( "/", $attStart))
      #set( $attachmentId = $s.substring( $attStart, $attEnd))
      ##Att. id: $attachmentId<br>
      ##Get file extension
      #set( $fileExtStart = $s.indexOf( ".", $attEnd))
      #set( $fileExtStart = $fileExtStart + 1)
      #set( $fileExt = $s.substring( $fileExtStart, $s.length()))
      #set( $f = "JAMA_IMG_")
      #set( $f = $f.concat($attachmentId))
      #set( $f = $f.concat("."))
      #set( $f = $f.concat($fileExt))
      #set( $file = '<o:File HRef="')
      #set( $file = $file.concat( $f))
      #set( $file = $file.concat('"/>'))
      #if( $files.add( $file)) #end
      #set( $jama_cid = $f)
      #set( $newSourceLink = "cid:")
      #set( $newSourceLink = $newSourceLink.concat( $jama_cid))
      #if( $figure.add( $boundaryString)) #end
      #set( $img_jama_cid = "Content-ID: ")
      #set( $img_jama_cid = $img_jama_cid.concat( $jama_cid))
      #if( $figure.add( $img_jama_cid)) #end
      #if( $figure.add( "Content-Transfer-Encoding: base64 ")) #end
      #set( $contentType =  "Content-Type: image/")
      #set( $contentType = $contentType.concat($fileExt))
      #if( $figure.add( $contentType)) #end
      #if( $figure.add( "")) #end
      #if($attachmentService.getBase64Image( $mathTool.toInteger( $attachmentId)))
        #set( $base64Fig = $attachmentService.getBase64Image( $mathTool.toInteger( $attachmentId)))
        #set($base64Fig = $base64Fig.trim())
      #end 

      ## if this a PNG, get the size
      #if( $base64Fig.substring(0, 16) == "iVBORw0KGgoAAAAN")
        #set( $base64ImageHeader = $base64Fig.substring(16, 32) )
        
        #set( $binaryImageHeader = "")
        #foreach( $i in [0..15] )
          #set( $j = $i + 1 )
          #set( $value = $base64ImageHeader.substring($i, $j) )
          ##$value
          #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
          #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
          #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
          #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
          #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
          #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
          #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
          #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
          #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
          #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
          #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
          #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
          #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
          #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
          #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
          #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
          #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
          #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
          #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
          #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
          #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
          #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
          #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
          #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
          #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
          #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
          #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
          #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
          #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
          #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
          #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
          #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
          #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
          #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
          #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
          #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
          #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
          #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
          #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
          #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
          #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
          #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
          #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
          #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
          #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
          #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
          #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
          #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
          #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
          #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
          #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
          #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
          #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
          #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
          #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
          #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
          #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
          #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
          #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
          #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
          #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
          #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
          #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
          #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
        #end
        ##IMAGE HEADER: $binaryImageHeader
        #set( $width = $mathTool.toInteger($binaryImageHeader.substring(32, 33)) * 2147483648 +
                       $mathTool.toInteger($binaryImageHeader.substring(33, 34)) * 1073741824 +
                       $mathTool.toInteger($binaryImageHeader.substring(34, 35)) * 536870912 +
                       $mathTool.toInteger($binaryImageHeader.substring(35, 36)) * 268435456 +
                       $mathTool.toInteger($binaryImageHeader.substring(36, 37)) * 134217728 +
                       $mathTool.toInteger($binaryImageHeader.substring(37, 38)) * 67108864 +
                       $mathTool.toInteger($binaryImageHeader.substring(38, 39)) * 33554432 +
                       $mathTool.toInteger($binaryImageHeader.substring(39, 40)) * 16777216 +
                       $mathTool.toInteger($binaryImageHeader.substring(40, 41)) * 8388608 +
                       $mathTool.toInteger($binaryImageHeader.substring(41, 42)) * 4194304 +
                       $mathTool.toInteger($binaryImageHeader.substring(42, 43)) * 2097152 +
                       $mathTool.toInteger($binaryImageHeader.substring(43, 44)) * 1048576 +
                       $mathTool.toInteger($binaryImageHeader.substring(44, 45)) * 524288 +
                       $mathTool.toInteger($binaryImageHeader.substring(45, 46)) * 262144 +
                       $mathTool.toInteger($binaryImageHeader.substring(46, 47)) * 131072 +
                       $mathTool.toInteger($binaryImageHeader.substring(47, 48)) * 65536 +
                       $mathTool.toInteger($binaryImageHeader.substring(48, 49)) * 32768 +
                       $mathTool.toInteger($binaryImageHeader.substring(49, 50)) * 16384 +
                       $mathTool.toInteger($binaryImageHeader.substring(50, 51)) * 8192 +
                       $mathTool.toInteger($binaryImageHeader.substring(51, 52)) * 4096 +
                       $mathTool.toInteger($binaryImageHeader.substring(52, 53)) * 2048 +
                       $mathTool.toInteger($binaryImageHeader.substring(53, 54)) * 1024 +
                       $mathTool.toInteger($binaryImageHeader.substring(54, 55)) * 512 +
                       $mathTool.toInteger($binaryImageHeader.substring(55, 56)) * 256 +
                       $mathTool.toInteger($binaryImageHeader.substring(56, 57)) * 128 +
                       $mathTool.toInteger($binaryImageHeader.substring(57, 58)) * 64 +
                       $mathTool.toInteger($binaryImageHeader.substring(58, 59)) * 32 +
                       $mathTool.toInteger($binaryImageHeader.substring(59, 60)) * 16 +
                       $mathTool.toInteger($binaryImageHeader.substring(60, 61)) * 8 +
                       $mathTool.toInteger($binaryImageHeader.substring(61, 62)) * 4 +
                       $mathTool.toInteger($binaryImageHeader.substring(62, 63)) * 2 +
                       $mathTool.toInteger($binaryImageHeader.substring(63, 64)) * 1 )
        #set( $height = $mathTool.toInteger($binaryImageHeader.substring(64, 65)) * 2147483648 +
                       $mathTool.toInteger($binaryImageHeader.substring(65, 66)) * 1073741824 +
                       $mathTool.toInteger($binaryImageHeader.substring(66, 67)) * 536870912 +
                       $mathTool.toInteger($binaryImageHeader.substring(67, 68)) * 268435456 +
                       $mathTool.toInteger($binaryImageHeader.substring(68, 69)) * 134217728 +
                       $mathTool.toInteger($binaryImageHeader.substring(69, 70)) * 67108864 +
                       $mathTool.toInteger($binaryImageHeader.substring(70, 71)) * 33554432 +
                       $mathTool.toInteger($binaryImageHeader.substring(71, 72)) * 16777216 +
                       $mathTool.toInteger($binaryImageHeader.substring(72, 73)) * 8388608 +
                       $mathTool.toInteger($binaryImageHeader.substring(73, 74)) * 4194304 +
                       $mathTool.toInteger($binaryImageHeader.substring(74, 75)) * 2097152 +
                       $mathTool.toInteger($binaryImageHeader.substring(75, 76)) * 1048576 +
                       $mathTool.toInteger($binaryImageHeader.substring(76, 77)) * 524288 +
                       $mathTool.toInteger($binaryImageHeader.substring(77, 78)) * 262144 +
                       $mathTool.toInteger($binaryImageHeader.substring(78, 79)) * 131072 +
                       $mathTool.toInteger($binaryImageHeader.substring(79, 80)) * 65536 +
                       $mathTool.toInteger($binaryImageHeader.substring(80, 81)) * 32768 +
                       $mathTool.toInteger($binaryImageHeader.substring(81, 82)) * 16384 +
                       $mathTool.toInteger($binaryImageHeader.substring(82, 83)) * 8192 +
                       $mathTool.toInteger($binaryImageHeader.substring(83, 84)) * 4096 +
                       $mathTool.toInteger($binaryImageHeader.substring(84, 85)) * 2048 +
                       $mathTool.toInteger($binaryImageHeader.substring(85, 86)) * 1024 +
                       $mathTool.toInteger($binaryImageHeader.substring(86, 87)) * 512 +
                       $mathTool.toInteger($binaryImageHeader.substring(87, 88)) * 256 +
                       $mathTool.toInteger($binaryImageHeader.substring(88, 89)) * 128 +
                       $mathTool.toInteger($binaryImageHeader.substring(89, 90)) * 64 +
                       $mathTool.toInteger($binaryImageHeader.substring(90, 91)) * 32 +
                       $mathTool.toInteger($binaryImageHeader.substring(91, 92)) * 16 +
                       $mathTool.toInteger($binaryImageHeader.substring(92, 93)) * 8 +
                       $mathTool.toInteger($binaryImageHeader.substring(93, 94)) * 4 +
                       $mathTool.toInteger($binaryImageHeader.substring(94, 95)) * 2 +
                       $mathTool.toInteger($binaryImageHeader.substring(95, 96)) * 1 )
        #if( $imageSizeArrayMHTMLReturn.add( {"width":$width, "height":$height}) ) #end
      #elseif( $fileExt == "svg" || $fileExt == "SVG" )
        #set( $binaryImageHeader = "")
        
        #foreach( $i in [0..2000] )
          #set( $j = $i + 1 )
          #if($i < $base64Fig.length())
            #set( $value = $base64Fig.substring($i, $j) )
            ##$value
            #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
            #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
            #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
            #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
            #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
            #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
            #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
            #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
            #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
            #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
            #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
            #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
            #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
            #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
            #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
            #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
            #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
            #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
            #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
            #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
            #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
            #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
            #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
            #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
            #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
            #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
            #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
            #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
            #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
            #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
            #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
            #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
            #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
            #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
            #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
            #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
            #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
            #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
            #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
            #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
            #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
            #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
            #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
            #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
            #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
            #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
            #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
            #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
            #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
            #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
            #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
            #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
            #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
            #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
            #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
            #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
            #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
            #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
            #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
            #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
            #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
            #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
            #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
            #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
          #end
        #end
        ##IMAGE HEADER: $binaryImageHeader
        #set( $byteCount = $binaryImageHeader.length() / 8 -  1 )
        #set( $ascii = "" )
        #foreach( $byte in [0..$byteCount] )
          #set( $i = $byte * 8)
          #set( $j = $i + 8 )
          #set( $value = $binaryImageHeader.substring($i, $j) )
          #if( $value == "00100000") #set($ascii = "${ascii} ")
          #elseif( $value == "00100001") #set($ascii = "${ascii}!")
          #elseif( $value == "00100010") #set($ascii = "${ascii}$escapeTool.getQuote()")
          #elseif( $value == "00100011") #set($ascii = "${ascii}#")
          #elseif( $value == "00100100") #set($ascii = "${ascii}$")
          #elseif( $value == "00100101") #set($ascii = "${ascii}%")
          #elseif( $value == "00100110") #set($ascii = "${ascii}&")
          #elseif( $value == "00100111") #set($ascii = "${ascii}'")
          #elseif( $value == "00101000") #set($ascii = "${ascii}(")
          #elseif( $value == "00101001") #set($ascii = "${ascii})")
          #elseif( $value == "00101010") #set($ascii = "${ascii}*")
          #elseif( $value == "00101011") #set($ascii = "${ascii}+")
          #elseif( $value == "00101100") #set($ascii = "${ascii},")
          #elseif( $value == "00101101") #set($ascii = "${ascii}-")
          #elseif( $value == "00101110") #set($ascii = "${ascii}.")
          #elseif( $value == "00101111") #set($ascii = "${ascii}/")
          #elseif( $value == "00110000") #set($ascii = "${ascii}0")
          #elseif( $value == "00110001") #set($ascii = "${ascii}1")
          #elseif( $value == "00110010") #set($ascii = "${ascii}2")
          #elseif( $value == "00110011") #set($ascii = "${ascii}3")
          #elseif( $value == "00110100") #set($ascii = "${ascii}4")
          #elseif( $value == "00110101") #set($ascii = "${ascii}5")
          #elseif( $value == "00110110") #set($ascii = "${ascii}6")
          #elseif( $value == "00110111") #set($ascii = "${ascii}7")
          #elseif( $value == "00111000") #set($ascii = "${ascii}8")
          #elseif( $value == "00111001") #set($ascii = "${ascii}9")
          #elseif( $value == "00111010") #set($ascii = "${ascii}:")
          #elseif( $value == "00111011") #set($ascii = "${ascii};")
          #elseif( $value == "00111100") #set($ascii = "${ascii}<")
          #elseif( $value == "00111101") #set($ascii = "${ascii}=")
          #elseif( $value == "00111110") #set($ascii = "${ascii}>")
          #elseif( $value == "00111111") #set($ascii = "${ascii}?")
          #elseif( $value == "01000000") #set($ascii = "${ascii}@")
          #elseif( $value == "01000001") #set($ascii = "${ascii}A")
          #elseif( $value == "01000010") #set($ascii = "${ascii}B")
          #elseif( $value == "01000011") #set($ascii = "${ascii}C")
          #elseif( $value == "01000100") #set($ascii = "${ascii}D")
          #elseif( $value == "01000101") #set($ascii = "${ascii}E")
          #elseif( $value == "01000110") #set($ascii = "${ascii}F")
          #elseif( $value == "01000111") #set($ascii = "${ascii}G")
          #elseif( $value == "01001000") #set($ascii = "${ascii}H")
          #elseif( $value == "01001001") #set($ascii = "${ascii}I")
          #elseif( $value == "01001010") #set($ascii = "${ascii}J")
          #elseif( $value == "01001011") #set($ascii = "${ascii}K")
          #elseif( $value == "01001100") #set($ascii = "${ascii}L")
          #elseif( $value == "01001101") #set($ascii = "${ascii}M")
          #elseif( $value == "01001110") #set($ascii = "${ascii}N")
          #elseif( $value == "01001111") #set($ascii = "${ascii}O")
          #elseif( $value == "01010000") #set($ascii = "${ascii}P")
          #elseif( $value == "01010001") #set($ascii = "${ascii}Q")
          #elseif( $value == "01010010") #set($ascii = "${ascii}R")
          #elseif( $value == "01010011") #set($ascii = "${ascii}S")
          #elseif( $value == "01010100") #set($ascii = "${ascii}T")
          #elseif( $value == "01010101") #set($ascii = "${ascii}U")
          #elseif( $value == "01010110") #set($ascii = "${ascii}V")
          #elseif( $value == "01010111") #set($ascii = "${ascii}W")
          #elseif( $value == "01011000") #set($ascii = "${ascii}X")
          #elseif( $value == "01011001") #set($ascii = "${ascii}Y")
          #elseif( $value == "01011010") #set($ascii = "${ascii}Z")
          #elseif( $value == "01011011") #set($ascii = "${ascii}[")
          #elseif( $value == "01011100") #set($ascii = "${ascii}$escapeTool.getBackslash()")
          #elseif( $value == "01011101") #set($ascii = "${ascii}]")
          #elseif( $value == "01011110") #set($ascii = "${ascii}^")
          #elseif( $value == "01011111") #set($ascii = "${ascii}_")
          #elseif( $value == "01100000") #set($ascii = "${ascii}`")
          #elseif( $value == "01100001") #set($ascii = "${ascii}a")
          #elseif( $value == "01100010") #set($ascii = "${ascii}b")
          #elseif( $value == "01100011") #set($ascii = "${ascii}c")
          #elseif( $value == "01100100") #set($ascii = "${ascii}d")
          #elseif( $value == "01100101") #set($ascii = "${ascii}e")
          #elseif( $value == "01100110") #set($ascii = "${ascii}f")
          #elseif( $value == "01100111") #set($ascii = "${ascii}g")
          #elseif( $value == "01101000") #set($ascii = "${ascii}h")
          #elseif( $value == "01101001") #set($ascii = "${ascii}i")
          #elseif( $value == "01101010") #set($ascii = "${ascii}j")
          #elseif( $value == "01101011") #set($ascii = "${ascii}k")
          #elseif( $value == "01101100") #set($ascii = "${ascii}l")
          #elseif( $value == "01101101") #set($ascii = "${ascii}m")
          #elseif( $value == "01101110") #set($ascii = "${ascii}n")
          #elseif( $value == "01101111") #set($ascii = "${ascii}o")
          #elseif( $value == "01110000") #set($ascii = "${ascii}p")
          #elseif( $value == "01110001") #set($ascii = "${ascii}q")
          #elseif( $value == "01110010") #set($ascii = "${ascii}r")
          #elseif( $value == "01110011") #set($ascii = "${ascii}s")
          #elseif( $value == "01110100") #set($ascii = "${ascii}t")
          #elseif( $value == "01110101") #set($ascii = "${ascii}u")
          #elseif( $value == "01110110") #set($ascii = "${ascii}v")
          #elseif( $value == "01110111") #set($ascii = "${ascii}w")
          #elseif( $value == "01111000") #set($ascii = "${ascii}x")
          #elseif( $value == "01111001") #set($ascii = "${ascii}y")
          #elseif( $value == "01111010") #set($ascii = "${ascii}z")
          #elseif( $value == "01111011") #set($ascii = "${ascii}{")
          #elseif( $value == "01111100") #set($ascii = "${ascii}|")
          #elseif( $value == "01111101") #set($ascii = "${ascii}}")
          #elseif( $value == "01111110") #set($ascii = "${ascii}~") #end
        #end
        #set( $height = $ascii.replaceAll('(?s).*?<svg.*?height="(\d*).*?".*?>','$1') )
        #set( $width = $ascii.replaceAll('(?s).*?<svg.*?width="(\d*).*?".*?>','$1') )
        #if( $imageSizeArrayMHTMLReturn.add( {"width":$width, "height":$height}) ) #end
      #else
        #if( $imageSizeArrayMHTMLReturn.add( {"width":false, "height":false}) ) #end
      #end
      #if( $figure.add( $base64Fig)) #end
      #if( $figure.add( "")) #end
      #if( $base64Fig )
        #set( $imageData = "data:image/" )
        #set( $imageData = $imageData.concat($fileExt) )
        #set( $imageData = $imageData.concat(";base64, ") )
        #set( $imageData = $imageData.concat($base64Fig) )
      #else
        #set( $imageData = "" )
      #end
      #if( $imageBase64ArrayHTMLReturn.add( $imageData)) #end
    #else ##Return the same source
      #set( $newSourceLink = "")
    #end
    #if( $imageArrayMHTMLReturn.add( $newSourceLink)) #end
  #end
#end
##                                                                                                               
#########################################################################################################################
##                  Macro: DOC format Convert Figures to Word shapes, resize and format considering img location      ###
##                         PDF format Convert Figures to base66, resize, and format considering img location          ###
##                         $input - string: string passed to the macro containing img tags                            ###
##                         $maxWidth - number: maximum allowed width of images, resize if greater                     ###
##                         Returns string with images converted to base64                                             ###
##                  Sub-macros by format:                                                                             ### 
##                        #formatEquation_DOC, #formatEquation_PDF                                                    ### 
##                        #formatImgInTable_DOC, #formatImgInTable_PDF                                                ### 
##                        #formatFigWithCaptions_DOC, #formatFigWithCaptions_PDF                                      ###         
##                        #formatImgWithOptionForCaptions_DOC, #formatImgWithOptionForCaptions_PDF (will              ###
##                        automatically include figure captions for all figures if $TOF_includeAllFigures is true     ### 
##                        so that all figures will be included in the TOF)                                            ### 
##                                                                                                                    ###
#########################################################################################################################
#macro( convertFigures $input $maxWidth )
  ## clear any previous values
  #set( $width = false )
  #set( $height = false )
  #set( $targetWidth = false )
  #set( $targetHeight = false )


  #if( !$maxPageHeight )
    #set($maxHeight = 575)
  #else
    #set($maxHeight = $maxPageHeight )
  #end

  ## Create the initial output string
  #set( $output = $input )

  ## process if there is at least one image tag in the string
  #if( $input.indexOf("<img") > -1 )

    ## Create a list of all image Urls in the string
    #findSourceMHTML( $input )
    #set( $imgUrls = $findSourceMHTMLReturn)
    #### Debug imgUrls: $imgUrls

    ## Embedded each image in the MTHML output, create a list of the sources
    ## and create a list of the image sizes for PNG images
    #imageArrayMTHML( $imgUrls )
    #set( $imgSources = $imageArrayMHTMLReturn )
    #set( $imageSizes = $imageSizeArrayMHTMLReturn )
    #set( $imageBase64s = $imageBase64ArrayHTMLReturn )

    #### Debug imgSources: $imgSources

    ## For each identified image
    ## 	- 'doc' format replace the HTML img tag with Word Shape 
    ## 	- 'pdf' format replace the HTML img tag with base64

    #foreach( $imgSource in $imgSources)
		  #set( $imgIndex = $foreach.index )

  		## if the image is not already base64 encoded
  		#if( $imgUrls.get($imgIndex).indexOf(";base64") == -1 )
  		## Locate the position of this image
  			#set( $sourcePosition = $input.indexOf($imgUrls.get($imgIndex)) )
  			#set( $inputStart = $input.lastIndexOf("<img", $sourcePosition) )
  			#set( $inputEnd = $input.indexOf(">", $sourcePosition) )
  			#if( $inputStart > -1 && $inputEnd > -1 )
			    #set( $inputImage = "" )
			    #set( $inputImage = $input.substring($inputStart, $inputEnd) )
  		
  				## Determine the size of the image stored in HTML
  				#if( $inputImage.indexOf( "height=") > -1 && $inputImage.indexOf( "width=") > -1)
  					#set($height = $inputImage.replaceAll('(?s).*?height="([0-9]*)".*','$1'))
  					#set($width = $inputImage.replaceAll('(?s).*?width="([0-9]*)".*','$1'))
  					## If no image size is found in HTML, use the image size extracted directly from the image
  					## Only works for PNGs. Non-PNGs return a height and width of false
  				#elseif( $imageSizes.size() > $imgIndex )
  					#set( $height = $imageSizes.get($imgIndex).height )
  					#set( $width = $imageSizes.get($imgIndex).width )
  				#end
  			  ##Debug: width=$width, height=$height
  			 
  			  ## if a height and width are known, resize the image appropriately
			  	#if( $height && $width )
  		  			## Adjust extracted values from px to pt to accurately compare to max page dimensions: ((1px = 1/96th of 1in) - (1pt = 1/72 of 1in))
  					#set( $widthInt = $mathTool.toNumber($width) * 0.75 )
  					#set( $heightInt = $mathTool.toNumber($height) * 0.75)
  					##<p class=MsoNormal style='margin-bottom:20pt;font-size:8pt;'>Debug: $width x $height px</p>

  					#set ($aspectRatio = 1.5)
  					#set ($aspectRatio = $mathTool.toDouble($widthInt) / $mathTool.toDouble($heightInt))
  					#### Debug Aspect Ratio: $aspectRatio
  					## if the image is higher than allowed, resize
  					#if( $heightInt > $maxHeight )
  				    #set( $targetHeight = $maxHeight)
  				    #set( $targetWidth = $mathTool.mul($mathTool.toNumber($targetHeight), $aspectRatio)) 
  				  	## if the image is still wider than allowed, resize again
  				    #if( $targetWidth > $maxWidth )
  			        #set ($targetWidth = $maxWidth)
  			        #set ($targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio))
  				    #end
  				    #if( $inputImage.contains("equation")) ## size to pixels
  						  #set( $targetWidth = $targetWidth / 0.75 )
  						  #set( $targetHeight = $targetHeight / 0.75)
  						#end
  					## if the image is wider than allowed, resize
  					#elseif( $widthInt > $maxWidth )
  				  	#set ($targetWidth = $maxWidth)
  				  	#set ($targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio))
  				    ## if the image is still higher than allowed, resize again
  				  	#if( $targetHeight > $maxHeight )
  				    	#set ($targetHeight = $maxHeight)
  				    	#set ($targetWidth = $mathTool.mul($mathTool.toNumber($targetHeight), $aspectRatio))
  				  	#end
  				  	#if( $inputImage.contains("equation")) ## size to pixels
  					    #set( $targetWidth = $targetWidth / 0.75 )
  					    #set( $targetHeight = $targetHeight / 0.75)
  					  #end
  					#else
  						#if( $inputImage.contains("equation")) 
  	  					## We avoid altering the equation by keeping its source px size to preserve its rendering.##
  							#set( $targetWidth = $mathTool.toNumber($width))
  							#set( $targetHeight = $mathTool.toNumber($height))
  						#else 
  			  			#set( $targetWidth = $widthInt )
  			  			#set( $targetHeight = $heightInt )	
  			  		#end   	
  					#end
  				#else
  					## if no height and width found set to 1/2 max expecting a 4:3 ratio
  					## PDF has auto responsive heights and therefore needs only the targetWidth, but Word shapes must have a both edge values
  					#set( $targetWidth = 234 )
  					#set( $targetHeight = 176 )
  				#end      

  				## find string for use in final replace all
  				#set( $find = "(?s)<img{^>}*?$imgUrls.get($imgIndex){^>}*?>" )
  				#set( $find = $find.replaceAll("\/", "\\/") )
  				#set( $find = $find.replaceAll("\{", "[") )
  				#set( $find = $find.replaceAll("\}", "]") )
  				
  				##Debug find: $find <br>

  		    #######################################################################################
  				## Find Img Location 
  				##             - utilize $find to determine img position in rich text to ensure proper
  				##               replacement format  
  				#######################################################################################
  				#set( $imgInTable = false )
  				#set( $imgInFigure = false)
  				#set( $isImgInTable = $input )
  				#set( $isImgInFig = $input )
  				
  				#set( $isImgInTable = $isImgInTable.replaceAll( "<td.*?>.*?$find.*?<\/td>", "[imgInTable]"))
  				
  				#if( $isImgInTable.contains("[imgInTable]"))
  					#set( $imgInTable = true )
  				#else
  					#set( $isImgInFig = $isImgInFig.replaceAll("<figure.*?>.*?$find", "[imgInFigTags]"))
  					#if( $isImgInFig.contains( "[imgInFigTags]"))
  						#set( $imgInFigure = true )   
  					#end
  				#end 
  	
  				#######################################################################################
  				## Img Alignment 
  				##             - utilize $find to locate alignment on the img and store it in $imgAlign
  				#######################################################################################
  				#set( $isThereAlignment = $input )
  				#set( $imgAlign = $input )

  				#if( $imgInFigure )
  					#set( $isThereAlignment = $isThereAlignment.replaceAll("<(figure|div).*?(text-align|float):(\w*?).*?>.*?$find", "[align]"))
  					#if( $isThereAlignment.contains("[align]"))
  						#set( $imgAlign = $imgAlign.replaceAll("[^*]*?<(figure|div).*?(text-align|float):(\w*).*$find(?:.*)", "$3" ))
  						#set( $imgAlign = $imgAlign.trim())
  					#else
  						#set( $imgAlign = 'left')
  					#end 
  				#else
  					#set( $isThereAlignment = $isThereAlignment.replaceAll("<(p|div).*?(text-align:)(\w*?).*?>.*?$find", "[align]"))
  					#if( $isThereAlignment.contains("[align]"))
  						#set( $imgAlign = $imgAlign.replaceAll("[^*]*?<(p|div).*?text-align:(\w*).*$find(?:.*)", "$2" ))
  						#set( $imgAlign = $imgAlign.trim())
  					#else 
  						#set( $imgAlign ='left')
  					#end
  				#end 

  				#if( $format == 'pdf')
  					#if( $imgAlign == 'center')
  						#set( $imgAlignMargin = 'margin:auto !important;')
  					#elseif( $imgAlign == 'right')
  						#set( $imgAlignMargin = 'margin-left:auto !important;margin-right:0pt !important;')
  					#else 
  						#set( $imgAlignMargin = 'margin:0;')
  					#end 
  				#end 

          #######################################################################################
          ## Equation Vertical Alignment
          ##         - Extract the vertical alignment of the equation image for img positioning 
          #######################################################################################

          #if( $inputImage.contains("equation"))
            #set( $eqVerAlign = '')
            #set( $eqVerAlign = $inputImage.replaceAll('style=.*vertical-align:(.*?)["|;]|[^*]', '$1'))
            #set( $eqVerAlign = $eqVerAlign.trim())
          #end

  				#######################################################################################
  				## Figcaption Alignment
  				##         - set the default alignment (Figcaptions in Jama are left aligned and unless
  				##           an img is centered )
  				#######################################################################################

  				#if( $imgAlign == 'center')
  					#set( $figCapAlign = 'center')
  				#else 
  					#set( $figCapAlign = 'center') ## Set default figCaption alignment here 
  				#end 
  				
  				##DEBUG IMG ALIGN $imgAlign <br>

  				#######################################################################################
  				## Figcaption Content 
  				##         - locate figcaption content on the img and store it in $figCaptionContent
  				#######################################################################################
  				#set( $figCaptionContent = $input)
  				#set( $figCaptionContent = $figCaptionContent.replaceAll("\n|\t", ""))

  			  #if( $imgInFigure)
  	      	#set( $figCaptionContent = $input.replaceAll("[^*]*?$find.*?(<figcaption.*?>)(.*?\s*?|.*\n*?|.*\t*?)(<\/figcaption>)(?:.*)|[^*]", "$1$2$3"))

  	      	#set( $figCaptionContent = $figCaptionContent.replaceAll("<\/figcaption>",""))
  	      	#set( $figCaptionContent = $figCaptionContent.replaceAll("<figcaption>",""))
  		    #end 

  		    ##DEBUG FIG CAP CONTENT $figCaptionContent <br>

  				#######################################################################################
  				## - Word img and figcaption $replace handling: One of the following macros will 
  				##			set $replace accordingly with the Word Shape $imgSource of that img.
  				#######################################################################################
  				#if( $format == "doc")

  					#if( $find.contains("equation"))
  						#formatEquation_DOC( $targetWidth $imgSource $eqVerAlign $imgAlign )

  					#elseif( $imgInTable )
  						#formatImgInTable_DOC( $targetWidth $targetHeight $imgSource $eqVerAlign)

  					#elseif( $imgInFigure )
  						#formatFigWithCaptions_DOC( $targetWidth $targetHeight $imgSource $eqVerAlign $imgAlign $figCapAlign $figCaptionContent )
  						
  					#else
  						#formatImgWithOptionForCaptions_DOC( $targetWidth $targetHeight $imgSource $eqVerAlign $imgAlign $figCapAlign)

  					#end 

  				#######################################################################################
  				## - PDF img and figcaption $replace handling: One of the following macros will 
  				##		                  set $replace accordingly with the base64 of that img.
  				#######################################################################################
  				#elseif( $format == "pdf") 
  					
  					#if( $find.contains("equation"))
  						#formatEquation_PDF( $imgIndex $targetWidth $targetHeight $eqVerAlign $imageBase64s)
  					
  					#elseif( $imgInTable ) 
  						#formatImgInTable_PDF( $imgIndex $targetWidth $imageBase64s ) 

  					#elseif( $imgInFigure )
  						#formatFigWithCaptions_PDF( $imgIndex $targetWidth $imageBase64s $imgAlignMargin $figCapAlign $figCaptionContent )
  			
  					#else 
  						#formatImgWithOptionForCaptions_PDF( $imgIndex $targetWidth $imageBase64s $imgAlignMargin $figCapAlign )    

  					#end 
  				#######################################################################################
  				## - Else likely html format, set generic img replacement 
      		#######################################################################################
          #else 
            #set( $replace = "<img src='$imageBase64s.get($foreach.index)' style='height:${targetHeight}pt;width:${targetWidth}pt' />" )
  				#end 
  			
	        ########################################################################################
	        ## - Now that $replace is set with the proper replacement format, 
	        ##   it is utilized to officially $replace the img in the rich text $output string
	        ########################################################################################
	        
		   		#if( $imgInFigure )
		   			#set( $output = $output.replaceAll( "(<figure.*?>|<div.*?>)(.*\s*?|.*\n*?|.*\t*?)($find.*?)(<figcaption.*?>)(.*?\s*?.*?\s*?)(<\/figcaption>)(.*\s*?|.*\n*?|.*\t*?)(<\/figure>|<\/div>)", "$3"))
		   			#set( $output = $output.replaceAll( $find, $replace))	
				  #else
			        #set( $output = $output.replaceAll( $find, $replace ))
			    #end 
  			   
        #end ##if( $inputStart > -1 && $inputEnd > -1 )
      #end 	##if( $imgUrls.get($imgIndex).indexOf(";base64") == -1 )
    #end  ##foreach( $imgSource in $imgSources)
  #end ##if( $input.indexOf("<img") > -1 )
  ##------------------------
  ##  Return String        #
  ##------------------------
  $output
#end
##
####
###################################################################################################################
##                                                                                                               ##
##  DOC Format Image Replace Macros ( Sub macros of #convertFigures )                                            ##
##  #formatEquation_DOC, #formatImgInTable_DOC, #formatFigWithCaptions_DOC, #formatImgWithOptionForCaptions_DOC  ## 
##  Return: $replace                                                                                             ##
##                                                                                                               ## 
###################################################################################################################
##--------------------------##  
##  formatEquation_DOC
##  - formats equation 
##--------------------------##   
#macro( formatEquation_DOC $targetWidth $imgSource $eqVerAlign $imgAlign)
  #set( $tableWidth = $targetWidth +50)
  #set( $equationRefNum = $equationRefNum +1)
  
  #if(!$eqVerAlign || $eqVerAlign == '')
    #set( $replace = "<span style='position:relative;mso-no-proof:yes'><!--[if gte vml 1]><v:shape style='width:${targetWidth}px;height:${targetHeight}px;max-width:none;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--></span>")
  #else
    #set( $eqTopVerAlign = $eqVerAlign.replaceAll("-",""))
    #set( $replace = "<span style='position:relative;top:${eqTopVerAlign};mso-text-raise:${eqVerAlign};mso-no-proof:yes'><!--[if gte vml 1]><v:shape style='width:${targetWidth}px;height:${targetHeight}px;max-width:none;vertical-align:${eqVerAlign};visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--></span>")
  #end

  #if($TOE_includeAllEquations)
    #set($replace = $replace + "<span class=MsoCaption style='text-align:left;'>eq. $equationRefNum</span> ")
  #end
#end 
#* If creating bookmark for caption, code to utilize:
<div align='$imgAlign' class=MsoCaption style='page-break-inside:avoid;'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--><span style='mso-tab-count:1'><a name='_FIG${$equationRefNum}''>eq.</a><span style='mso-spacerun:yes'></span><!--[if supportFields]><span style='mso-bookmark:_FIG${$equationRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_FIG${$equationRefNum}'><span style='mso-spacerun:yes'></span>SEQ Equation \* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_FIG${$equationRefNum}'><span style='mso-no-proof:yes'>$equationRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_FIG${$equationRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_FIG${$equationRefNum}'></span></span></p></div>
*#
##
##---------------------------------------------## 
##  formatImgInTable_DOC
##  - formats image ready to insert into table 
##---------------------------------------------## 
#macro( formatImgInTable_DOC $targetWidth $targetHeight $imgSource $eqVerAlign) 
  #if(!$eqVerAlign || $eqVerAlign == '')
    #set( $replace = "<!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]-->" )
  #else
    #set( $eqTopVerAlign = $eqVerAlign.replaceAll("-",""))
    #set( $replace = "<span style='position:relative;top:${eqTopVerAlign};mso-text-raise:${eqVerAlign};mso-no-proof:yes'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--></span>" )
  #end
#end
## 
##---------------------------------------------## 
##  formatFigWithCaptions_DOC
##  - formats figure with figure captions
##---------------------------------------------## 
#macro( formatFigWithCaptions_DOC $targetWidth $targetHeight $imgSource $eqVerAlign $imgAlign $figCapAlign $figCaptionContent)
	#set( $tableWidth = $targetWidth +1)
	#set( $figureRefNum = $figureRefNum + 1)

  #if(!$eqVerAlign || $eqVerAlign == '')

	  #set( $replace = "<table align=$imgAlign class='invisibleTableContainsFIGURE' border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;margin:0'><tr><td style='text-align:center;width:${tableWidth}pt;margin:0;'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square;margin:0'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--><p class=MsoCaption style='margin-top:-10pt;text-align:${figCapAlign};'><a name='_FIG${figureRefNum}'>Figure </a><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_FIG${figureRefNum}'>SEQ Figure \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'><span style='mso-no-proof:yes'>$figureRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'></span> $figCaptionContent</p></td></tr></table>" )
  #else
    #set( $eqTopVerAlign = $eqVerAlign.replaceAll("-",""))
    #set( $replace = "<table align=$imgAlign class='invisibleTableContainsFIGURE' border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;margin:0'><tr><td style='text-align:center;width:${tableWidth}pt;margin:0;'><span style='position:relative;top:${eqTopVerAlign};mso-text-raise:${eqVerAlign};mso-no-proof:yes'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square;margin:0'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--></span><p class=MsoCaption style='margin-top:-10pt;text-align:$figCapAlign;'><a name='_FIG${figureRefNum}'>Figure </a><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_FIG${figureRefNum}'>SEQ Figure \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'><span style='mso-no-proof:yes'>$figureRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'></span> $figCaptionContent</p></td></tr></table>" )
  #end
#end 
##
##---------------------------------------------------------------------------------------------------------------------##
##  formatImgWithOptionForCaptions_DOC
##  1. considering img is not in fig tags w/ figcaptions, option to format img with captions and include in the TOF 
##     - consider another parameter that may store figcaption content whether utilizing the document name, a field, or 
##        extracted rich text content 
##---------------------------------------------------------------------------------------------------------------------##	
#macro( formatImgWithOptionForCaptions_DOC $targetWidth $targetHeight $imgSource $eqVerAlign $imgAlign $figCapAlign )
  #set( $tableWidth = $targetWidth +1)

	#if( $TOF_includeAllFigures )
		## Add Figcaptions to All Images and Include in the TOF ##  
		#set( $figureRefNum = $figureRefNum + 1)
	  #if(!$eqVerAlign || $eqVerAlign == '')
      #set( $replace = "<table align=$imgAlign class='invisibleTableContainsFIGURE' border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;margin:0'><tr><td style='text-align:center;width:${tableWidth}pt;margin:0'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square;margin:0'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--><p class=MsoCaption style='margin-top:-10pt;text-align:$figCapAlign'><a name='_FIG${figureRefNum}'>Figure </a><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_FIG${figureRefNum}'>SEQ Figure \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'><span style='mso-no-proof:yes'>$figureRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'></span></p></td></tr></table>" )
    #else
      #set( $eqTopVerAlign = $eqVerAlign.replaceAll("-",""))
      #set( $replace = "<table align=$imgAlign class='invisibleTableContainsFIGURE' border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;margin:0'><tr><td style='text-align:center;width:${tableWidth}pt;margin:0'><span style='position:relative;top:${eqTopVerAlign};mso-text-raise:${eqVerAlign};mso-no-proof:yes'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square;margin:0'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--></span><p class=MsoCaption style='margin-top:-10pt;text-align:$figCapAlign'><a name='_FIG${figureRefNum}'>Figure </a><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_FIG${figureRefNum}'>SEQ Figure \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'><span style='mso-no-proof:yes'>$figureRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'></span></p></td></tr></table>" )
    #end
	#else
	  ## No Extra Figcaptions No Inclusion in TOF ## 
    #if(!$eqVerAlign || $eqVerAlign == '')
	    #set( $replace = "<!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]-->" )
    #else
      #set( $eqTopVerAlign = $eqVerAlign.replaceAll("-",""))
      #set( $replace = "<span style='position:relative;top:${eqTopVerAlign};mso-text-raise:${eqVerAlign};mso-no-proof:yes'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--></span>" )
    #end
	#end 
#end
##
###################################################################################################################
##                                                                                                               ##
##  PDF Format Image Replace Macros ( Sub macros of #convertFigures )                                            ##
##  #formatEquation_PDF, #formatImgInTable_PDF, #formatFigWithCaptions_PDF, #formatImgWithOptionForCaptions_PDF  ## 
##  Return: $replace                                                                                             ##
##                                                                                                               ## 
###################################################################################################################
##--------------------------## 
##  formatEquation_PDF
##  1. formats equation 
##--------------------------## 
#macro( formatEquation_PDF $imgIndex $targetWidth $targetHeight $eqVerAlign $imageBase64s)
    #set( $equationRefNum = $equationRefNum +1)
    #set( $replace = "<img src='$imageBase64s.get($imgIndex) style='width=${targetWidth}px !important;height:auto;'/>")

    #if($TOE_includeAllEquations)
      #set($replace = $replace + "<span class=MsoCaption style='text-align:left;'>eq. ${equationRefNum}</span> ")
    #end
#end  
##
##---------------------------------------------## 
##  formatImgInTable_PDF
##  - formats image ready to insert into table 
##---------------------------------------------## 
#macro( formatImgInTable_PDF $imgIndex $targetWidth $imageBase64s ) 
  #set( $replace = "<img src='$imageBase64s.get($imgIndex)' style='height:auto;width:${targetWidth}pt;object-fit:scale-down;'/>" )
#end 
##
##---------------------------------------------## 
##  formatFigWithCaptions_PDF
##  - formats figure with figure captions
##---------------------------------------------## 
#macro( formatFigWithCaptions_PDF $imgIndex $targetWidth $imageBase64s $imgAlignMargin $figCapAlign $figCaptionContent )    
  #set( $replace = "<figure style='height:auto;width:${targetWidth}pt!important;text-align:$figCapAlign !important;$imgAlignMargin'><img src='$imageBase64s.get($imgIndex) style='width=100% !important;height:auto;object-fit:contain;'/><figcaption style='margin-top:-4pt'>$!figCaptionContent</figcaption></figure>")
#end
##
##---------------------------------------------------------------------------------------------------------------------##
##  formatImgWithOptionForCaptions_PDF
##  1. considering img is not in fig tags w/ figcaptions, option to format img with captions and include in the TOF 
##     - consider another parameter that may store figcaption content whether utilizing the document name, a field, or 
##        extracted rich text content 
##---------------------------------------------------------------------------------------------------------------------##
#macro( formatImgWithOptionForCaptions_PDF $imgIndex $targetWidth $imageBase64s $imgAlignMargin $figCapAlign )
	#if( $TOF_includeAllFigures )
		## Add Figcaptions to All Images and Include in the TOF ##  
		#set( $figureRefNum = $figureRefNum + 1)
		#set( $replace = "<figure style='height:auto;width:${targetWidth}pt;text-align:$figCapAlign !important;$imgAlignMargin'><img src='$imageBase64s.get($imgIndex) style='width=100% !important;height:auto;object-fit:contain;'/><figcaption style='margin-top:-4pt'></figcaption></figure>")

	#else 
		## No Extra Figcaptions No Inclusion in TOF ## 
		#set( $replace = "<figure style='height:auto;width:${targetWidth}pt;text-align:$figCapAlign !important;$imgAlignMargin'><img src='$imageBase64s.get($imgIndex) style='width=100% !important;height:auto;object-fit:contain;'/></figure>")
	#end 
#end 
##
#########################################################################################################################
##
##          START WORK IN PROGRESS
## 
#########################################################################################################################

#########################################################################################################################
##          Macro: Extracts image size from image source, if possible, in case there is no size specified in html     ###
##                      $base64Source - base64 source for the image                                                   ###
##                      $imageSizeReturn - size of image                                                              ###
#########################################################################################################################
#macro( getImageSize $base64Source )
  ## if this a PNG, get the size
  #if( $base64Source.substring(0, 16) == "iVBORw0KGgoAAAAN")
    #set( $base64ImageHeader = $base64Source.substring(16, 32) )
    
    #set( $binaryImageHeader = "")
    #foreach( $i in [0..15] )
      #set( $j = $i + 1 )
      #set( $value = $base64ImageHeader.substring($i, $j) )
      ##$value
      #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
      #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
      #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
      #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
      #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
      #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
      #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
      #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
      #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
      #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
      #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
      #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
      #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
      #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
      #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
      #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
      #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
      #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
      #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
      #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
      #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
      #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
      #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
      #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
      #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
      #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
      #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
      #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
      #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
      #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
      #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
      #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
      #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
      #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
      #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
      #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
      #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
      #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
      #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
      #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
      #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
      #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
      #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
      #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
      #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
      #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
      #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
      #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
      #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
      #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
      #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
      #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
      #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
      #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
      #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
      #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
      #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
      #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
      #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
      #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
      #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
      #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
      #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
      #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
    #end
    ##IMAGE HEADER: $binaryImageHeader
    #set( $width = $mathTool.toInteger($binaryImageHeader.substring(32, 33)) * 2147483648 +
                   $mathTool.toInteger($binaryImageHeader.substring(33, 34)) * 1073741824 +
                   $mathTool.toInteger($binaryImageHeader.substring(34, 35)) * 536870912 +
                   $mathTool.toInteger($binaryImageHeader.substring(35, 36)) * 268435456 +
                   $mathTool.toInteger($binaryImageHeader.substring(36, 37)) * 134217728 +
                   $mathTool.toInteger($binaryImageHeader.substring(37, 38)) * 67108864 +
                   $mathTool.toInteger($binaryImageHeader.substring(38, 39)) * 33554432 +
                   $mathTool.toInteger($binaryImageHeader.substring(39, 40)) * 16777216 +
                   $mathTool.toInteger($binaryImageHeader.substring(40, 41)) * 8388608 +
                   $mathTool.toInteger($binaryImageHeader.substring(41, 42)) * 4194304 +
                   $mathTool.toInteger($binaryImageHeader.substring(42, 43)) * 2097152 +
                   $mathTool.toInteger($binaryImageHeader.substring(43, 44)) * 1048576 +
                   $mathTool.toInteger($binaryImageHeader.substring(44, 45)) * 524288 +
                   $mathTool.toInteger($binaryImageHeader.substring(45, 46)) * 262144 +
                   $mathTool.toInteger($binaryImageHeader.substring(46, 47)) * 131072 +
                   $mathTool.toInteger($binaryImageHeader.substring(47, 48)) * 65536 +
                   $mathTool.toInteger($binaryImageHeader.substring(48, 49)) * 32768 +
                   $mathTool.toInteger($binaryImageHeader.substring(49, 50)) * 16384 +
                   $mathTool.toInteger($binaryImageHeader.substring(50, 51)) * 8192 +
                   $mathTool.toInteger($binaryImageHeader.substring(51, 52)) * 4096 +
                   $mathTool.toInteger($binaryImageHeader.substring(52, 53)) * 2048 +
                   $mathTool.toInteger($binaryImageHeader.substring(53, 54)) * 1024 +
                   $mathTool.toInteger($binaryImageHeader.substring(54, 55)) * 512 +
                   $mathTool.toInteger($binaryImageHeader.substring(55, 56)) * 256 +
                   $mathTool.toInteger($binaryImageHeader.substring(56, 57)) * 128 +
                   $mathTool.toInteger($binaryImageHeader.substring(57, 58)) * 64 +
                   $mathTool.toInteger($binaryImageHeader.substring(58, 59)) * 32 +
                   $mathTool.toInteger($binaryImageHeader.substring(59, 60)) * 16 +
                   $mathTool.toInteger($binaryImageHeader.substring(60, 61)) * 8 +
                   $mathTool.toInteger($binaryImageHeader.substring(61, 62)) * 4 +
                   $mathTool.toInteger($binaryImageHeader.substring(62, 63)) * 2 +
                   $mathTool.toInteger($binaryImageHeader.substring(63, 64)) * 1 )
    #set( $height = $mathTool.toInteger($binaryImageHeader.substring(64, 65)) * 2147483648 +
                   $mathTool.toInteger($binaryImageHeader.substring(65, 66)) * 1073741824 +
                   $mathTool.toInteger($binaryImageHeader.substring(66, 67)) * 536870912 +
                   $mathTool.toInteger($binaryImageHeader.substring(67, 68)) * 268435456 +
                   $mathTool.toInteger($binaryImageHeader.substring(68, 69)) * 134217728 +
                   $mathTool.toInteger($binaryImageHeader.substring(69, 70)) * 67108864 +
                   $mathTool.toInteger($binaryImageHeader.substring(70, 71)) * 33554432 +
                   $mathTool.toInteger($binaryImageHeader.substring(71, 72)) * 16777216 +
                   $mathTool.toInteger($binaryImageHeader.substring(72, 73)) * 8388608 +
                   $mathTool.toInteger($binaryImageHeader.substring(73, 74)) * 4194304 +
                   $mathTool.toInteger($binaryImageHeader.substring(74, 75)) * 2097152 +
                   $mathTool.toInteger($binaryImageHeader.substring(75, 76)) * 1048576 +
                   $mathTool.toInteger($binaryImageHeader.substring(76, 77)) * 524288 +
                   $mathTool.toInteger($binaryImageHeader.substring(77, 78)) * 262144 +
                   $mathTool.toInteger($binaryImageHeader.substring(78, 79)) * 131072 +
                   $mathTool.toInteger($binaryImageHeader.substring(79, 80)) * 65536 +
                   $mathTool.toInteger($binaryImageHeader.substring(80, 81)) * 32768 +
                   $mathTool.toInteger($binaryImageHeader.substring(81, 82)) * 16384 +
                   $mathTool.toInteger($binaryImageHeader.substring(82, 83)) * 8192 +
                   $mathTool.toInteger($binaryImageHeader.substring(83, 84)) * 4096 +
                   $mathTool.toInteger($binaryImageHeader.substring(84, 85)) * 2048 +
                   $mathTool.toInteger($binaryImageHeader.substring(85, 86)) * 1024 +
                   $mathTool.toInteger($binaryImageHeader.substring(86, 87)) * 512 +
                   $mathTool.toInteger($binaryImageHeader.substring(87, 88)) * 256 +
                   $mathTool.toInteger($binaryImageHeader.substring(88, 89)) * 128 +
                   $mathTool.toInteger($binaryImageHeader.substring(89, 90)) * 64 +
                   $mathTool.toInteger($binaryImageHeader.substring(90, 91)) * 32 +
                   $mathTool.toInteger($binaryImageHeader.substring(91, 92)) * 16 +
                   $mathTool.toInteger($binaryImageHeader.substring(92, 93)) * 8 +
                   $mathTool.toInteger($binaryImageHeader.substring(93, 94)) * 4 +
                   $mathTool.toInteger($binaryImageHeader.substring(94, 95)) * 2 +
                   $mathTool.toInteger($binaryImageHeader.substring(95, 96)) * 1 )
    #set( $imageSizeReturn = {"width":$width, "height":$height} )
  #else
    #set( $imageSizeReturn = {"width": false, "height": false} )
  #end
#end
#########################################################################################################################
##                     Macro: Embeds attached images as base64                                                        ###
##                      $jamaUrl - Url of an attached image in Jama                                                   ###
##                      $returnSource - Replacement source ID for the now embedded image                              ###
##                      $returnBase64Image - Base64 encoded image 
#########################################################################################################################
#macro( embedImage $jamaUrl )      
  #set( $returnSource = false )
  ## Define a figure array if none exists (first image in the doc)
  #if( !$figure ) #set( $figure = [] ) #end
  ## Define a files array if none exists (first image in the doc)
  #if( !$files ) #set( $files = [] ) #end

  #if( $jamaUrl )
    ## Get attachment ID and file extension
    #set( $srcEnd = $jamaUrl.indexOf("attachment/"))
    #if ( $srcEnd < 0 )
      #set( $srcEnd = $jamaUrl.indexOf("diagram/"))
      #set( $attStart = $srcEnd + 8)
    #else
      #set( $attStart = $srcEnd + 11)
    #end
    #set( $attEnd = $jamaUrl.indexOf( "/", $attStart))
    #set( $attachmentId = $jamaUrl.substring( $attStart, $attEnd))
    #set( $fileExtStart = $jamaUrl.indexOf( ".", $attEnd))
    #set( $fileExtStart = $fileExtStart + 1)
    #set( $fileExt = $jamaUrl.substring( $fileExtStart, $s.length()))
    ## Create new file name, File List Entry and Embedded file
    #set( $f = "JAMA_IMG_")
    #set( $f = $f.concat($attachmentId))
    #set( $f = $f.concat("."))
    #set( $f = $f.concat($fileExt))
    #set( $file = '<o:File HRef="')
    #set( $file = $file.concat( $f))
    #set( $file = $file.concat('"/>'))
    #if( $files.add( $file)) #end
    #set( $jama_cid = $f)
    #set( $newSourceLink = "cid:")
    #set( $newSourceLink = $newSourceLink.concat( $jama_cid))
    #if( $figure.add( $boundaryString)) #end
    #set( $img_jama_cid = "Content-ID: ")
    #set( $img_jama_cid = $img_jama_cid.concat( $jama_cid))
    #if( $figure.add( $img_jama_cid)) #end
    #if( $figure.add( "Content-Transfer-Encoding: base64 ")) #end
    #set( $contentType =  "Content-Type: image/")
    #set( $contentType = $contentType.concat($fileExt))
    #if( $figure.add( $contentType)) #end
    #if( $figure.add( "")) #end
    #set( $base64Fig = $attachmentService.getBase64Image( $mathTool.toInteger( $attachmentId)))
    #if( $figure.add( $base64Fig)) #end
    #if( $figure.add( "")) #end
    #set( $imageData = "data:image/" )
    #set( $imageData = $imageData.concat($fileExt) )
    #set( $imageData = $imageData.concat(";base64, ") )
    #set( $imageData = $imageData.concat($base64Fig) )
##
    ## Return Values
    #set( $returnSource = $newSourceLink )
    #set( $returnBase64Image = $base64Fig )
  #end
#end
#########################################################################################################################
##                          Macro: Resizes images larger than maximum                                               
##                           $inHeight - starting height of image
##                           $inWidth - starting width of image
##                           $maxHeight - maximum allowed height of image
##                           $maxWidth - maximum allowed width of image
##                           $returnHeight - resized height
##                           $returnWidth - resized width                                     
#########################################################################################################################
#macro( resizeImage $inHeight $inWidth $maxHeight $maxWidth )
  #if( $inHeight && $inWidth && $maxHeight && $maxWidth )
    #set( $widthInt = $mathTool.toNumber($inWidth) )
    #set( $heightInt = $mathTool.toNumber($inHeight) )
    #### Debug: $widthInt x $heightInt
##
    #set ($aspectRatio = 1.5)
    #set ($aspectRatio = $mathTool.toDouble($widthInt) / $mathTool.toDouble($heightInt))
    #### Debug Aspect Ratio: $aspectRatio
##
    ## if the image is higher than allowed, resize
    #if( $heightInt > $maxHeight )
      #set ($returnHeight = $maxHeight)
      #set ($returnWidth = $mathTool.mul($mathTool.toNumber($returnHeight), $aspectRatio))
##
      ## if the image is still wider than allowed, resize again
      #if( $returnWidth > $maxWidth )
        #set ($returnWidth = $maxWidth)
        #set ($returnHeight = $mathTool.div($mathTool.toNumber($returnWidth), $aspectRatio))
      #end
##
    ## if the image is wider than allowed, resize
    #elseif( $widthInt > $maxWidth )
      #set ($returnWidth = $maxWidth)
      #set ($returnHeight = $mathTool.div($mathTool.toNumber($returnWidth), $aspectRatio))
##
      ## if the image is still higher than allowed, resize again
      #if( $returnHeight > $maxHeight )
        #set ($returnHeight = $maxHeight)
        #set ($returnWidth = $mathTool.mul($mathTool.toNumber($returnHeight), $aspectRatio))
      #end
    #else
      #set ($returnWidth = $widthInt)
      #set ($returnHeight = $heightInt)
    #end
  #else
    #set ($returnWidth = false )
    #set ($returnHeight = false )
  #end
#end

#########################################################################################################################
##          Macro: formatText
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatText $inString )
#set( $string = $inString )
## Remove divs for pdf so that there are no unexpected formatting containers
#set( $string = $string.replaceAll("<div.*?>|<\/div>", ""))
### COMMENTED OUT FOR FORMAT TESTING ## 
## clear all span satements to remove character formatting
#set( $string = $string.replaceAll("<span.*?>",""))
#set( $string = $string.replaceAll("<\/span>",""))
## clear all embedded headings from rich text fields
#set( $string = $string.replaceAll("<h\d*?.*?>","<p><strong>"))
#set( $string = $string.replaceAll("<\/h\d*?>","</strong></p>"))
## remove any empty image strings
#set( $string = $string.replaceAll("<img alt=[\x27\x22][\x27\x22] />", ""))
#set( $string = $string.replaceAll("<img \/>",""))
## replace Micro aka Legacy Symbol to prevent overlapping characters, issue with pdf
#set( $string = $string.replaceAll("µsec", "&mu;sec"))
#set( $string = $string.replaceAll("", "&#9744;"))
## table edge cases 
#set( $string = $string.replaceAll("(nowrap)(=)([\s*|\x27\x22|])?(nowrap)[\x27\x22]", ""))
#set( $string = $string.replaceAll("(scope)(=)([\s*|\x27\x22|])?(col)[\x27\x22]",""))
$string
#end
#########################################################################################################################
##          Macro: formatTables
##          Input: $inString - input string
##                 $maxWidth - number: maximum allowed width(pts) of tables, resize if greater 
##                 $tableAlign - left, right, center alignment of table              
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatTables $inString $maxWidth $tableAlign)
##
  #if( $inString.contains("<table") )

    ## Clear variables used in the macro
    #set( $output = "" ) ##
    #set( $table = false ) ##
    #set( $maxWidth = $mathTool.toDouble( $maxWidth ))
    #set( $tableCell = false ) ##
    #set( $tableHeader = false ) ## 
    #set( $tableCellParagraph = false ) ##
    #set( $originalTableWidthInPt = false ) ## 
##   
    ## For tables, each tag that makes up the table needs to be independently processed, so split the description into
    ## an array where each each value in the array is a single tag of the HTML, split on '>'
    ## $sub = array of individual tags in the description
    #set ( $subs = $inString.split(">"))##

    ## Iterate on each substring
    #foreach ($sub in $subs) ##
      ## append > to each sub except the last one since the split cut it off
      #if( !$foreach.last) #set( $sub = "${sub}>") #end ##
      ## Determine where in a table we are
      #if( $sub.contains("<table") ) 
        #set( $table = true )  
      #end 
      #if( $sub.contains("<thead") ) #set( $tableHeader = true )  #end ##
      #if( $sub.contains("<td") || $sub.contains("<th") ) #set( $tableCell = true )  #end ##
      #if( $sub.contains("<p") || $sub.contains("<li") ) #set( $tableCellParagraph = true )  #end ##
##
      #if( !$sub.contains("invisibleTableContainsFIGURE"))
        ###########################################################################
        ## - make sure all table cells include a paragraph with an appropriate class
        ###########################################################################
   

	      #if( $table && !$tableHeader && $tableCell )
	        #set($sub = $sub.replaceAll('<p(.*)','<p class=TableCell$1')) ##
	        #set( $sub = $sub.replaceAll('<li(.*?)>','<li class=TableCell$1>'))
	      #end

	      #if($table && $tableHeader && $tableCell)
	        #set($sub = $sub.replaceAll('<p(.*)','<p class=TableHeader$1')) ##
	        #set( $sub = $sub.replaceAll('<li(.*?)>','<li class=TableHeader$1>'))
	      #end

	      ## cells with no formatting
	      #if( $sub.contains("<td") &&
	            !$subs[$nextSubIndex].contains("<p") && 
	            !$subs[$nextSubIndex].contains("<li") )
	        #set( $sub = "$sub<p class=TableCell>")
	      #end

	      #if( $sub.contains("<th") && ($docName != "Inspection Plan" && $docName != "Release History") &&
	            !$subs[$nextSubIndex].contains("<p") && 
	            !$subs[$nextSubIndex].contains("<li") )
	        #set( $sub = "$sub<p class=TableHeader>")
	      #end
	      #if( ($sub.contains("</td") || $sub.contains("</th")) &&
	            !$subs[$prevSubIndex].contains("</p") && 
	            !$subs[$prevSubIndex].contains("</li") )
	        #set( $end = $sub.indexOf("</t") )
	        #set( $contents = $sub.substring(0, $end) ) ##
	        #set( $endTag = $sub.substring($end, $sub.length()) )
	        #set( $sub = "$contents</p>$endTag")
	      #end
	
        ###########################################################################
        ## - make sure all tables have the borders collapsed
        ###########################################################################
        #if( $sub.contains("<table") && !$sub.contains("border-collapse") )
          #if( $sub.contains("style") )
            #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;border-collapse:collapse$4") )
          #else
            #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='border-collapse:collapse'$3") )
          #end
        #end
        ###########################################################################  
        ## - make if the table has a border definition that the border attribute 
        ##   is placed to ensure the outer border box is created
        ###########################################################################
        #set( $tableInlineStyle = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$3") )

        #if( $tableInlineStyle.contains("border:"))  ## Ensure the outside border is created if the table has a border style definition 
          #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1 border='1' $2$3$4") )
        #end
        ###########################################################################
        ## - add header background color
        ###########################################################################
        #if( ($tableHeader && $sub.contains("<td")) || $sub.matches("(?s).*<th[^e].*") )
           
          ## If user has table header color set then use that color
          #set($tableHeaderColor = $sub.replaceAll('background-color:(.*?)[;|"]|[^*]', "$1"))
           
          #if($tableHeaderColor != '' || $!tableHeaderColor)
            #set($tableHeaderBackgroundColor = $tableHeaderColor.trim())
          #end

          ## Remove old background color from style attribute with multiple CSS or where Background-Color is the only
          ##  style attribute.
          #set($sub = $sub.replaceAll("background-color:.*?;", ""))
          #set($sub = $sub.replaceAll("style='background-color:.*?'", ""))
          #set($sub = $sub.replaceAll('style="background-color:.*?"', ""))
          #set($sub = $sub.replaceAll('style=""|style=" "', ""))
          #set($sub = $sub.replaceAll("style=''|style=' '", ""))

          ## Preserve already assigned cell color if already set to prevent double inline style setting.
          #if( $sub.contains("style") && !$sub.contains("background-color"))
            #set( $replace = "$1$2;background-color:$tableHeaderBackgroundColor$3" )
            #set( $sub = $sub.replaceAll("(<t.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)",$replace) )
          #elseif(!$sub.contains("style") && !$sub.contains("background-color"))
            #set( $replace = "$1 style='background-color:$tableHeaderBackgroundColor'$2" )
            #set( $sub = $sub.replaceAll("(<t.*?)(>)",$replace) )
          #end

        #end
        ###########################################################################
        ###########################################################################
        ## - add border color
        ###########################################################################
        #*
        #if( $sub.contains("<table") )
            #if( $sub.contains("style") )
              #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;border: 0.5pt solid $tableBorderColor$4") )
            #else
              #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='border: 0.5pt solid $tableBorderColor'$3") )
            #end
        #end
        *#
        #if( $sub.contains("<td") || $sub.matches("(?s).*<th[^e].*") )
          #if( $sub.contains("style") )
            #set( $replace = "$1$2;border-color: $tableBorderColor$3" )
            #set( $sub = $sub.replaceAll("(<t.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)",$replace) )
          #else
            #set( $replace = "$1 style='border-color: $tableBorderColor'$2" )
            #set( $sub = $sub.replaceAll("(<t.*?)(>)",$replace) )
          #end
        #end

      	###########################################################################
      	###########################################################################
      	##  Map <key, value> each table so that it is possible to recall each row 
      	##   and col of the the table, and to calculate cell widths as a proportion 
      	##    to the longest width of the table. And size PDF and Word tables 
      	##    as % in relation to maxWidth
      	###########################################################################
      	#set( $findWidth = "(?s).*(?:\s|;|\x27|\x22)width\s*(=|:)([\s*|\x27\x22])*(\d*.*?)(pt|px|in|%)[;|\x27\x22](?:.*)|[^*]")
      	#set( $findHeight = "(?s).*(?:\s|;|\x27|\x22)height\s*(=|:)([\s*|\x27\x22])*(\d*.*?)(pt|px|in|%)[;|\x27\x22](?:.*)|[^*]")
      	#set( $findColSpan = "(?s).*(?:\s|;|\x27|\x22)colspan\s*(=|:)([\s*|\x27\x22])*(\d*.*?)[;|\x27\x22|\s*](?:.*)|[^*]")

      	#set( $imgCount = 0 )
	
      	#if( $sub.contains("<table" ) )

      		## Create a Map of the Table 
      		#set( $tableMap = {} )
      		#set( $tableWidthFound = false )
      		#set( $rowCount = 0 )
      		#set( $start = $foreach.index )
      		#set( $end = $subs.size() - 1 )

      		## check for table widths and add <table = width> to map
      		#if( $sub.contains( "width" ))
      			#convertWidths( $sub $findWidth )
      			#if( !$elementWidth )
      				#set( $success = $tableMap.put("table","no width"))
      			#else
      				#set( $success = $tableMap.put("table", "${elementWidth}"))
      				#set( $tableWidthFound = true)
      			#end 
      		#elseif( $sub.contains("<table") && !$sub.contains("width"))
      			#set( $success = $tableMap.put("table","no width"))
      		#end 

	
      		#foreach( $i in [$start..$end] )	
      			#set( $colSpan = false )

      			## add each <img# = $i> to tableMap ## 
      			#if( $subs[$i].contains("<v:shape") && $format == 'doc') ## store location of v:shape img 
      				#set( $imgCount = $imgCount + 1) 
      				#set( $success = $tableMap.put("image${imgCount}", $i))
      			#end 

      			#if( $subs[$i].contains("<tr"))
      				#set( $rowCount = $rowCount + 1 )
      				#set( $rowCellWidths = [] )
      			#end 

      			#if( $subs[$i].contains("<td") || $subs[$i].contains("<th")) 
      				#if( $subs[$i].contains("colspan"))
      					#set( $colSpan = true ) 
      					#set( $colSpanCount = $mathTool.toNumber($subs[$i].replaceAll( $findColSpan,"$3")))
      					#foreach( $x in [1..$colSpanCount ])
      						#if( $foreach.first && $subs[$i].contains("width"))
      							#convertWidths($subs[$i] $findWidth )
      							#set( $success = $rowCellWidths.add([$elementWidth, $i, $colSpanCount]))
      							#break 
      						#else 
      							#set( $success = $rowCellWidths.add(["col", $i]) )
      						#end 
      					#end 

      				#elseif( $subs[$i].contains("width") && !$colSpan ) 
      					#convertWidths( $subs[$i] $findWidth ) 
      					#if( !$elementWidth )
      						#set( $success = $rowCellWidths.add(["col", $i]) )
      					#else 
      						#set( $success = $rowCellWidths.add( [$elementWidth, $i] ))
      					#end

      				#else 
      					#set( $success = $rowCellWidths.add(["col", $i]) )
      				#end 
      			#end 

      			## add each <row# = [[colWidth, $i]...]> to tableMap ## 
      			#if( $subs[$i].contains("</tr") )
      				#set( $success = $tableMap.put("$rowCount", $rowCellWidths))
      			#end 

      			#if( $subs[$i].contains("</table") )
      				#break
      			#end
      	
      		#end ##foreach( $i in [$start..$end] )	
		

      		## End of Creating Map of Table ##
      		#############################################
      		##<p>Debug Table Map $tableMap</p>

      		#############################################
      		## Find Max Row Width and set colGroupKey 
      		#############################################
      		#set( $maxWidthCount = 0 )
      		#set( $maxRowWidth = 0 )
      		#set( $maxTotalCols = 0)
      		#foreach( $element in $tableMap.entrySet())
            #set( $row = false )
      			#set( $tableMapKey = $element.key )
      			#set( $tempRowWidth = 0 )
      			#set( $tempWidthCount = 0 )
      			#set( $tempTotalCols = 0 )
      			#set( $totalRowWidthFound = 0 )
      			#set( $totalPercWidthFound = 0 )

            #if( $tableMapKey != "table" && !$tableMapKey.contains("image") )
              #set( $row = $element.value )
              #if( $row )
                #foreach( $cell in $row )
                  #set( $tempTotalCols = $tempTotalCols + 1)
                  #if( !$cell[0].contains("col") && !$cell[0].contains("%"))
                    #set( $cellWidth = $mathTool.toDouble($cell[0]) )
                    #set( $tempWidthCount = $tempWidthCount + 1 )
                    #set( $tempRowWidth = $tempRowWidth + $cellWidth )
                    ##<p>Debug Temp: $cellWidth, $tempWidthCount, $tempRowWidth</p>
                  #end  
                #end 

                #if( $tempWidthCount >= $maxWidthCount ) ## store the row with the most unique widths
                  #set( $maxWidthCount = $tempWidthCount )
                  #set( $colGroupKey = $tableMapKey )
                #end 
                #if( $tempRowWidth > $maxRowWidth ) ## store the greatest width 
                  #set( $maxRowWidth = $mathTool.toDouble( $tempRowWidth ) )
                #end 
                #if( $tempTotalCols > $maxTotalCols )
                  #set( $maxTotalCols = $tempTotalCols )
                #end 

                ## if we have an abnormally small maxRowWidth for a table expecting 4 or more cols 
                ## set maxRowWidth to the page maxWidth 
                #if( $row.size() >= 4 && $maxRowWidth < 200 )
                  #set( $maxRowWidth = $maxWidth )
                #end 
              #end ##if( $row )
            #end ##if( $tableMapKey != "table" && !$tableMapKey.contains("image")  )
          #end ##foreach( $element in $tableMap.entrySet())
      		
      		#if( $maxRowWidth < 1 )
      			#set( $maxRowWidth = $maxWidth )
      		#end 
      		## if there is no table width and there are columns without widths found 
      		#if( !$tableWidthFound && $maxTotalCols > $maxWidthCount ) ## ensure the maxRowWidth 
      		## has additional width set so no columns have zero width. 
      			#set( $additionalWidth = $mathTool.floor($maxRowWidth * .2)) 
      			#set( $maxRowWidth = $maxRowWidth + $additionalWidth)
      		#end 
      		############################################################
      		##<p>Debug final max: $colGroupKey, $maxWidthCount, $maxRowWidth</p>

      		############################################################
      		## Replace Table Widths and Cell Widths with Percent Widths  
      		############################################################

      		#set( $colGroup = "<colgroup>")
      		#foreach( $element in $tableMap.entrySet())
      			#set( $tableMapKey = $element.key )
      			#set( $tableMapValue = $element.value )
			
			      #if( $tableMapKey == "table" )

				      ## Table Width Replace 
      				#if( $tableMapValue.contains("no width"))

      					## No Table Width Found 

      					#if( $maxRowWidth > 0 && $maxRowWidth < $maxWidth )
      						#set( $tableWidthPerc = $maxRowWidth / $maxWidth * 100 )		
      					#else 
      						#set( $tableWidthPerc = 100 )
      					#end 
      					
      					#set( $tableWidthPerc = $mathTool.round( $tableWidthPerc ))
      					#set( $find = "(<table)(.*?)(>)")
      					#set( $replace = "$1$2 width=${tableWidthPerc}% $3")

      					##<p>Debug final tableWidthPerc: ${tableWidthPerc}%</p>
      					#set( $sub = $sub.replaceAll($find, $replace)) 

      				#else 

      					## Table Width Found 

      					#if( $tableMapValue.contains("%") )
      						#set( $tableWidthPerc = $mathTool.toDouble($tableMapValue.replaceAll("%", "")))

      					#else
      						#set( $tableWidth = $mathTool.toDouble($tableMapValue))
      					
      						#if( $tableWidth > $maxWidth )
      							#set( $tableWidthPerc = 100 )
      						#else
      							#set( $tableWidthPerc = $tableWidth / $maxWidth * 100 )
      						#end 
      						#if( $tableWidth > $maxRowWidth ) 
      							#set( $maxRowWidth = $tableWidth )
      						#end 
      					#end 

      					#if( $tableWidthPerc > 100 && $tableWidthPerc < 1 || !$tableWidthPerc )
      						#set( $tableWidthPerc = 100 )
      					#end 
      					#set( $tableWidthPerc = $mathTool.round( $tableWidthPerc)) 
      					#set( $find = "(width)(=|:)([\s*|\x27\x22|])?(\d*.*?)(pt|px|in|%)")
      					#set( $replace = "$1$2$3${tableWidthPerc}% !important" )
      					
      					##<p>Debug final tableWidthPerc: ${tableWidthPerc}%</p>
      					#set( $sub = $sub.replaceAll($find, $replace) )

      				#end 

			

      			#elseif( $tableMapKey.contains("image") )

      				## Word <v:shape replace pt according to cell width ##

      				#set( $imgIndex = $tableMapValue )
      				#set( $imgSub = $subs[$imgIndex] )
      				
      				#set( $height = $mathTool.toDouble($imgSub.replaceAll( $findHeight, "$3")))
      				#set( $width = $mathTool.toDouble( $imgSub.replaceAll( $findWidth, "$3")))
      				#if( $height != $imgSub && $width != $imgSub )
      					#set( $aspectRatio = $mathTool.toDouble( $width / $height )) 
      				#else 
      					#set( $width = $mathTool.toDouble( 180 ))
      					#set( $aspectRatio = $mathTool.toDouble( 1.3 )) 
      				#end 
      		
      				## cellPerc gathered from last map iteration
      				#set( $cellWidthPt = 0 )
      				#set( $cellPerc = $mathTool.toDouble( $cellPerc ))
      				
      				#set( $maxImgWidth = $maxWidth - 100 ) ## give space for table
      				#set( $cellWidthPt = $cellPerc / 100 * $maxImgWidth )
      		
      				#if( $cellWidthPt > 0 )
      					#if( $width > $cellWidthPt ) 
      						#set( $width = $cellWidthPt )
      						#set( $height = $width / $aspectRatio ) 
      						#set( $replace = "width:${width}pt" )
      					
      						#set( $subs[$imgIndex] = $subs[$imgIndex].replaceAll("width:([\d\.]*?)pt",$replace) )
      						#set( $replace = "height:${height}pt" )
      						#set( $subs[$imgIndex] = $subs[$imgIndex].replaceAll("height:([\d\.]*?)pt",$replace) )
      					#end
      				#end
	

		        #else 

      				## Cell Width Replace ## 
      				## Else the tableMapKey is a row# and holds the cols in the row e.g if a row had 2 cols:
      				## <key row#> = <value [[colWidth, subs index #],[[colWidth, subs index #]] > 
      				

      				#foreach( $col in $tableMapValue )
      					#set( $cellPerc = 0 )
      					#set( $cellWidth = $col[0])
      					#set( $cellIndex = $col[1])
					
      					## if there is only one cell in the row without rowspan size to 100% width 
      					#if( $tableMapValue.size() == 1 )
      						#set( $cellPerc = 100 )

      					## if cell is already a % then get the double value
      					#elseif( $cellWidth.contains("%"))
      						#set( $cellPerc = $mathTool.toDouble( $cellWidth.replaceAll("%", "")) )		

      					## else convert cellWidth from pt to % width in proportion to table
      					#elseif( $cellPerc == 0 && !$cellWidth.contains("col")) 
      						#if( $cellWidth > 0 )
      							#set( $cellPerc = $cellWidth / $maxRowWidth * 100 )
      						#end 
      					#end 

      					## replace $subs[$i] width with % value
      					#if( !$cellWidth.contains("col"))
      						#set( $cellPerc = $mathTool.round( $cellPerc)) 
      						#if( $cellPerc > 100 && $cellPerc < 1 ) 
      							#set( $cellPerc = 100 ) 
      						#end 

      						##<p>Debug Row# $tableMapKey, cellPerc ${cellPerc}%, maxRowWidth $maxRowWidth, cellIndex $cellIndex</p>
      						#set( $find = "(width)(=|:)([\s*|\x27\x22|])?(\d*.*?)(pt|px|in|%)")
      						#set( $replace = "$1$2$3${cellPerc}%" )
      						#set( $subs[$cellIndex] = $subs[$cellIndex].replaceAll($find, $replace))
      					#end 
					
      					#if( $tableMapKey == $colGroupKey ) 
      						#if( $maxWidthCount >= 2 )
      							#if( $col.size() == 3 ) 
      								#set( $colCount = $col[2])
      								#foreach( $x in [1..$colCount])
      									#set( $colGroup = "${colGroup}<col>" )
      								#end 
      							#elseif( $cellWidth.contains("col")) 
      								#set( $colGroup = "${colGroup}<col>" )
      							#else
      								#set( $colGroup = "${colGroup}<col style='width:${cellPerc}%'>" )
      							#end 
      							#if( $foreach.last )
      								#set( $colGroup = "${colGroup}</colgroup>")
      							#end 
      						#end 
      					#end 
			
				      #end ##foreach( $col in $tableMapValue )		

      			#end ##if( $tableMapKey == "table" )
      		#end ##foreach( $element in $tableMap.entrySet())

      		###########################################################################
      		##  PDF Add <colgroup> to ensure fixed column widths
      		###########################################################################
      		#if( $format == 'pdf' && $maxWidthCount >= 2) 
      			#set( $sub = "${sub}${colGroup}")
      		#end 		
		
	

        #end ##if( $sub.contains("<table" ) ) ## End of checking table for widths
      #end ##if( !$sub.contains("invisibleTableContainsFIGURE")) 

   		###########################################################################
		
  		###########################################################################
  		## Find unique alignments coming from Jama and preserve them. 
  		## If a unique alignment is not found the parameter value of $tableAlign is preserved. 
  		## - DOC alignments are removed from the table and set to a parent div
  		## - PDF alignments must be removed from the table and set via margins 
  		###########################################################################
  		#if( $sub.contains("<table") )	

  			#set( $isAlignTable = $sub.replaceAll("(?s).*align\s*=(?:[\s*|\x27\x22])*(\w*.*?)[;|\x27\x22|\s*](?:.*)", "$1") )
  			#set( $isAlignTable = $isAlignTable.trim())

  			#if( $isAlignTable == "center" || $isAlignTable == "right" || $isAlignTable == "left" )
  				#set( $tableAlign = $isAlignTable)
  			#end 

  			#set( $sub = $sub.replaceAll("(margin-left|margin-right|margin)(:.*?)(;|[\x27\x22])", "$3") )
  			#set( $sub = $sub.replaceAll("align=([\x27\x22].*?[\x27\x22]|\w*)", "") ) ## take alignment off


  			#if( $format == 'doc')	
  				#set( $sub = $sub.replaceAll("<table", "<div align=$tableAlign><table"))
  			#elseif( $format == 'pdf')
  				#if( $tableAlign == "center")
  					#if( $sub.contains("style"))
  						#set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;margin:auto;$4"))
  					#else 
  						#set( $sub = $sub.replaceAll("(<table)","$1 style='margin:auto'"))
  					#end 
  				#elseif( $tableAlign == "right")
  					#if( $sub.contains("style"))
  						#set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;margin-left:auto;margin-right:0pt;$4"))
  					#else 
  						#set( $sub = $sub.replaceAll("(<table)","$1 style='margin-left:auto;margin-right:0pt;'"))
  					#end 
  				#end 	
  			#end 
  		#end
		  ##<p>Debug Table Align: $tableAlign<p>


		  ###########################################################################

		  ## close the parent div which has the alignment for the table if Word
		  #if( $sub.contains("</table") && $format == 'doc')
    		#set( $sub = "$sub</div>")  
    	#end 
 
     	###########################################################################

  		###########################################################################
  		## Miscellaneous cell style transformations
  		###########################################################################
  		#set( $sub = $sub.replaceAll("padding.*?([;|\x27\x22])", "$1") )
  		#set( $sub = $sub.replaceAll('(style=")[;| ]+', '$1'))
  		#if( $format == 'pdf')
  			#set( $sub = $sub.replaceAll("writing-mode:tb-rl",""))
  		#end

  		## Handle text content alignment for vertical text on tables
  		#if($sub.contains("transform:rotate(180deg);"))
  			#set( $sub = $sub.replaceAll("transform:rotate\(180deg\);","mso-rotate:90;") )
  		#end 	


	    ###########################################################################
      ## add the processed sub to the output string
      #set ( $output = "${output}${sub}" ) ##

      ## Determine where in a table we are
      #if( $sub.contains("</p") || $sub.contains("</li") ) #set( $tableCellParagraph = false )  #end ##
      #if( $sub.contains("</thead") ) #set( $tableHeader = false ) #end ##
      #if( $sub.contains("</td") || $sub.contains("</th") ) #set( $tableCell = false ) #end ##
      #if( $sub.contains("</table") ) #set( $table = false ) #end ##

    
    #end ##foreach ($sub in $subs)

  #else
    
    #set ( $output = $inString )
  
  #end ##if( $inString.contains("<table") )
  #######################################################################################
  ## - Word caption handling by extracting caption and creating a new single cell table on top
  ## - This allows preservation of the caption alignment and prevents word from applying
  ##   heading formatting to the caption as it does when caption is still present on 
  ##   original table as the first table row.
  ##
  ## - #buildTableCaptions_DOC will add captions to tables that do not have them
  ##   if $TOT_includeAllTables is true so that they can be included in the TOT
  #######################################################################################
  #######################################################################################
  ## - PDF captions are automatically found by the template and do not need to be reformatted
  ##
  ## - #buildTableCaptions_PDF will add captions to tables that do not have them
  ##   if $TOT_includeAllTables is true so that they can be included in the TOT
  #######################################################################################

	#if($output.contains("</table>"))
	  	#if( $format == 'pdf') 
	  		#buildTableCaptions_PDF( $output $tableAlign ) 
	  	#else 
	  		#buildTableCaptions_DOC( $output )
	  	#end 
	#end	

	$output 	 

#end 
###########################################################################################################################
##   convertWidths 
##   convert widths found on a table element to pt unless its a percent width. 
##   Input: $inputElement $findWidth 
##   Output: pt width unless its a percent width 
#########################################################################################################################
#macro( convertWidths $inputElement $findWidth )
	#set( $elementPerc = false )
	#set( $elementWidth = $inputElement.replaceAll( $findWidth,"$3") )
	#set( $elementWidth = $mathTool.toDouble( $elementWidth.trim()))	
	#set( $elementMeasurement = $inputElement.replaceAll( $findWidth,"$4") )

	#if( $elementMeasurement.contains("px") ) 
		#set( $elementWidth = $elementWidth * 0.75 ) 

	#elseif( $elementMeasurement.contains("in"))
		#set( $elementWidth = $elementWidth * 72 )

	#elseif( $elementMeasurement.contains("%") ) 
		#set( $elementWidth = "${elementWidth}%" )
	#end

#end 
##
#########################################################################################################################
##  DOC                                                                                                                ## 
##  #buildTableCaptions_DOC                                                                                            ##
##  1. For each table found check if it has a caption                                                                  ##
##  2. If caption utilize the caption content and construct caption for Word                                           ##
##  3. Else considering a table does not have captions, option to format table with captions and include in the TOT    ## 
##     - consider another parameter that may store caption content whether utilizing the document name, a field, or    ##
##        extracted rich text content                                                                                  ## 
#########################################################################################################################
#macro( buildTableCaptions_DOC $output )
#set( $tempInString = "")
#set( $caption = "")
#set( $output = $output.replaceAll("<table", "<table[TABLE]"))
#set( $splitList = $output.split("<table"))
##
	#foreach ($splitItem in $splitList)
	    #if( $splitItem.contains("[TABLE]"))
		    ## Replace the placeholder with the <table tag that was removed in split
		    #set( $splitItem = $splitItem.replaceAll("\[TABLE\]", "<table"))
		    ## Extract table width

		    #if( !$splitItem.contains("invisibleTableContainsFIGURE"))
			    #set( $tableWidth = '')
			    #set( $tableWidth = $splitItem.replaceAll("<table.*width.*?:.*?(\d*.*?)[;\x27\x22].*|[\w|\W]","$1") )

			    #set( $captionContent = "")
			    #if( $splitItem.contains("</caption>"))
			      #set( $tableRefNum = $tableRefNum + 1) 
			      ## Extract Caption Content

			      #set( $captionContent = $splitItem.replaceAll("(<caption.*\s*.*\s*<\/caption>)|[\w|\W]", "$1"))
			      #set( $captionContent = $captionContent.replaceAll("<\/caption>", ""))
			      #set( $getAlign = $captionContent.replaceAll("<caption(.*?)>", "$1"))
			      #set( $captionContent = $captionContent.replaceAll("<caption.*?>", ""))
		          
		          #set( $captionAlign = '')
		          #set( $captionAlign = $getAlign.replaceAll("[^*]*?text-align:(\w*).*(?:.*)", "$1"))


		          #set( $captionContent = $captionContent.replaceAll("<\/p>", ""))
		          #set( $captionContent = $captionContent.replaceAll("<p.*?>", ""))

		          #if( $!captionContent && $captionContent != '')
		            #if( $captionAlign != '')
			          #set($caption = "<table border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;width:$tableWidth'><tr><td style='width:$tableWidth'><p class=MsoNormal style='text-align:$captionAlign;font-size:10pt;font-family:'Helvetica',sans-serif;font-weight:bold'><p class=MsoCaption style='text-align:$captionAlign !important;margin-top:6pt;page-break-after:avoid'><a name='_TBL${tableRefNum}'>Table </a><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_TBL${tableRefNum}'>SEQ Table \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'><span style='mso-no-proof:yes'>$tableRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'></span> $!captionContent</p></td></tr></table>" )
			        #else
			          #set($caption = "<table border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;width:$tableWidth'><tr><td style='width:$tableWidth'><p class=MsoNormal style='text-align:$tableAlign;font-size:10pt;font-family:'Helvetica',sans-serif;font-weight:bold'><p class=MsoCaption style='text-align:$tableAlign;margin-top:6pt;page-break-after:avoid'><a name='_TBL${tableRefNum}'>Table </a><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_TBL${tableRefNum}'>SEQ Table \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'><span style='mso-no-proof:yes'>$tableRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'></span> $!captionContent</p></td></tr></table>" )
			        #end
			      #end

			      #set($splitItem = $splitItem.replaceAll("<caption.*\s*.*\s*<\/caption>", ""))
			      #set($splitItem = $splitItem.replaceAll("<table", "$caption<table"))

			    ## Add captions to All Tables ##
			    ## Comment out this block if you only want captions for tables that have captions
			    #else
			    	#if( $TOT_includeAllTables )
			    		#set( $tableRefNum = $tableRefNum + 1)
			    		#set($caption = "<table border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;width:$tableWidth'><tr><td style='width:$tableWidth'><p class=MsoNormal style='text-align:$tableAlign;font-size:10pt;font-family:'Helvetica',sans-serif;font-weight:bold'><p class=MsoCaption style='text-align:center;margin-top:6pt;page-break-after:avoid'><a name='_TBL${tableRefNum}'>Table </a><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_TBL${tableRefNum}'>SEQ Table \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'><span style='mso-no-proof:yes'>$tableRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_TBL${tableRefNum}'></span></p></td></tr></table>" )
			    		#set($splitItem = $splitItem.replaceAll("<table", "$caption<table"))
			    	#end 
	    		#end  ##if($splitItem.contains("</caption>"))
	    	#end ##if( !$splitItem.contains("invisibleTableContainsFIGURE"))
		#end  ##if( $splitItem.contains("[TABLE]"))
##
	  	## Rebuild the now modified inString content
	  	#set ( $tempInString = "${tempInString}${splitItem}" )

	#end  ##foreach ($splitItem in $splitList)

	## Reassign inString to its now caption modified version

	#set($output = $tempInString)
##
  ##------------------------------##
  ## Returns $output
  ##------------------------------##
##
#end 
## 
#########################################################################################################################
##  PDF                                                                                                                ##
##  #buildTableCaptions_PDF                                                                                            ##
##  1. considering table does not have captions, option to format table with captions and include in the TOT           ## 
##     - consider another parameter that may store caption content whether utilizing the document name, a field, or    ##
##        extracted rich text content                                                                                  ##
##                                                                                                                     ## 
#########################################################################################################################
#macro( buildTableCaptions_PDF $output $tableAlign)
#set( $tempInString = "")
#set( $caption = "")
#set( $output = $output.replaceAll("<table", "<table[TABLE]"))
#set( $splitList = $output.split("<table"))

#foreach ($splitItem in $splitList)
  	#if( $splitItem.contains("[TABLE]"))
		## Replace the placeholder with the <table tag that was removed in split
		#set( $splitItem = $splitItem.replaceAll("\[TABLE\]", "<table"))

		#if(!$splitItem.contains("</caption>") && $TOT_includeAllTables )
			#if( $tableAlign=='center')
				#set($caption = "<caption style='text-align:center !important;margin:auto !important'></caption>" )
			#elseif( $tableAlign =='right')
				#set($caption = "<caption style='text-align:right !important;margin-right:0pt !important;'></caption>" )
			#else 
				#set($caption = "<caption style='text-align:center !important;margin:auto !important;'></caption>" ) ## set default caption align
			#end 
		#set($splitItem = $splitItem.replaceAll("(<table.*?>)", "$1 $caption"))

	#end  ##if(!$splitItem.contains("</caption>"))
  #end  ##if( $splitItem.contains("[TABLE]"))
  
  ## Rebuild the now modified inString content
  #set ( $tempInString = "${tempInString}${splitItem}" )

#end  ##foreach ($splitItem in $splitList)

## Reassign inString to its now caption modified version

#set($output = $tempInString)

##------------------------------##
## Returns $output
##------------------------------##

#end 
#########################################################################################################################
##          Macro: convertHyperlinks
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( convertHyperlinks $inString )
  ## Reset variables used in the macro
  #set( $subs = [] )
  #set( $output = "" )
  #set( $destDoc = false )
  #set( $deleteNextSub = false )
##
  ## split the string by > to break it up into HTML tags
  #set ( $subs = $inString.split(">"))
##
  ## Parse each substring
  #foreach ($sub in $subs) ##
    ## split removes the split character, so all subs are missing a > except for the last one
    #if( !$foreach.last) #set( $sub = "${sub}>") #end
    ## Hyperlinks are made up of two HTML tags.  If replacing a hyperlink weas just replaced, delete the second part of it
    #if( !$deleteNextSub )
      ## only process strings that contain a docID and the current Jama base URL, indicating they are hyperinks to a Jama item
      #if( $sub.contains("docId=") && $sub.contains($baseUrl) )
        ##Locate the doc ID in the string
        #set( $docIdStart = $sub.indexOf("docId=") + 6 )
        ## the doc ID might before or after the project ID, so check for & or " as the next character
        #set( $docIdEnd = $sub.indexOf( "&", $docIdStart))
        #if( $docIdEnd == -1 )
          #set( $docIdEnd = $sub.indexOf( '"', $docIdStart))
          ## if still -1 then our link is not stored in the report as a actual <a> link 
          ## most likely link text wrapped in a <p> tag (I.e user pasted link text to rich text box)
          #if( $docIdEnd == -1)
            #set( $docIdEnd = $sub.indexOf( "<", $docIdStart))
          #end
        #end
        ## Extract the doc ID from the string
        #set( $docId = $sub.substring( $docIdStart, $docIdEnd))
        ## Get the document corresponding to the docID
        #set ( $destDoc = $docDao.getDocument( $mathTool.toInteger($docId) ))
        
        #if($baselineMode)
          #set($destReferencable = $referenceableDocIds.contains($destDoc.id)) ## Checks the orgin document ID's of all exportlist items
        #else
          #set($destReferencable = $referenceableDocIds.contains($destDoc.id)) ## Checks only the export list ids
        #end

        ## Validate that the destination Doc was found
        #if ( $destDoc && $destReferencable )
          ## Replace the hyperink with a Word cross-reference appropriate for the type of destination item
          #if( $format == "doc" )
            #set ($sub = $sub.replaceAll("(?s)<a.*?docId=.*?>", "<!--[if supportFields]><span style='mso-element:field-begin'></span>REF _API${docId} \\h <span style='mso-element:field-separator'></span><![endif]--><span class=CrossRefLink style='mso-no-proof:yes'>$destDoc.name</span><!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->") )
            #set( $deleteNextSub = true )
          #elseif($format == 'pdf')
            #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<a href='#$docId'>$destDoc.name</a>") )
            #set( $deleteNextSub = true )
          #end
        #end
      #end
      ## append the converted sub to the output string
      #set ( $output = "${output}${sub}" ) ##
    #else
      #if( $sub.indexOf("</a>") > -1 )
        #set( $deleteNextSub = false )
      #end
    #end
  #end ##
  ## return the string with hyperlinks replaced with Word cross-references
  $output
#end
##
#########################################################################################################################
##          Macro: formatTableCell
##          Input: $inString - input string
##                 $justification - string, justification to apply to output. (left, right, center)
##                 $$maxImageWidth - number, maximum wide of any image in the cell
##          Output: string, ready for opening in Word
#########################################################################################################################
#macro( formatTableCell $inString $justification $maxImageWidth)
	#if( $inString && $justification && $maxImageWidth )
		#set( $string = $inString.toString() )
		## Re-format text for consistent look and feel
		#set( $string = "#formatText($string)" )
		#if( $format == 'pdf')
			## First re-format tables for consistent look and feel, and fixed column widths
			#set( $string = "#formatTables($string, $maxImageWidth, 'left')" )
			## Then prep figures to base64 after formatting tables
			#set( $string = "#convertFigures($string, $maxImageWidth)" )
		#else
			## Prep figures for Word- figures go in invisible table class
			#set( $string = "#convertFigures($string, $maxImageWidth)" )
			## then Re-format tables for consistent look and feel
			#set( $string = "#formatTables($string, $maxImageWidth, 'left')" )
		#end 
    ## Convert hyperlinks in Jama to Word cross-references if Master Template global variable is true
    #if($includeCrossReferences)
      #set( $string = "#convertHyperlinks($string)" )
    #end
		## format lists appropriately
		#set( $string = $string.replaceAll('<li>','<li class=TableCell>') )
		#set( $string = $string.replaceAll('<li\s([^c].*?)>','<li class=TableCell $1>') )
		## Make sure all cells are contained in a paragraph with the appropriate style
		#if( !$string.contains("<p"))
		  #set( $string = "<p class=TableCell style='text-align:$justification'>$string</p>" )
		#else
		  #set( $string = $string.replaceAll("<p>","<p class=TableCell style='text-align:$justification'>") )
		  #set( $string = $string.replaceAll("<p\s([^c].*?)>","<p class=TableCell $1 style='text-align:$justification'>") )
		#end
		$string
	#end
#end
#########################################################################################################################
##          Macro: formatRichText
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatRichText $inString )
	#if( $inString )
		#set( $string = $inString.toString() )
		## Re-format text for consistent look and feel
		#set( $string = "#formatText($string)" )
		#if( $format == 'pdf')
			## First re-format tables for consistent look and feel and fixed column widths
			#set( $string = "#formatTables($string, $maxPageWidth, 'left')" )
			## Then prep figures to base64 after formatting tables
			#set( $string = "#convertFigures($string, $maxPageWidth)" )
		#else
			## Prep figures for Word- figures go in invisible table class
			#set( $string = "#convertFigures($string, $maxPageWidth)" )
			## then Re-format tables for consistent look and feel
			#set( $string = "#formatTables($string, $maxPageWidth, 'left')" )
		#end 
    ## Convert hyperlinks in Jama to Word cross-references if Master Template global variable is true
    #if($includeCrossReferences)
      #set( $string = "#convertHyperlinks($string)" )
    #end
		## format lists appropriately
		#set( $string = $string.replaceAll('<li>','<li class=MsoListParagraph>'))
		#set( $string = $string.replaceAll('<li\s([^c].*?)>','<li class=MsoListParagraph $1>'))
		## Make sure all content that is not already in a paragraph with a class is in a paragraph with class Normal
		#if( !$string.contains("<p"))
		  #set( $string = "<p class=MsoNormal>$string</p>" )
		#else
		  #set( $string = $string.replaceAll("<p>","<p class=MsoNormal>") )
		  #set( $string = $string.replaceAll("<p\s([^c].*?)>","<p class=MsoNormal $1>") )
		#end
		$string
	#end
#end
#########################################################################################################################
##
##    Review Comments & Signature Macros 
##    Macro: buildApproversReviewers
##    Input: none
##    Output: Table ready for opening in Word or PDF. Table details the Approvers and Reviewers for the review/revision 
##            that have not finished or approvers who have marked some items 'Needs More Work'
##    
##
#########################################################################################################################
#macro( buildApproversReviewers )

#set( $revisionUsers = $revisionForComments.revisionUsers )

#set( $approvers = [] )
#set( $approverStatus = [] )
#set( $reviewers = [] )
#set( $reviewerStatus = [] )
#set( $status = "")
#set( $workStatus = "")

  #foreach($revisionUser in $revisionUsers)
    #set($revUserItems = $revisionUser.revisionUserItems)
    #set( $revUserObj= $revisionUser.user)

    #if( $revisionUser.isApprover )
    	#set( $success = $approvers.add( $revUserObj ))

      #foreach( $revUserItem in $revUserItems)
  			#set( $revisionItemStatus = $revUserItem.status.name )
        ##Debug: $revUserItem.status.name <br>
  			#if( $revisionItemStatus.toUpperCase().trim() == "NEEDS MORE WORK" )
  		  	#set( $workStatus = "Needs Work" )
  			#end 
  		#end 

      #if( !$revisionUser.finishedRevision )
        #set( $status = "Not Finished")
      #elseif( $revisionUser.finishedRevision)
        #set( $status = "Finished" )
      #end 

      #if( $workStatus.length() > 0 && $status.length() > 0  )
        #set( $status = $status + " / " + $workStatus)
      #end 

      #set( $success = $approverStatus.add({"approver":$revUserObj, "status":$status}))
    #else

      #set( $success = $reviewers.add( $revUserObj))

      #if( !$revisionUser.finishedRevision )
        #set( $status = "Not Finished")
      #elseif( $revisionUser.finishedRevision)
        #set( $status = "Finished" )
      #end 

      #set( $success = $reviewerStatus.add({"reviewer":$revUserObj, "status":$status}))
    #end 
 #end 
<p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='font-size:14.0pt;line-height:115%;'>
Approvers &amp; Reviewers</span></p>

<table class=MsoTableGrid border='.5pt' cellspacing=0 cellpadding=0 style='border-collapse:collapse;border:none;
 mso-yfti-tbllook:1184;mso-padding-alt:0in 5.4pt 0in 5.4pt;width:100%'>
 <tr>
  <td width=75% valign=top style='border:solid windowtext .5pt;text-align:center;background:#cccccc;'>
  <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end>
    <span style='text-transform:uppercase;font-size:9pt'>
    APPROVERS</span></p>
  </td>
  <td width=25% valign=top style='border:solid windowtext .5pt;border-left:none;text-align:center;background:#cccccc;'>
  	<p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end>
      <span style='text-transform:uppercase;font-size:9pt'>
     APPROVER STATUS</span></p>
  </td>
 </tr>
#if( $approverStatus.size() > 0 )
  #foreach( $user in $approverStatus )
    #set( $approver = $user.get("approver"))
    #set( $status = $user.get("status"))
    #if( $status.contains("Needs Work") || $status.contains("Not Finished"))
      #set( $color = "ffe6e6")
    #else 
      #set( $color = "ecf9ec")
    #end 
   <tr>
    <td width=75% valign=top style='border:solid windowtext .5pt;'>$approver.fullName</td>
    <td width=25% valign=top style='border:solid windowtext .5pt;background:#$color;mso-pattern:#$color none;text-align:center'>
     $!status 
    </td>
   </tr>
  #end
#else 
 <tr>
    <td width=100% colspan=2 valign=top style='border:solid windowtext .5pt;'>No approvers.</td>
   </tr>
#end 
</table>
<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border='.5pt' cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;
 mso-yfti-tbllook:1184;mso-padding-alt:0in 5.4pt 0in 5.4pt;width:100%'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;'>
  <td width=75% valign=top style='border:solid windowtext .5pt;text-align:center;background:#cccccc;'>
  <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end>
    <span style='text-transform:uppercase;font-size:9pt'>
    REVIEWERS</span></p>
  </td>
  <td width=25% valign=top style='border:solid windowtext .5pt;border-left:none;text-align:center;background:#cccccc;'>
    <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end>
      <span style='text-transform:uppercase;font-size:9pt'>
     REVIEWER STATUS</span></p>
   </td>
 </tr>
#if( $reviewerStatus.size() > 0 )
  #foreach( $user in $reviewerStatus )
    #set( $reviewer = $user.get("reviewer"))
    #set( $status = $user.get("status"))
    #if( $status.contains( "Not Finished"))
      #set( $color = "ffe6e6" )
    #else 
      #set( $color = "ecf9ec") 
    #end 
   <tr>
    <td width=75% valign=top style='border:solid windowtext .5pt;'>
      $reviewer.fullName
    </td>
    <td width=25% valign=top style='border:solid windowtext .5pt;background:#$color;mso-pattern:#$color none;text-align:center'>
      $!status 
    </td>
   </tr>
  #end
#else 
 <tr>
    <td width=100% colspan=2 valign=top style='border:solid windowtext .5pt;'>No reviewers.</td>
   </tr>
#end 
</table>


#end 
#########################################################################################################################
##
##    Review Comments & Signature Macros 
##    Macro: buildReviewSignatures
##    Input: none
##    Output: Table ready for opening in Word or PDF. Table details only the Approvers who have signed the review/revision
##    
##
#########################################################################################################################
#macro( buildReviewSignatures )

<p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='font-size:14.0pt;line-height:115%;'>
Approver Signatures #*v$!revisionForComments.sequenceNumber*#
 </span></p>

<table class=MsoTableGrid border='.5pt' cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;
 mso-yfti-tbllook:1184;mso-padding-alt:0in 5.4pt 0in 5.4pt;width:100%;'>
 <thead>
 <tr style='mso-yfti-irow:1'>
  <td width=20% valign=top style='border:solid windowtext .5pt;background:#cccccc;padding:0in 5.4pt 0in 5.4pt'>
 <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900;text-transform:uppercase;font-size:9pt' #end>Approver Name</p><p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end></p>
  </td>
  <td width=30% valign=top style='border:solid windowtext .5pt;background:#cccccc;padding:0in 5.4pt 0in 5.4pt'>
<p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900;text-transform:uppercase;font-size:9pt' #end>Signer Role</p></p>
  </td>
  <td width=20% valign=top style='border:solid windowtext .5pt;background:#cccccc;padding:0in 5.4pt 0in 5.4pt'>
 
<p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900;text-transform:uppercase;font-size:9pt' #end>Approval Date (UTC)</p>
  </td>
  <td width=30% valign=top style='border:solid windowtext .5pt;background:#cccccc;padding:0in 5.4pt 0in 5.4pt'>
 <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900;text-transform:uppercase;font-size:9pt' #end>Signature Comments</p>
  </td>
 </tr>
</thead>
#set( $noSigEvidence = 0 )

#if( $approvers.size() > 0 )
	#foreach( $approver in $approvers  )
    #set( $revokedSigMatch = false )
		#set( $signature = false )
    #set( $signatureAddedEvent = false )
    #set( $signatureRevoked = false )

		#set( $signature = $reviewSource.getLatestSignatureForUserAndScopeRef( $approver.id, 10, $revisionForComments.id, false))
		#set( $signatureAddedEvent = $eventSource.getAllEventsForObjectsByAction([4],[$revisionForComments.id],19,'Signature added'))
    #set( $signatureRevoked = $eventSource.getAllEventsForObjectsByAction([4],[$revisionForComments.id],19,'Signature revoked'))

    #if( $signatureAddedEvent ) 
      ## sort for latest events first 
      #set( $signatureAddedEvent = $sortTool.sort( $signatureAddedEvent, "createdDate:desc"))
    #end 
    #if( $signatureRevoked )
      ## sort for latest events first 
      #set( $signatureRevoked = $sortTool.sort( $signatureRevoked, "createdDate:desc"))
    #end 
   

    ## When a signature is revoked the Signature Interface does not return a createdDate or modifiedDate on the SignatureInterface Object ##
		#if( $signature.createdDate || $signature.modifiedDate || $signatureRevoked.size() > 0 )

  		<tr style='mso-yfti-irow:2;mso-yfti-lastrow:yes'>
  			<td valign=top style='border:solid windowtext .5pt;border-top:none;padding:0in 5.4pt 0in 5.4pt'>
    			#if(  $signature.createdDate || $signature.modifiedDate )
            $!signature.user.fullName
          #elseif( $signatureRevoked )
            #foreach( $revokedSig in $signatureRevoked )
              #if( $approver.id == $revokedSig.eventUser.id )
                #set( $revokedSigMatch = true )
                $!revokedSig.eventUser.fullName 
              #end 
            #end
          #end 
  			</td>
  			<td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
    			#if( $revokedSigMatch )
            #foreach( $revokedSig in $signatureRevoked )
              #if( $approver.id == $revokedSig.eventUser.id )
                $!revokedSig.comments  
              #end 
            #end
          #else 
      			#* #set( $roles = $!signature.user.roles ) 
      			#foreach( $role in $roles ) $role.name #end > this returns all the roles and not the roles particular to the review
      			while the signature eventEntry returns the role associated with the signature: *# 
      			#set( $checkIfRole = "")
      			#foreach( $sigRoleEvent in $signatureAddedEvent )
      				#if( $approver.id == $sigRoleEvent.eventUser.id )
      					#set( $checkIfRole = $sigRoleEvent.comments.replaceAll('(.*)(as.\".*?\")', '$2'))
      					#if( $checkIfRole.length() > 0 )
      						$!sigRoleEvent.comments
      					#else 
      						$!sigRoleEvent.comments as 'N/A' role.
      					#end 
      				#end
      			#end 
    			#end ##if( $revokedSigMatch )
  			</td>
  			<td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
    			#if( $signature.createdDate )
            #set( $signatureDate = "#getDateTime( $signature.createdDate, $timeZone)")
          #elseif( $signature.modifiedDate ) 
            #set( $signatureDate = "#getDateTime( $signature.createdDate, $timeZone)")
          #else 
            #set( $signatureDate = "")
          #end 
          $!signatureDate 
  			</td>
  			<td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
    		  #if( $revokedSigMatch )
            Signature Revoked    
            #foreach( $revokedSig in $signatureRevoked )
              #if( $approver.id == $revokedSig.eventUser.id )
                #set( $eventDate = $revokedSig.getEventDate())
                #getDateTime( $eventDate, $timeZone) 
              #end 
            #end
          #else 
    			 $!signature.comments
          #end 
  			</td>
  		</tr>

    #else 

      #set( $noSigEvidence = $noSigEvidence + 1)

		#end ##if( $signature.createdDate || $signature.modifiedDate || $signatureRevoked.size() > 0 )
	#end ##foreach( $approver in $approvers  )
#end 

#if( $approvers.size() == 0 || $noSigEvidence == $approvers.size() ) 
	<tr>
		<td colspan=4 style='border:solid windowtext .5pt;'>Not signed</td>
	</tr>
#end ##if( $approvers.size() > 0 )


</table>
#end 

#########################################################################################################################
##
##    Review Comments & Signature Macros 
##    Macro: getRevisionItemsComments
##    Input: none
##    Output: Heading ready for opening in Word or PDF. Prints a heading and calls the 
##            buildRevisionItemsDetails macro per revision. 
##    
##
#########################################################################################################################
#macro( getRevisionItemsAndReviewComments )
  #set( $revisionItemsForComments = [] )
  #set( $commentsReviewLevel= [] )
  #set( $revItemCommentsByGlobalId = [] )
  #set( $itemsGroupedById = [] )
  
  #if( $revisionInput )
    #set( $revisionsAscending = $sortTool.sort( $revisionListUpToVersion, "createdDate"))
    #foreach( $revision in $revisionsAscending )
      ## get the revision items in each revision up to and including the user input revision ## 
      #foreach( $item in $revision.revisionItems )
        #set( $success = $revisionItemsForComments.add( {"revisionItem":$item, "globalId":$item.version.document.globalId}))
      #end
      ## get the revision comments up to and including the user input revision
      #foreach( $reviewComment in $revision.revisionComments)
        #if( $reviewComment.comment.getActive()) ## only add Active Comments, i.e. do not show deleted comments 
          #set( $success = $commentsReviewLevel.add($reviewComment))
        #end 
      #end 
    #end 
  #else 
    ## get the revision items for all revisions of the review
    #set( $revisions = $reviewForComments.revisions )
    #set( $revisionsAscending = $sortTool.sort( $revisions, "createdDate"))
    #foreach( $revision in $revisionsAscending )
      #foreach( $item in $revision.revisionItems )
        #set( $success = $revisionItemsForComments.add({"revisionItem":$item, "globalId":$item.version.document.globalId}))
      #end
    #end 
    ## get all the review comments 
    #foreach( $reviewComment in $revisionForComments.review.reviewComments)
      #if( $reviewComment.comment.getActive()) ## only add Active Comments, i.e. do not show deleted comments 
        #set( $success = $commentsReviewLevel.add( $reviewComment ))
      #end 
    #end 
  #end

  #set( $revisionItemsForComments = $sortTool.sort($revisionItemsForComments, "globalId"))
  #foreach( $item in $revisionItemsForComments )
   
    #set( $revisionItem = $item.get("revisionItem"))
    #set( $thisId = $item.get("globalId"))

    #if( $foreach.hasNext )
      #set( $nextIndex = $foreach.index + 1 )
      #set( $nextId = $revisionItemsForComments[$nextIndex].globalId)
    #else
      #set( $nextId = false )
    #end
    
    #set( $success = $itemsGroupedById.add($revisionItem)) 

    #if( $thisId != $nextId || !$nextId )
      #set( $success = $revItemCommentsByGlobalId.add($itemsGroupedById))
      #set( $itemsGroupedById = [] )
    #end 
  #end 

#end 
#########################################################################################################################
##
##    Review Comments & Signature Macros 
##    Macro: buildReviewCommentSummary
##    Input: $commentsReviewLevel
##    Output: Table ready for opening in Word or PDF. Table details the count of comments on the Review and the count 
##            of comments on the Revision Items 
##    
##
#########################################################################################################################
#macro( buildReviewCommentSummary )

<p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='font-size:14.0pt;line-height:180%;'>
	Review Comment Summary
</span></p>

## Next check the ids of the comments for each return 
## e.g revision, review, and revision item comments, get the count of revision item comments 
<table class=MsoTableGrid border='.5pt' cellspacing=0 cellpadding=0 style='border-collapse:collapse;border:none;mso-yfti-tbllook:1184;mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td width=360 valign=top style='width:269.75pt;border:solid windowtext .5pt;background:#d9e6f2;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='font-size:10.0pt;'>
  
   Total Review Comments</span></p></p>
  <p class=MsoNormal align=center style='margin-bottom:0in;text-align:center;line-height:normal'><span style='font-size:20.0pt;'>
    $!commentsReviewLevel.size()
   </span></p>
  </td>

  <td width=360 valign=top style='width:269.75pt;border:solid windowtext .5pt;background:#ecf2f9;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='font-size:10.0pt;'>
	
	Total Revision Item Comments</span></p></p>
  <p class=MsoNormal align=center style='margin-bottom:0in;text-align:center;line-height:normal'><span style='font-size:20.0pt;'>
    #set( $count = 0 )
    #foreach( $itemGroup in $revItemCommentsByGlobalId )
      #foreach( $item in $itemGroup)
        #set( $count = $count + $item.revisionItemCommentCount  )
      #end
    #end 
    $!count
  	</span></p>
  </td>
 </tr>
</table>
#end 
#########################################################################################################################
##
##    Review Comments & Signature Macros 
##    Macro: buildReviewCommentsDetail
##    Input: none
##    Output: Table ready for opening in Word or PDF. 
##            Details the comments at the Review/Revision level.
##    
#########################################################################################################################
#macro( buildReviewCommentsDetail )

<p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='font-size:14.0pt;line-height:180%;'>
Review Comments
</span></p>

<table class=MsoTableGrid border='.5pt' cellspacing=0 cellpadding=0 width="100%" style='border-collapse:collapse;mso-table-layout-alt:fixed;border:none;mso-yfti-tbllook:1184;mso-padding-alt:0in 5.4pt 0in 5.4pt;width:100% !important;margin:0pt;'>
 <colgroup>
  <col width='11%'/>
  <col width='10%'/>
  <col width='7%'/>
  <col width='8%'/>
  ##<col width='6%'/>
  <col width='8%'/>
  <col width='50%'/>
</colgroup>
<thead>
   ## Comment Column Headings ## 
   <tr>
    <td width=11% style='background:#cccccc;padding:0in 5.4pt 0in 5.4pt;border:solid black .5pt;'>
   <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
  Date</span></p>
    </td>
    <td width=10% style='border:solid black .5pt;background:#cccccc;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
  User</span></p>
    </td>
    <td width=7% style='border:solid black .5pt;background:#cccccc;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
  Review<br>Version</span></p>
    </td>
    <td width=8% style='border:solid black .5pt;background:#cccccc;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
  Resolved</span></p>
    </td>
    <td width=8% style='border:solid black .5pt;background:#cccccc;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
  Comment Type</span></p>
    </td>
    <td width=50% style='border:solid black .5pt;background:#cccccc;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
  Comment Text</span></p>
    </td>
   </tr>
  </thead>

  #if( $commentsReviewLevel.size() > 0 )
    #set( $commentsReviewLevel = $sortTool.sort( $commentsReviewLevel, "createdDate"))

    #foreach( $reviewComment in $commentsReviewLevel )
      #set( $comment = "")
      #set( $commentDate = "")
      #set( $userId = "")
      #set( $commentAuthor = "")
      #set( $isImportant  = "")
      #set( $important = "")
      #set( $isActive = "")
      #set( $active = "")
      #set( $isResolved = "")
      #set( $resolved = "")
      #set( $commentType = "")
      #set( $commentText = "")

      #set( $comment = $reviewComment.comment ) 
      #set( $commentDate = $reviewComment.createdDate )
      #set( $userId = $reviewComment.userId )
      #set( $commentAuthor = $userSource.getUser($mathTool.toInteger($userId)))
      #set( $commentAuthor = $commentAuthor.fullName )
      #set( $isImportant = $comment.important )
      #if( $isImportant )
        #set( $important = "Yes")
      #else 
        #set( $important = "No")
      #end
      #set( $isActive = $reviewComment.isActive )
      #if( $isActive )
        #set( $active = "Yes")
      #else 
        #set( $active = "No")
      #end 
      #set( $isResolved = $reviewComment.isResolved )
      #if( $isResolved )
        #set( $resolved = "Yes")
      #else 
        #set( $resolved = "No")
      #end 
      #set( $commentType = $reviewComment.commentType ) 
      #set( $commentText = $reviewComment.commentText ) 

     <tr>
      <td width=11% style='border:solid black .5pt;border-top:none;padding:0in 5.4pt 0in 5.4pt'>
      <p class=MsoNormal style='margin-bottom:0in;'>
      #getDateTime( $commentDate, $timeZone)</p>
      </td>
      <td width=10% style='border-top:none;border-left:none;border-bottom:solid black .5pt;border-right:solid black .5pt;padding:0in 5.4pt 0in 5.4pt'>
      <p class=MsoNormal style='margin-bottom:0in;'>
      $!commentAuthor</p>
      </td>
       <td width=7% style='border-top:none;border-left:none;border-bottom:
      solid black 1.0pt;border-right:solid black .5pt;padding:0in 5.4pt 0in 5.4pt'>
      <p class=MsoNormal style='margin-bottom:0in;'><span style='font-size:10.0pt;'>
     v$!reviewComment.revision.sequenceNumber</span></p>
      </td>
      <td width=8% style='border-top:none;border-left:none;border-bottom:
      solid black 1.0pt;border-right:solid black .5pt;padding:0in 5.4pt 0in 5.4pt'>
      <p class=MsoNormal style='margin-bottom:0in;'><span style='font-size:10.0pt;'>
      $!resolved</span></p>
      </td>
      <td width=8% style='border-top:none;border-left:none;
      border-bottom:solid black .5pt;border-right:solid black .5pt;'>
      <p class=MsoNormal style='margin-bottom:0in;'>
      $!commentType
      </p>
      </td>
      <td width=50% style='border-top:none;border-left:none;
      border-bottom:solid black .5pt;border-right:solid black .5pt;'>
      <p class=MsoNormal style='margin-bottom:0in;'>
        #formatTableCell($commentText, "left", 276)     
      </p>
      </td>
     </tr> 
    #end ##foreach( $reviewComment in $commentsReviewLevel )
 
  #else 
    <tr>
      <td colspan=6 width=100% style='border:solid black .5pt;'>
      <p class=MsoNormal style='margin-bottom:0in;'>
        No comments on the review.
      </p>
      </td>
    </tr>
  #end ###if( $commentsReviewLevel )
</table>

#end 
#########################################################################################################################
##
##    Review Comments & Signature Macros 
##    Macro: buildRevisionItemsDetails
##    Input: none
##    Output: Table per revision item with comments ready for opening in Word or PDF. 
##            Details the comments at the Revision Item level.
## 
#########################################################################################################################
#macro( buildRevisionItemsDetails )
<p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='font-size:14.0pt;line-height:180%;'>
  Revision Item Comments 
  </span></p>

<div align=center>
#set( $finalRevisionItemComments = [] )

#foreach( $itemGroup in $revItemCommentsByGlobalId )
  #set( $itemComments = false)
  #set( $itemCommentsByParent = [] )
  #foreach( $revItem in $itemGroup )
    #set( $itemComments = $revItem.revisionItemComments )

  	#if( $itemComments )
  		#set( $itemComments = $sortTool.sort( $itemComments, "createdDate"))
  		#foreach( $revItemComment in $itemComments )
  			#set( $thisParent = false )
  			#set( $targetParent = false )
  			#if( !$revItemComment.parentId )
  				#set( $thisParent = $revItemComment.id )
  			#else 
  				#set( $targetParent = $revItemComment.parentId )
  			#end 

        #set( $comment = $revItemComment.comment ) ## Comment Interface object

  			#if( $comment.getActive()) ## only add Active Comments, i.e. do not show deleted comments 
  				#if( $thisParent )
  					#set( $success = $itemCommentsByParent.add({"parent":"yes", "parentId":$thisParent, "revItemComment":$revItemComment}))
  				#elseif( $targetParent )
  					#set( $success = $itemCommentsByParent.add({"parent":"no", "parentId":$targetParent, "revItemComment":$revItemComment}))
  				#end 
  			#end 
  		#end 
    #end  ##if( $itemComments )
    #if( $foreach.last )
      #set( $itemCommentsByParent = $sortTool.sort( $itemCommentsByParent, "parentId"))
      #if( $itemCommentsByParent.size() > 0 ) ## Only add Revision Items with Comments
        #set( $success = $finalRevisionItemComments.add({"revisionItem": $revItem, "comments":$itemCommentsByParent}))
      #else
        #set( $success = $finalRevisionItemComments.add({"revisionItem": $revItem, "comments":false}))
      #end
    #end 
  #end ##foreach( $revItem in $itemGroup ) 
#end ##foreach( $itemGroup in $revItemCommentsByGlobalId )


  ## Revision Item Comments ## 
  #foreach( $item in $finalRevisionItemComments )
    #set( $comments = $item.get("comments"))
    #set( $revisionItem = $item.get("revisionItem"))

    ## Revision Item Heading
    <p class=MsoNormal style='text-align:left'><span style='font-size:12.0pt;color:#595959;font-weight:600;'>
      $!revisionItem.version.document.documentKey $!revisionItem.version.document.name</span></p></p>
      #set( $desc = $revisionItem.version.document.description )
      #if( $desc.length() < 1 )
        #set( $desc = "N/A")
      #else 
        #set( $desc= "#formatRichText( $desc)")
        #set( $desc = $desc.trim())
      #end 
    <p class=MsoNormal style='text-align:left !important;'><span style='font-size:9.0pt;text-transform:uppercase;color:#595959;font-weight:bold;'>Description</span></p>
    <div align=left width=100%>$!desc</div>
    <p class=MsoNormal style='text-align:left;'><span style='font-size:9.0pt;text-transform:uppercase;color:#595959;font-weight:bold;'>Comments</span></p>

    #if( !$comments )
      <p class=MsoNormal style='margin-bottom:0in;text-align:left'>No comments present on revision item.</p>
      <p class=MsoNormal>&nbsp;</p>
    #else 
     
      <table class=MsoTableGrid border='.5pt' cellspacing=0 cellpadding=0 width="100%"
       style='border-collapse:collapse;mso-table-layout-alt:fixed;border:none;mso-padding-alt:0in 5.4pt 0in 5.4pt;width:100% !important;margin:0pt;margin-top:2pt'>
       <colgroup>
        <col width='11%'/>
        <col width='9%'/>
        <col width='7%'/>
        <col width='8%'/>
        <col width='8%'/>
        <col width='8%'/>
        <col width='50%'/>
      </colgroup>
      <thead>
    	 <tr style='mso-yfti-irow:2'>
    	  <td width=11% style='border:solid windowtext .5pt;background:#CCCCCC;padding:0in 5.4pt 0in 5.4pt'>
    	  <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
      Date</span></p>
    	  </td>
    	  <td width=9% style='border:solid windowtext .5pt;background:#CCCCCC;padding:0in 5.4pt 0in 5.4pt'>
    	  <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
    	User</span></p>
    	  </td>
    	  <td width=7% style='border:solid windowtext .5pt;background:#CCCCCC;padding:0in 5.4pt 0in 5.4pt'>
    	  <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
    	Review<br>Version</span></p>
    	  </td>
    	  <td width=8% style='border:solid windowtext .5pt;background:#CCCCCC;padding:0in 5.4pt 0in 5.4pt'>
    	  <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
    	Thread<br>Identity</span></p>
    	  </td>
    	  <td width=8% style='border:solid windowtext .5pt;background:#CCCCCC;padding:0in 5.4pt 0in 5.4pt'>
    	  <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
    	Resolved</span></p>
    	  </td>
    	  <td width=8% style='border:solid windowtext .5pt;background:#CCCCCC;padding:0in 5.4pt 0in 5.4pt'>
    	  <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
    	Comment Type</span></p>
    	  </td>
    	  <td width=50% style='border:solid windowtext .5pt;background:#CCCCCC;padding:0in 5.4pt 0in 5.4pt'>
    	  <p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='text-transform:uppercase;font-size:8pt'>
    	Comment Text<br>Highlight Quote*</span></p>
    	  </td>
    	 </tr>
      </thead>

    #if( $comments.size() > 0 )
    	#foreach( $commentByParent in $comments )
        #set( $parent = "")
        #set( $parentId = "")
        #set( $revItemComment = "")
        #set( $commentDate = "")
        #set( $userId = "")
        #set( $commentAuthor = "")
        #set( $isImportant  = "")
        #set( $important = "")
        #set( $isActive = "")
        #set( $active = "")
        #set( $isResolved = "")
        #set( $resolved = "")
        #set( $highlightQuote = "")
        #set( $commentType = "")
        #set( $commentText = "")
        #set( $color = "ffffff")
        
    	 	#set( $parent = $commentByParent.get("parent"))
        #if( $parent == "yes" )
          #set( $color = "f2f2f2")
          #set($threadIdentity = "Thread Parent")
        #else 
          #set($threadIdentity = "Thread Child") 
        #end 

    	 	#set( $parentId = $commentByParent.get("parentId"))
    	 	#set( $revItemComment = $commentByParent.get("revItemComment"))
        #set( $comment = $revItemComment.comment ) ## Comment Interface object

   
    	 	#set( $commentDate = $revItemComment.createdDate )
    		#set( $userId = $revItemComment.userId )
    		#set( $commentAuthor = $userSource.getUser($mathTool.toInteger($userId)))
    		#set( $commentAuthor = $commentAuthor.fullName )
    		#set( $isImportant = $comment.important )
    		#if( $isImportant )
    			#set( $important = "Yes")
    		#else 
    			#set( $important = "No")
    		#end
    		#set( $isActive = $revItemComment.isActive )
    		#if( $isActive )
    			#set( $active = "Yes")
    		#else 
    			#set( $active = "No")
    		#end 
    		#set( $isResolved = $revItemComment.isResolved )
    		#if( $isResolved )
    			#set( $resolved = "Yes")
    		#else 
    			#set( $resolved = "No")
    		#end 
        #set( $highlightQuote = $comment.highlightQuote)
    		#set( $commentType = $revItemComment.commentType ) 
    		#set( $commentText = $revItemComment.commentText ) 
      
    		 <tr style='mso-yfti-irow:4;mso-yfti-lastrow:yes'>
    		  <td width=11% style='border:solid windowtext .5pt;border-top:none;padding:0in 5.4pt 0in 5.4pt;background:#$color;'>
    		  <p class=MsoNormal style='margin-bottom:0in;'>
    		  #getDateTime( $commentDate, $timeZone)</p>
    		  </td>
    		  <td width=9% style='border:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt;background:#$color;'>
    		  <p class=MsoNormal style='margin-bottom:0in;'>
    		  $!commentAuthor</p>
    		  </td>
    		   <td width=7% style='border:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt;background:#$color;'>
    		  <p class=MsoNormal style='margin-bottom:0in;'><span style='font-size:10.0pt;'>
    		  v$!revItemComment.revision.sequenceNumber</span></p>
    		  </td>
    		  <td width=8% style='border:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt;background:#$color;'>
    		  <p class=MsoNormal style='margin-bottom:0in;'><span style='font-size:10.0pt;'>
    		  $!threadIdentity</span></p>
    		  </td>
    		  <td width=8% style='border:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt;background:#$color;'>
    		  <p class=MsoNormal style='margin-bottom:0in;'><span style='font-size:10.0pt;'>
    		  $!resolved</span></p>
    		  </td>
    		  <td width=8% style='border:solid windowtext .5pt;background:#$color;'>
    		  <p class=MsoNormal style='margin-bottom:0in;'>
    		  $!commentType
    		  </p>
    		  </td>
    		  <td width=50% style='border:solid windowtext .5pt;background:#$color;'>
    		  <p class=MsoNormal style='margin-bottom:0in;'>
            #if( $highlightQuote )<span style='background-color:#ffdd99'>$!highlightQuote*</span>#end
    		  	#if( $commentText.length() > 0 )#formatTableCell($commentText, "left", 276) #end 
    		  </p>
    		  </td>
    		 </tr>
    	#end ##foreach( $revItemComment in $itemComments )
        
  	#else 
  		<tr>
  		  <td colspan=7 width=100% style='border:solid black .5pt;'>
  		  <p class=MsoNormal style='margin-bottom:0in;'>
  		  	No comments present on revision item.
  		  </p>
  		  </td>
  		</tr>
  	#end ###if( $itemCommentsByParent.size() > 0 )
    </table>
    <p class=MsoNormal>&nbsp;</p>
  #end ##if( !$comments ) 
  #end ##foreach( $revisionItem in $revisionItems )
</div>
#end 
#########################################################################################################################
##
##    Review Comments & Signature Macros 
##    Macro: compareEventDates
##    Input: $eventDate
##    Output: $printEvent, boolean which flags if the event should be printed
## 
#########################################################################################################################
#macro( compareEventDates $eventDate )

## Ensure that this event is the latest state of the 'Review activity' given the respective review or revision. 
## To validate The 'Review activity' is visible in the Review Center via 'Review Stats' > 'Review activity'

#set( $printEvent = false )
  
  ## Check if this event occurred before the next revision created date if user input revision ## 
  #if( $revisionInput && $nextRev && $eventDate.compareTo($nextRevCreatedDate) < 0 || !$revisionInput || !$nextRev )

    ## Check if this event occurred after a potential 'Review reopened' event
    #if( $reviewReopened && $eventDate.compareTo($reviewReopenDate) > 0 || !$reviewReopened ) 

      ## Check if this event occurred after any 'Review marked as not finalized events'
      #if( $reviewMarkedAsNotFinalized  && $eventDate.compareTo( $reviewMarkedNotFinalDate ) > 0 || !$reviewMarkedAsNotFinalized)        
        #set( $printEvent = true )
      #end 

    #end 
  #end 
  
#end 
#########################################################################################################################
## **********************************************************************************************************************
##
##  ITEM_TYPE_MACROS: Item Type Formatting Macros
## **********************************************************************************************************************
#########################################################################################################################
##
## Create a heading with the name of the document object and a bookmark named by the Jama API ID 
## bookmarks are used for cross-references
#macro( formatHeading $doc $hierarchyLevel $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #if( $format == "doc")
      #if( $hierarchyLevel < 7 )
        <h$hierarchyLevel style='text-align:left !important'>
          <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
        </h$hierarchyLevel>
      #else
        <p class=MsoHeading7 style='text-align:left !important'>
          <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
        </p>
      #end
    #else ## pdf
      #if( $hierarchyLevel < 7 )
          <h$hierarchyLevel style='text-align:left !important'><span id=$docID>$!doc.name</span></h$hierarchyLevel>
      #else
          <p class=MsoHeading7 style='text-align:left !important'><span id=$docID>$!doc.name</span></p>
      #end
    #end ##if( $format == "doc")...#else ## 
  #end
#end
##
## Simple Name and Description, suitable for Text Items similar item types
#macro( formatNameDescription $doc $hierarchyLevel $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #if( $format == "doc")
      #if( $hierarchyLevel < 7 )
        <h$hierarchyLevel style='text-align:left !important'>
          <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
        </h$hierarchyLevel>
      #else
        <p class=MsoHeading7 style='text-align:left !important'>
          <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
        </p>
      #end
    #else ## pdf
      #if( $hierarchyLevel < 7 )
          <h$hierarchyLevel style='text-align:left !important'><span id=$docID>$!doc.name</span></h$hierarchyLevel>
      #else
          <p class=MsoHeading7 style='text-align:left !important'><span id=$docID>$!doc.name</span></p>
      #end
    #end ##if( $format == "doc")...#else ## 
    
    #formatRichText($doc.description )

  #end
#end
##
## Description Only
#macro( formatDescription $doc $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #formatRichText($doc.description )
  #end
#end
##
#########################################################################################################################
##          BODY_MACRO - Creates the body of the report
##          Input: None
##          Return: body of the report
#########################################################################################################################
#macro( createBody )

<body lang=EN-US link=blue vlink="#954F72" style='tab-interval:.5in'>
<div class=WordSectionLandscape>

#################################################################################################
########                                                                                       ## 
########  WORD HEADERS & FOOTERS                                                               ##
########                                                                                       ##
#################################################################################################

#if( $format == "doc" )
  <table style='margin-left:15in'>
    <tr style='height:.1in;mso-height-rule:exactly'>
      <td>
        <div style='mso-element:footnote-separator' id=fs>

          <p class=MsoNormal><span style='mso-special-character:footnote-separator'><![if !supportFootnotes]>

          <hr align=left size=1 width="33%">

          <![endif]></span></p>

        </div>

        <div style='mso-element:footnote-continuation-separator' id=fcs>

          <p class=MsoNormal><span style='mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

          <hr align=left size=1>

          <![endif]></span></p>

        </div>

        <div style='mso-element:endnote-separator' id=es>

          <p class=MsoNormal><span style='mso-special-character:footnote-separator'><![if !supportFootnotes]>

          <hr align=left size=1 width="33%">

          <![endif]></span></p>

        </div>

        <div style='mso-element:endnote-continuation-separator' id=ecs>

          <p class=MsoNormal><span style='mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

          <hr align=left size=1>

          <![endif]></span></p>

        </div>

        ## Content Header
        <div style='mso-element:header' id=pageHeader>


      <table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0 style='border-collapse:collapse;mso-table-layout-alt:fixed;border:none;
      mso-yfti-tbllook:1184;mso-padding-alt:0in 5.4pt 0in 5.4pt;mso-border-insideh:none;mso-border-insidev:none;width:100%'>
        <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
          <td width=50% valign=top style='padding:0in 5.4pt 0in 5.4pt;border:none;'>
            <p class=MsoHeader><span style='font-size:10.0pt;'>
            REV-$!revisionForComments.review.id $!revisionForComments.review.name v$!revisionForComments.sequenceNumber
            </span></p>
          </td>
          <td width=50% valign=top style='padding:0in 5.4pt 0in 5.4pt;border:none;'>
            <p class=MsoHeader align=right style='text-align:right'><span style='font-size:10.0pt;'>
            $!project.name</span></p>
          </td>
        </tr>
      </table>

        </div>

        ## Content Footer
        <div style='mso-element:footer' id=pageFooter>             
      <p class=MsoFooter align=center style='text-align:center'><span style='font-size:10.0pt;'>Exported on #getDate($dateTool.date, $timeZone) by $userSource.currentUser.fullName</span></p>
        </div>
      </td>
    </tr>
  </table>


#elseif( $format == "pdf" )
#################################################################################################
########                                                                                       ## 
########  PDF HEADERS & FOOTERS                                                                ##
########                                                                                       ##
#################################################################################################
<div class="pageHeader" align="center">  
  <table class="pageHeader-table" style='border:none;'>
      <tr>
    <td width=50% valign=top style='padding:0in 5.4pt 0in 5.4pt;border:none;'>
      <p class=MsoHeader><span style='font-size:10.0pt;'>
      REV-$!revisionForComments.review.id $!revisionForComments.review.name v$!revisionForComments.sequenceNumber 
      </span></p>
    </td>
    <td width=50% valign=top style='padding:0in 5.4pt 0in 5.4pt;border:none;'>
      <p class=MsoHeader align=right style='text-align:right'><span style='font-size:10.0pt;'>
      $!project.name</span></p>
    </td>
      </tr>
  </table>
</div>

<div class="pageFooter" align="center">
    <p class=MsoFooter align=center style='text-align:center'><span style='font-size:10.0pt;'>Exported on #getDate($dateTool.date, $timeZone) by $userSource.currentUser.fullName</span></p>
</div>
#end 
#################################################################################################
########                                                                                       ## 
########  REVIEW CENTER COMMENTS REPORT BODY OUTPUT                                            ##
########                                                                                       ##                                              
#################################################################################################
#if( $printParameterWarningMessage )
  <p class=MsoNormal style='margin-bottom:0in;line-height:normal;color:red;'>
    Before running the report please enter a review id in the parameter field 'Review Id', e.g. REV-x. It is not case sensitive so rev-x would also be acceptable.
  </p>
#else 

<p class=MsoNormal #if( $format == 'doc') style='font-weight:600'; #else style='font-weight:900' #end><span style='font-size:20.0pt;'>
Review Comments & Signatures
</span></p></p>

## REVIEW INITIATION & CLOSURE INFO ## 

#### Moderator Initiated Review (create event available on review object) ## 
####--------------------------------
#set( $reviewInitiated = $eventSource.getAllEventsForObjectsByAction([2],[$revisionForComments.review.id],18,"Review initiated"))


#### Gather 'Review reopened' events (update event available on revision object) ## 
####--------------------------------
#set( $reviewReopened = $eventSource.getAllEventsForObjectsByAction([4],[$revisionForComments.id],19,"Review reopened"))
## <tr><td width=100% colspan=2><p>Debug-Review Reopened: $reviewReopened </p></td><tr>
#if( $reviewReopened.size() > 0 )
  #set( $idx = $reviewReopened.size() - 1 )
  #set( $reviewReopenDate = $reviewReopened[$idx].getEventDate())
#else 
  #set( $reviewReopened = false )
#end 


#### Moderator Closed Revision? (update event available on revision object)
####--------------------------------
#set( $reviewAutoClose = false )
#set( $reviewClosed = $eventSource.getAllEventsForObjectsByAction([4],[$revisionForComments.id],19,"Review closed"))
#if( $reviewClosed.size() > 0 )
  #set( $idx = $reviewClosed.size() - 1) ## get the last review closure activity for this revision 
  #set( $revClosedUser= $reviewClosed[$idx].eventUser )
  #set( $revClosedEventDate = $reviewClosed[$idx].getEventDate())
  #if( !$reviewClosed[$idx].createdBy )
    #set( $reviewAutoClose = true)
    #set( $reviewAutoCloseDate = $revClosedEventDate )
  #end 
#else 
  #set( $reviewClosed = false )
#end 

#### Gather 'Review marked as not finalized' events (update event available on review object) ##
####--------------------------------
#set( $reviewMarkedAsNotFinalized = $eventSource.getAllEventsForObjectsByAction([4],[$revisionForComments.review.id],18,"Review marked as not finalized"))
##<tr><td width=100% colspan=2><p>Debug-Review Marked Not Finalized:  $reviewMarkedAsNotFinalized </p></td><tr>
#if( $reviewMarkedAsNotFinalized.size() > 0 )
  #set( $idx = $reviewMarkedAsNotFinalized.size() - 1 )
  #set( $reviewMarkedNotFinalDate = $reviewMarkedAsNotFinalized[$idx].getEventDate())
#else 
  #set( $reviewMarkedAsNotFinalized = false )
#end 


#### Review marked as finalized? (update event available on review object)
####--------------------------------
#set( $reviewMarkedAsFinalized = $eventSource.getAllEventsForObjectsByAction([4],[$revisionForComments.review.id],18,"Review marked as finalized")) 
 ##<tr><td width=100% colspan=2><p>Debug-Review Marked As Finalized: $reviewMarkedAsFinalized</p></td><tr>
#set( $idx = $reviewMarkedAsFinalized.size() - 1) ## get the last marked finalized activity for this revision 
#if( $reviewMarkedAsFinalized.size() > 0 )
  #set( $idx = $reviewMarkedAsFinalized.size() - 1 )
   #set( $revMarkedFinalUser = $reviewMarkedAsFinalized[$idx].eventUser)
   #set( $revMarkedFinalDate = $reviewMarkedAsFinalized[$idx].getEventDate())
#else 
  #set( $reviewMarkedAsFinalized = false )
#end 

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0 style='border-collapse:collapse;border:none;mso-border-insideh:none;mso-border-insidev:none;width:100%'>
	<tr>
		<td width=23%>
    <p class=MsoNormal #if( $format == 'doc') style='font-weight:600;line-height:normal'; #else style='font-weight:900;line-height:110%' #end>
      <span style='font-size:9.0pt;color:#404040;'>REVIEW NAME & VERSION:</span></p>
		</td>
		<td width=77%>
			<p class=MsoNormal style='margin-bottom:0in;line-height:normal;color:#404040;'>
			REV-$!revisionForComments.review.id $!revisionForComments.review.name v$!revisionForComments.sequenceNumber
			</p>
		</td>
		</tr>
    #### Moderator Initiated Review 
    ####--------------------------------
		<tr>
  		<td width=23%><p class=MsoNormal #if( $format == 'doc') style='font-weight:600;line-height:normal'; #else style='font-weight:900;line-height:110%' #end>
          <span style='font-size:9.0pt;color:#404040;'>MODERATOR INITIATED REVIEW:</span></p>
  		</td>
  		<td width=77%><p class=MsoNormal style='margin-bottom:0in;color:#404040;'>
  			#if( $reviewInitiated.size() > 0 )
  			  #set( $eventUser = $reviewInitiated[0].eventUser) ## moderator from the initial creation of this review
  			#end 
  			#getDateTime( $revisionForComments.review.createdDate, $timeZone) #if( $reviewInitiated.size() > 0 ) by $!eventUser.fullName #end
  			</p>
  		</td>
		</tr>
    #### Moderator closed revision? 
    ####-------------------------------
		<tr>
  		<td width=23%><p class=MsoNormal #if( $format == 'doc') style='font-weight:600;line-height:normal'; #else style='font-weight:900;line-height:110%' #end>
          <span style='font-size:9.0pt;color:#404040;'>MODERATOR CLOSED REVISION:</span></p>
  		</td>
  		<td width=77%><p class=MsoNormal style='margin-bottom:0in;line-height:normal;color:#404040;'>
        #if( $reviewClosed && !$reviewAutoClose )
          #compareEventDates( $revClosedEventDate )
          #if( $printEvent )
            #getDateTime($!revClosedEventDate, $timeZone) $!revClosedUser.fullName closed the review before deadline date and time.
          #else 
            No
          #end 
        #else 
          No 
  			#end 
        </p>
  		</td>
		</tr>
    #### Review auto closed? 
    ####--------------------------------
		<tr>
    	<td width=23%><p class=MsoNormal #if( $format == 'doc') style='font-weight:600;line-height:normal'; #else style='font-weight:900;line-height:110%' #end>
        <span style='font-size:9.0pt;color:#404040;'>REVIEW AUTO CLOSE:</span></p>
    	</td>
    	<td width=77%><p class=MsoNormal style='margin-bottom:0in;line-height:normal;color:#404040;'>
        #if( $reviewAutoClose )
          #compareEventDates( $reviewAutoCloseDate )
          #if( $printEvent )
            #getDateTime($reviewAutoCloseDate, $timeZone) Review closed, reaching the review deadline date and time.
          #else 
            No 
          #end 
        #else 
          No 
        #end 
    		</p>
    	</td>
		</tr>
    #### Review marked as finalized? 
    ####--------------------------------
		<tr>
		<td width=23%><p class=MsoNormal #if( $format == 'doc') style='font-weight:600;line-height:normal'; #else style='font-weight:900;line-height:110%' #end>
        <span style='font-size:9.0pt;color:#404040;'>REVIEW MARKED AS FINALIZED:</span></p>
		</td>
		<td width=77%><p class=MsoNormal style='margin-bottom:0in;line-height:normal;color:#404040;'>
        #if( $reviewMarkedAsFinalized )
          #compareEventDates( $revMarkedFinalDate )
          #if( $printEvent )
            #getDateTime($revMarkedFinalDate, $timeZone) by $!revMarkedFinalUser.fullName
           #else 
            No 
          #end 
        #else 
          No 
        #end 
      </p>
		</td>
	</tr>
</table>
<p class=MsoNormal>&nbsp;</p>

## Approvers & Reviewers table ## 
##--------------------------------
#buildApproversReviewers()

<p class=MsoNormal>&nbsp;</p>

## Approvers Signature table ## 
##--------------------------------
#buildReviewSignatures()

#if( $format=='pdf')
  <p style="page-break-after:always;"></p>
#else 
  <br clear=all style='mso-special-character:line-break;page-break-before:always'>
#end 

## gather all the revision items, and ensure comment counts tally for each revision up to 
## the exported review revision
##--------------------------------
#getRevisionItemsAndReviewComments()

## Comment count summary table ## 
##--------------------------------
#buildReviewCommentSummary()
<p class=MsoNormal>&nbsp;</p>

## Review comments tables ## 
##--------------------------------
#buildReviewCommentsDetail()
<p class=MsoNormal>&nbsp;</p>

## Revision items with comment table per revision item ## 
##--------------------------------
#buildRevisionItemsDetails()

#end ##if( $printParameterWarningMessage )

</div>
</body>
#end
#########################################################################################################################
#########################################################################################################################
##
##  REPORT_BODY
##
#########################################################################################################################

#set( $body = "#createBody()")
#if( $format == "doc" )
  #convertEquals( $body )
#else
  $body
#end


</html>
#########################################################################################################################
##
##  MS_WORD_OBJECTS
##
#########################################################################################################################

#if( $format == "doc" )
#########################################################################################################################
##  Embed images
#########################################################################################################################

#foreach( $f in $figure)
$f
#end

#########################################################################################################################

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/item0001.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<b:Sources xmlns:b=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography" xmlns=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography" SelectedStyle=3D"/APASixthEditionOfficeOnline.xsl" StyleName=3D"APA" Version=3D"6"/>

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/props001.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?>
<ds:datastoreItem ds:itemID=3D"{A1D0A804-CF3A-234A-AB79-452ECE125E33}" xmlns:ds=3D"http://schemas.openxmlformats.org/officeDocument/2006/customXml"><ds:schemaRefs><ds:schemaRef ds:uri=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography"/></ds:schemaRefs></ds:datastoreItem>

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/themedata.thmx
Content-Transfer-Encoding: base64
Content-Type: application/vnd.ms-officetheme

UEsDBBQABgAIAAAAIQDp3g+//wAAABwCAAATAAAAW0NvbnRlbnRfVHlwZXNdLnhtbKyRy07DMBBF
90j8g+UtSpyyQAgl6YLHjseifMDImSQWydiyp1X790zSVEKoIBZsLNkz954743K9Hwe1w5icp0qv
8kIrJOsbR12l3zdP2a1WiYEaGDxhpQ+Y9Lq+vCg3h4BJiZpSpXvmcGdMsj2OkHIfkKTS+jgCyzV2
JoD9gA7NdVHcGOuJkTjjyUPX5QO2sB1YPe7l+Zgk4pC0uj82TqxKQwiDs8CS1Oyo+UbJFkIuyrkn
9S6kK4mhzVnCVPkZsOheZTXRNajeIPILjBLDsAyJX89nIBkt5r87nons29ZZbLzdjrKOfDZezE7B
/xRg9T/oE9PMf1t/AgAA//8DAFBLAwQUAAYACAAAACEApdan58AAAAA2AQAACwAAAF9yZWxzLy5y
ZWxzhI/PasMwDIfvhb2D0X1R0sMYJXYvpZBDL6N9AOEof2giG9sb69tPxwYKuwiEpO/3qT3+rov5
4ZTnIBaaqgbD4kM/y2jhdj2/f4LJhaSnJQhbeHCGo3vbtV+8UNGjPM0xG6VItjCVEg+I2U+8Uq5C
ZNHJENJKRds0YiR/p5FxX9cfmJ4Z4DZM0/UWUtc3YK6PqMn/s8MwzJ5PwX+vLOVFBG43lExp5GKh
qC/jU72QqGWq1B7Qtbj51v0BAAD//wMAUEsDBBQABgAIAAAAIQBreZYWgwAAAIoAAAAcAAAAdGhl
bWUvdGhlbWUvdGhlbWVNYW5hZ2VyLnhtbAzMTQrDIBBA4X2hd5DZN2O7KEVissuuu/YAQ5waQceg
0p/b1+XjgzfO3xTVm0sNWSycBw2KZc0uiLfwfCynG6jaSBzFLGzhxxXm6XgYybSNE99JyHNRfSPV
kIWttd0g1rUr1SHvLN1euSRqPYtHV+jT9yniResrJgoCOP0BAAD//wMAUEsDBBQABgAIAAAAIQC2
9GeYkwcAAMkgAAAWAAAAdGhlbWUvdGhlbWUvdGhlbWUxLnhtbOxZzYsbyRW/B/I/NH2X9dWtj8Hy
ok/P2jO2sWSHPdZIpe7yVHeJqtKMxWII3lMugcAm5JCFve0hhCzswi655I8x2CSbPyKvqlvdVVLJ
nhkcMGFGMHSXfu/Vr9579d5T1d3PXibUu8BcEJb2/Pqdmu/hdM4WJI16/rPZpNLxPSFRukCUpbjn
b7DwP7v361/dRUcyxgn2QD4VR6jnx1KujqpVMYdhJO6wFU7huyXjCZLwyqPqgqNL0JvQaqNWa1UT
RFLfS1ECah8vl2SOvZlS6d/bKh9TeE2lUANzyqdKNbYkNHZxXlcIsRFDyr0LRHs+zLNglzP8Uvoe
RULCFz2/pv/86r27VXSUC1F5QNaQm+i/XC4XWJw39Jw8OismDYIwaPUL/RpA5T5u3B63xq1Cnwag
+RxWmnGxdbYbwyDHGqDs0aF71B416xbe0N/c49wP1cfCa1CmP9jDTyZDsKKF16AMH+7hw0F3MLL1
a1CGb+3h27X+KGhb+jUopiQ930PXwlZzuF1tAVkyeuyEd8Ng0m7kyksUREMRXWqKJUvloVhL0AvG
JwBQQIokST25WeElmkMUDxElZ5x4JySKIfBWKGUChmuN2qTWhP/qE+gn7VF0hJEhrXgBE7E3pPh4
Ys7JSvb8B6DVNyBvf/75zesf37z+6c1XX715/fd8bq3KkjtGaWTK/fLdH/7zzW+9f//w7S9f/zGb
ehcvTPy7v/3u3T/++T71sOLSFG//9P27H79/++ff/+uvXzu09zk6M+EzkmDhPcKX3lOWwAId/PEZ
v57ELEbElOinkUApUrM49I9lbKEfbRBFDtwA23Z8ziHVuID31y8swtOYryVxaHwYJxbwlDE6YNxp
hYdqLsPMs3UauSfnaxP3FKEL19xDlFpeHq9XkGOJS+UwxhbNJxSlEkU4xdJT37FzjB2r+4IQy66n
ZM6ZYEvpfUG8ASJOk8zImRVNpdAxScAvGxdB8Ldlm9Pn3oBR16pH+MJGwt5A1EF+hqllxvtoLVHi
UjlDCTUNfoJk7CI53fC5iRsLCZ6OMGXeeIGFcMk85rBew+kPIc243X5KN4mN5JKcu3SeIMZM5Iid
D2OUrFzYKUljE/u5OIcQRd4TJl3wU2bvEPUOfkDpQXc/J9hy94ezwTPIsCalMkDUN2vu8OV9zKz4
nW7oEmFXqunzxEqxfU6c0TFYR1Zon2BM0SVaYOw9+9zBYMBWls1L0g9iyCrH2BVYD5Adq+o9xQJ6
JdXc7OfJEyKskJ3iiB3gc7rZSTwblCaIH9L8CLxu2nwMpS5xBcBjOj83gY8I9IAQL06jPBagwwju
g1qfxMgqYOpduON1wy3/XWWPwb58YdG4wr4EGXxtGUjspsx7bTND1JqgDJgZgi7DlW5BxHJ/KaKK
qxZbO+WW9qYt3QDdkdX0JCT9YAe00/uE/7veBzqMt3/5xrEPPk6/41ZsJatrdjqHksnxTn9zCLfb
1QwZX5BPv6kZoXX6BEMd2c9Ytz3NbU/j/9/3NIf2820nc6jfuO1kfOgwbjuZ/HDl43QyZfMCfY06
8MgOevSxT3Lw1GdJKJ3KDcUnQh/8CPg9s5jAoJLTJ564OAVcxfCoyhxMYOEijrSMx5n8DZHxNEYr
OB2q+0pJJHLVkfBWTMChkR526lZ4uk5O2SI77KzX1cFmVlkFkuV4LSzG4aBKZuhWuzzAK9RrtpE+
aN0SULLXIWFMZpNoOki0t4PKSPpYF4zmIKFX9lFYdB0sOkr91lV7LIBa4RX4we3Bz/SeHwYgAkJw
HgfN+UL5KXP11rvamR/T04eMaUUANNjbCCg93VVcDy5PrS4LtSt42iJhhJtNQltGN3gihp/BeXSq
0avQuK6vu6VLLXrKFHo+CK2SRrvzPhY39TXI7eYGmpqZgqbeZc9vNUMImTla9fwlHBrDY7KC2BHq
NxeiEdy8zCXPNvxNMsuKCzlCIs4MrpNOlg0SIjH3KEl6vlp+4Qaa6hyiudUbkBA+WXJdSCufGjlw
uu1kvFziuTTdbowoS2evkOGzXOH8VovfHKwk2RrcPY0Xl94ZXfOnCEIsbNeVARdEwN1BPbPmgsBl
WJHIyvjbKUx52jVvo3QMZeOIrmKUVxQzmWdwncoLOvqtsIHxlq8ZDGqYJC+EZ5EqsKZRrWpaVI2M
w8Gq+2EhZTkjaZY108oqqmq6s5g1w7YM7NjyZkXeYLU1MeQ0s8JnqXs35Xa3uW6nTyiqBBi8sJ+j
6l6hIBjUysksaorxfhpWOTsftWvHdoEfoHaVImFk/dZW7Y7dihrhnA4Gb1T5QW43amFoue0rtaX1
rbl5sc3OXkDyGEGXu6ZSaFfCyS5H0BBNdU+SpQ3YIi9lvjXgyVtz0vO/rIX9YNgIh5VaJxxXgmZQ
q3TCfrPSD8NmfRzWa6NB4xUUFhkn9TC7sZ/ABQbd5Pf2enzv7j7Z3tHcmbOkyvTdfFUT13f39cbh
u3uPQNL5stWYdJvdQavSbfYnlWA06FS6w9agMmoN26PJaBh2upNXvnehwUG/OQxa406lVR8OK0Gr
puh3upV20Gj0g3a/Mw76r/I2BlaepY/cFmBezevefwEAAP//AwBQSwMEFAAGAAgAAAAhAA3RkJ+2
AAAAGwEAACcAAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFnZXIueG1sLnJlbHOEj00KwjAU
hPeCdwhvb9O6EJEm3YjQrdQDhOQ1DTY/JFHs7Q2uLAguh2G+mWm7l53JE2My3jFoqhoIOumVcZrB
bbjsjkBSFk6J2TtksGCCjm837RVnkUsoTSYkUiguMZhyDidKk5zQilT5gK44o49W5CKjpkHIu9BI
93V9oPGbAXzFJL1iEHvVABmWUJr/s/04GolnLx8WXf5RQXPZhQUoosbM4CObqkwEylu6usTfAAAA
//8DAFBLAQItABQABgAIAAAAIQDp3g+//wAAABwCAAATAAAAAAAAAAAAAAAAAAAAAABbQ29udGVu
dF9UeXBlc10ueG1sUEsBAi0AFAAGAAgAAAAhAKXWp+fAAAAANgEAAAsAAAAAAAAAAAAAAAAAMAEA
AF9yZWxzLy5yZWxzUEsBAi0AFAAGAAgAAAAhAGt5lhaDAAAAigAAABwAAAAAAAAAAAAAAAAAGQIA
AHRoZW1lL3RoZW1lL3RoZW1lTWFuYWdlci54bWxQSwECLQAUAAYACAAAACEAtvRnmJMHAADJIAAA
FgAAAAAAAAAAAAAAAADWAgAAdGhlbWUvdGhlbWUvdGhlbWUxLnhtbFBLAQItABQABgAIAAAAIQAN
0ZCftgAAABsBAAAnAAAAAAAAAAAAAAAAAJ0KAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFn
ZXIueG1sLnJlbHNQSwUGAAAAAAUABQBdAQAAmAsAAAAA

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/colorschememapping.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"yes"?>
<a:clrMap xmlns:a=3D"http://schemas.openxmlformats.org/drawingml/2006/main" bg1=3D"lt1" tx1=3D"dk1" bg2=3D"lt2" tx2=3D"dk2" accent1=3D"accent1" accent2=3D"accent2" accent3=3D"accent3" accent4=3D"accent4" accent5=3D"accent5" accent6=3D"accent6" hlink=3D"hlink" folHlink=3D"folHlink"/>

#########################################################################################################################
##
##  9. WORD_HEADER_FOOTER: MS Word Header / Footer Definition
##  Removed due to Word for Mac bug
##
#########################################################################################################################
#*
------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/header.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="utf-8"

<html xmlns:v=3D"urn:schemas-microsoft-com:vml"
xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns:dt=3D"uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml"
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 15">
<meta name=3DOriginator content=3D"Microsoft Word 15">
<link id=3DMain-File rel=3DMain-File href=3D"../WordTemplate.htm">
<![if IE]>
<base href=3D"file:///C:/D993472D/WordTemplate.fld/header.htm" id=3D"webarch_temp_base_tag">
<![endif]><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"2049"/>
</xml><![endif]-->
</head>

<body lang=3DEN-US link=3Dblue vlink=3D"#954F72">

<div style=3D'mso-element:footnote-separator' id=3Dfs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1 width=3D"33%">

<![endif]></span></p>

</div>

<div style=3D'mso-element:footnote-continuation-separator' id=3Dfcs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1>

<![endif]></span></p>

</div>

<div style=3D'mso-element:endnote-separator' id=3Des>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1 width=3D"33%">

<![endif]></span></p>

</div>

<div style=3D'mso-element:endnote-continuation-separator' id=3Decs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1>

<![endif]></span></p>

</div>

<div style=3D'mso-element:header' id=3DpageHeader>

  <p class=3DMsoHeader>$project.name
  <w:PTab Alignment=3D"CENTER" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>
  <w:PTab Alignment=3D"RIGHT" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>$title</p>

</div>

<![if !supportTextWrap]><br clear=3DALL>
<![endif]>

<p class=3DMsoFooter style=3D'margin-right:.25in'>&nbsp;</p>

</div>

<div style=3D'mso-element:footer' id=3DpageFooter>

  <p class=3DMsoFooter>$project.name
    <w:PTab Alignment=3D"CENTER" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab><span style=3D'color:gray'>Confidential. $project.organization.name</span>
    <w:PTab Alignment=3D"RIGHT" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>
    Page&nbsp;<!--[if supportFields]><span style=3D'mso-element:field-begin'></span>PAGE <span style=3D'mso-element:field-separator'></span>
    <![endif]-->2<!--[if supportFields]><span style=3D'mso-element:field-end'></span><![endif]-->&nbsp;of&nbsp;<span style=3D'mso-field-code:" NUMPAGES  "'>4</span></p>
  </p>

</div>

<div style=3D'mso-element:header' id=3DtitlepageHeader>

<p class=3DMsoHeader>&nbsp;</p>

<p class=3DMsoHeader align=3Dright style=3D'text-align:right'>&nbsp;</p>

</div>

<div style=3D'mso-element:footer' id=3DtitlepageFooter>

<p class=3DMsoFooter style=3D'text-align:center'>
  &copy; $project.organization.name, All Right Reserved. This document may not in any form be reproduced, distributed or utilized, in whole or in part without prior, express written consent of $project.organization.name.
</p>

</div>

</body>

</html>
*#
#########################################################################################################################

#########################################################################################################################
##
##  10. WORD_EMBEDDED_FILE_LIST
##
#########################################################################################################################

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/filelist.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml; charset="utf-8"

<xml xmlns:o=3D"urn:schemas-microsoft-com:office:office">
 <o:MainFile HRef=3D"../WordTemplate.htm"/>
 <o:File HRef=3D"item0001.xml"/>
 <o:File HRef=3D"props001.xml"/>
 <o:File HRef=3D"themedata.thmx"/>
 <o:File HRef=3D"colorschememapping.xml"/>
##<o:File HRef=3D"header.htm"/>
 #foreach( $file in $files)
 #convertEquals($file)
 #end
 <o:File HRef=3D"filelist.xml"/>
</xml>
------=_NextPart_01D506B0.1F52D2B0--
#end
