#if( $format == "doc" )
MIME-Version: 1.0
Content-Type: multipart/related; boundary="----=_NextPart_01D506B0.1F52D2B0"
#end

## ======================================================================================================================
## Name: Test_Results_Grouped_By_Test_Case_V3.vm 
## 
## Description: Non-Context Sensitive Report ran to gather test case and test run data organized into tables 
##              grouped by test case sections
##
## ======================================================================================================================
## MODIFICATION HISTORY 
## 
## Date         Revision   Person            Comments 
## -----------  ---------  ----------------  ---------------------------------- 
## 2021-10-19   1.0        Liam Rotchford    -Intial Build updating the Test Results - Grouped By Test Case Report to use
##                                            the master template due to errors in test run steps having images.
##                                            
##
##
## ======================================================================================================================
##
## Report Criteria:
## ---------------------------    
##
##    Report Criteria:
##    ------------------------------------
##      Note: First two criteria are utilized in master template, however if report does not use said criteria 
##            then remove from this list.
##      Note: If being used this criteria will need to be added to the report configuration.
##      
##
##      Type:       Display Name:           Report Global Variable:
##      ------------------------------------------------------------
##      Test Plan   Test Plan               report_testPlanId
##    
##
## ======================================================================================================================
##
##
#########################################################################################################################
#########################################################################################################################
##
##  Report Features
#########################################################################################################################
##
##  - Export in HTML, PDF or Word supported
##  - Document properties loaded from custom fields on a set or component
##  - Document Revision Loaded from most recent non-review baseline of the items.  Asterisk added if some items have 
##    changed sinec the msot recent non-review baseline.
##  - Export from project explorer or baseline
##  - Exclude items with a status listed in $excludedStatuses
##  - Numbered captions for figures, tables and equations
##  - Jama hyperlinks to items in the same document converted to Word cross-references
##  - Tables formatted and resized to fit the page width
##  - Images resized to fit the page
##  - All text formatted consistently
##  - Macro for all item types in the Automotive VSO
##
##
#########################################################################################################################
#########################################################################################################################
##
##  Report Issue list
#########################################################################################################################
##  
##  https://jama-arolufs.jamacloud.com/perspective.req#/containers/2444332?projectId=20374
##
#########################################################################################################################
#########################################################################################################################
##
##  Jama Configuration Requirements
#########################################################################################################################
##
##  Valid Export Scenarios
##  - Export Component or Set from Project Explorer 
##  - Export baselined Component or Set from baseline view
##  Required fields for full functionality
##  Set or Component (whichever is the parent of a single document)
##  - Author(s): Text Field
##  - Approvers: Rich Text Field
##  - Document ID: Text Field
##  - Document Status: Text Field or Pick List
##  - Change History: Rich TextText Field
##  All Item Types that could contain Figures, Tables or Equations
##  - Object Type: Pick List containing at least (Text, Figure, Table, Equation)
##
#########################################################################################################################
#########################################################################################################################
##
##  Installation Instructions
#########################################################################################################################
##
## Add a new report in Jama with the following options:
##  -Report Formats: Micosoft Word
##  -Scope: Organization
##  -Organization: Select yours
##  -Visible to Users: true
##  -Context Sensitive: true
##
#########################################################################################################################
##
##  Report Table of Contents
#########################################################################################################################
##
##  1. DATA_SOURCES
##  2. CONSTANTS
##  3. WORD_HTML_HEADER
##  4. PDF_HTML_HEADER
##  5. GENERAL_STYLE_SHEETS
##  6. PDF_STYLE_SHEETS
##  7. TABLE_STYLE_SHEETS
##  8. MACROS
##  8.1 STANDARD_MACROS
##  8.2 ITEM_TYPE_MACROS
##  8.3 BODY_MACRO
##  8.3.1 TITLE_PAGE
##  8.3.2 TABLE_OF_CONTENTS
##  8.3.3 TABLE_OF_FIGURES
##  8.3.4 TABLE_OF_TABLES
##  8.3.5 CHANGE_HISTORY
##  8.3.6 OUTPUT_DOCUMENT_LIST
##  8.3.6.1 ITEM_TYPE_MAP
##  9. DOCUMENT_INITIALIZATION
##  10. REPORT_BODY
##  11. PDF_HEADER_FOOTER
##  12. MS_WORD_OBJECTS
##  13. WORD_HEADER_FOOTER
##  14. WORD_EMBEDDED_FILE_LIST
##
#########################################################################################################################
##
##  Instructions for Customizing
#########################################################################################################################
##  
##  1. Location the section nanmed TITLE_PAGE
##  2. Replace with the content with the desired title page
##  3. Location the section nanmed HEADER_FOOTER
##  4. Replace the header and footer content as desired
##  5. Locate the section named ITEM_TYPE_MAP
##  6. Add a new mapping for the desired item type using an existing format macro or a newly defined one
##  7. Location the section named ITEM_TYPE_MACROS
##  8. Create a macro for the new item types at the end of the list of macros. Use the existing macros as examples.
##
#########################################################################################################################
##
##  1. DATA_SOURCES
##
#########################################################################################################################
##
## Data Sources available without declaration
##-------------------------------------------
## $project
## $documentList
## $baseUrl
##
## Data Sources loaded for this report
##-------------------------------------------
#if( $documentSource ) ##
  ## Jama 8.44 or greater
  ## Jama 8.42 if New Velocity Feature Flag Enabled
  #set( $docDao = $documentSource )
  #set( $documentNodeDao = $documentSource )
  #set( $attachmentDao = $documentSource )
  #set( $attachmentService = $documentSource )
  #set( $relDao = $documentSource )
  #set( $versionDao = $documentSource )
  #set( $testRunDao = $testSource )
  #set( $velocityServiceWrapper = $documentSource )
  #set( $baselineDao = $baselineSource )
  #set( $contourItemDao = $documentSource)
  #set( $tRunDao = $testSource)
  #set( $testPlanDao = $testSource)
  #set( $testSetDao = $testSource)
  #set( $testCycleDao = $testSource)
  #set( $userDao = $userSource)
  ##
#else
  ## Jama 8.43 or older
  #set( $docDao = $applicationContext.getBean("documentDao"))
  #set( $documentNodeDao = $applicationContext.getBean("documentNodeDao"))
  #set( $attachmentDao = $applicationContext.getBean("attachmentDao"))
  #set( $attachmentService = $applicationContext.getBean("attachmentService"))
  #set( $relDao = $applicationContext.getBean("relationshipDao") )
  #set( $versionDao = $applicationContext.getBean("versionDao") )
  #set( $testRunDao = $applicationContext.getBean("testRunDao") )
  ## $velocityServiceWrapper is already available
  #set( $baselineDao = $applicationContext.getBean("baseLineDao") )
  #set( $contourItemDao = $applicationContext.getBean("documentDao"))
  #set( $tRunDao = $applicationContext.getBean("testDao"))
  #set( $testPlanDao = $applicationContext.getBean("testDao"))
  #set( $testSetDao = $applicationContext.getBean("testDao"))
  #set( $testCycleDao = $applicationContext.getBean("testDao"))
  #set( $userDao = $applicationContext.getBean("userDao"))
##
#end
##

## Report Parameters
##-------------------------------------------
#if( !$report_testPlanId)
    Please select a Test Plan
    #stop
#end

#if( $reportBaseline )
  #set( $baselineMode = $reportBaseline )
#else
  #set( $baselineMode = false )
#end

#if( $reportTestRuns )
  #set( $testRunMode = $reportTestRuns )
#else
  #set( $testRunMode = false )
#end
##
#########################################################################################################################
## **********************************************************************************************************************
##
##  2. CONSTANTS
##
##  >>>> Modify global constants for the report here <<<<
##
## **********************************************************************************************************************
#########################################################################################################################
#set( $boundaryString = "------=_NextPart_01D506B0.1F52D2B0") ##
#set( $filePrefix = "file:///C:/D993472D/WordTemplate.fld/") ##
#set( $cmpKey = "CMP") ##
#set( $setKey = "SET") ##
#set( $fldKey = "FLD") ##
#set( $txtKey = "TXT") ##
#set( $objectTypeField = "object_type" ) ##
#set( $timeZone = "America/Los_Angeles" ) ##
##
## Object Types
#set( $figureObjectType = "Figure" )
#set( $tableObjectType = "Table" )
#set( $equationObjectType = "Equation" )
#set( $informationObjectType = "Information" )
#set( $informationWoHeadingObjectType = "Information without Heading" )
##
## Status values to exlude from export
#set( $excludedStatuses = ["Rejected","Deleted"] ) ##
##
## Maximum image width and height in points.  
## 468 pt is equivalant to 6.5"
## 612 pt is equivalant to 8.5"
#set ($maxPageWidth = 468) ##
#set ($maxPageHeight = 612) ##
##
## Formatting
#set( $tableHeaderBackgroundColor = "#F2F2F2" )
#set( $tableBorderColor = "#7F7F7F" )

#if( $format == "doc" )
##set( $primaryFont = "Calibri")
#set( $primaryFont = "Arial")
#else
  #set( $primaryFont = "Arimo")
  ##set( $primaryFont = "Arial")
#end

#set( $primaryFontSize = "11.0pt")

#########################################################################################################################
## **********************************************************************************************************************
#########################################################################################################################
##
#########################################################################################################################
##
##  3. WORD_HTML_HEADER
##
#########################################################################################################################
#if( $format == "doc" )
------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="utf-8"

<html xmlns:v=3D"urn:schemas-microsoft-com:vml"
xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml"
xmlns=3D"http://www.w3.org/TR/REC-html40">
#end
<head>
#if( $format == "doc" )
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 15">
<meta name=3DOriginator content=3D"Microsoft Word 15">
<link rel=3DFile-List href=3D"WordTemplate.fld/filelist.xml">
<link rel=3DEdit-Time-Data href=3D"WordTemplate.fld/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Jama Software</o:Author>
  <o:LastAuthor>Jama Software</o:LastAuthor>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=3DdataStoreItem href=3D"WordTemplate.fld/item0001.xml" target=3D"WordTemplate.fld/props001.xml">
<link rel=3DthemeData href=3D"WordTemplate.fld/themedata.thmx">
<link rel=3DcolorSchemeMapping href=3D"WordTemplate.fld/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>100</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:EnableOpenTypeKerning/>
   <w:DontFlipMirrorIndents/>
   <w:OverrideTableStyleHps/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val=3D"Cambria Math"/>
   <m:brkBin m:val=3D"before"/>
   <m:brkBinSub m:val=3D"&#45;-"/>
   <m:smallFrac m:val=3D"off"/>
   <m:dispDef/>
   <m:lMargin m:val=3D"0"/>
   <m:rMargin m:val=3D"0"/>
   <m:defJc m:val=3D"centerGroup"/>
   <m:wrapIndent m:val=3D"1440"/>
   <m:intLim m:val=3D"subSup"/>
   <m:naryLim m:val=3D"undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState=3D"false" DefUnhideWhenUsed=3D"false"
  DefSemiHidden=3D"false" DefQFormat=3D"false" DefPriority=3D"99"
  LatentStyleCount=3D"376">
  <w:LsdException Locked=3D"false" Priority=3D"0" QFormat=3D"true" Name=3D"Normal"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"heading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 9"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index 9"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 9"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footnote text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"header"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footer"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"index heading"/>
  <w:LsdException Locked=3D"false" Priority=3D"35" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"caption"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"table of figures"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"envelope address"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"envelope return"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"footnote reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"line number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"page number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"endnote reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"endnote text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"table of authorities"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"macro"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"toa heading"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Bullet 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Number 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"10" QFormat=3D"true" Name=3D"Title"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Closing"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Signature"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"Default Paragraph Font"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"List Continue 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Message Header"/>
  <w:LsdException Locked=3D"false" Priority=3D"11" QFormat=3D"true" Name=3D"Subtitle"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Salutation"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Date"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text First Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text First Indent 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Note Heading"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Body Text Indent 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Block Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Hyperlink"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"FollowedHyperlink"/>
  <w:LsdException Locked=3D"false" Priority=3D"22" QFormat=3D"true" Name=3D"Strong"/>
  <w:LsdException Locked=3D"false" Priority=3D"20" QFormat=3D"true" Name=3D"Emphasis"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Document Map"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Plain Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"E-mail Signature"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Top of Form"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Bottom of Form"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal (Web)"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Acronym"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Address"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Cite"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Code"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Definition"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Keyboard"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Preformatted"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Sample"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Typewriter"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"HTML Variable"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Normal Table"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"annotation subject"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"No List"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Outline List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Simple 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Classic 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Colorful 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Columns 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Grid 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table List 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table 3D effects 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Contemporary"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Elegant"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Professional"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Subtle 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Subtle 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Web 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Balloon Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"Table Grid"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Table Theme"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" Name=3D"Placeholder Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" QFormat=3D"true" Name=3D"No Spacing"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" Name=3D"Revision"/>
  <w:LsdException Locked=3D"false" Priority=3D"34" QFormat=3D"true"
   Name=3D"List Paragraph"/>
  <w:LsdException Locked=3D"false" Priority=3D"29" QFormat=3D"true" Name=3D"Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"30" QFormat=3D"true"
   Name=3D"Intense Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"19" QFormat=3D"true"
   Name=3D"Subtle Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"21" QFormat=3D"true"
   Name=3D"Intense Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"31" QFormat=3D"true"
   Name=3D"Subtle Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"32" QFormat=3D"true"
   Name=3D"Intense Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"33" QFormat=3D"true" Name=3D"Book Title"/>
  <w:LsdException Locked=3D"false" Priority=3D"37" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"Bibliography"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"TOC Heading"/>
  <w:LsdException Locked=3D"false" Priority=3D"41" Name=3D"Plain Table 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"42" Name=3D"Plain Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"43" Name=3D"Plain Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"44" Name=3D"Plain Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"45" Name=3D"Plain Table 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"40" Name=3D"Grid Table Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"46" Name=3D"Grid Table 1 Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark"/>
  <w:LsdException Locked=3D"false" Priority=3D"51" Name=3D"Grid Table 6 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"52" Name=3D"Grid Table 7 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"46" Name=3D"List Table 1 Light"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark"/>
  <w:LsdException Locked=3D"false" Priority=3D"51" Name=3D"List Table 6 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"52" Name=3D"List Table 7 Colorful"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dark Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Mention"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Smart Hyperlink"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Hashtag"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Unresolved Mention"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"true"
   Name=3D"Smart Link"/>
 </w:LatentStyles>
</xml><![endif]-->
#########################################################################################################################
##
##  4. PDF_HTML_HEADER
##
#########################################################################################################################
#else
  <html>
#end

#########################################################################################################################
##
##  5. GENERAL_STYLE_SHEETS
##
#########################################################################################################################
<style>
<!--
 /* Font Definitions */
 #if( $format == "doc" )
 @font-face
  {font-family:Wingdings;
  panose-1:5 0 0 0 0 0 0 0 0 0;
  mso-font-charset:77;
  mso-generic-font-family:decorative;
  mso-font-pitch:variable;
  mso-font-signature:3 268435456 0 0 -2147483647 0;}
@font-face
  {font-family:"Cambria Math";
  panose-1:2 4 5 3 5 4 6 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:roman;
  mso-font-pitch:variable;
  mso-font-signature:-536870145 1107305727 0 0 415 0;}
@font-face
  {font-family:"Calibri";
  panose-1:2 15 5 2 2 2 4 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:swiss;
  mso-font-pitch:variable;
  mso-font-signature:-1610611985 1073750139 0 0 159 0;}
@font-face
  {font-family:"Times New Roman \(Body CS\)";
  panose-1:2 11 6 4 2 2 2 2 2 4;
  mso-font-alt:"Times New Roman";
  mso-font-charset:0;
  mso-generic-font-family:roman;
  mso-font-pitch:auto;
  mso-font-signature:0 0 0 0 0 0;}
@font-face
  {font-family:"Helvetica Neue";
  panose-1:2 0 5 3 0 0 0 2 0 4;
  mso-font-charset:0;
  mso-generic-font-family:auto;
  mso-font-pitch:variable;
  mso-font-signature:-452984065 1342208475 16 0 1 0;}
@font-face
  {font-family:Times;
  panose-1:0 0 5 0 0 0 0 2 0 0;
  mso-font-charset:0;
  mso-generic-font-family:auto;
  mso-font-pitch:variable;
  mso-font-signature:-536870145 1342185562 0 0 415 0;}
#else
  @import url('https://fonts.googleapis.com/css2?family=Arimo:ital,wght@0,400;0,700;1,400;1,700&display=swap');
  #*
  @font-face {
  font-family: Arial;
  src: url(https://jama-arolufs.jamacloud.com/attachment/89605/Arial.ttf);}
  *#
  
#end
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
  {mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-parent:"";
  margin:0in;
  margin-top:3pt;
  margin-bottom:3pt;
  mso-pagination:widow-orphan;
  font-size:${primaryFontSize};
  font-family:"${primaryFont}",sans-serif;}
p.error
  {mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-parent:"";
  margin:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:${primaryFontSize};
  font-family:"${primaryFont}",sans-serif;
  color:red;}
h1
  {mso-style-priority:9;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:12.0pt;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:.3in;
  margin-bottom:3pt;
  text-indent:-.3in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:1;
  mso-list:l0 level1 lfo1;
  font-size:16.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#2F5496;
  mso-font-kerning:0pt;
  font-weight:normal;}
h2
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.4in;
  margin-bottom:.0001pt;
  text-indent:-.4in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:2;
  mso-list:l0 level2 lfo1;
  font-size:13.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#2F5496;
  font-weight:normal;}
h3
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.5in;
  margin-bottom:.0001pt;
  text-indent:-.5in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:3;
  mso-list:l0 level3 lfo1;
  font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#1F3763;
  font-weight:normal;}
h4
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.6in;
  margin-bottom:.0001pt;
  text-indent:-.6in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:4;
  mso-list:l0 level4 lfo1;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#2F5496;
  font-weight:normal;
  font-style:italic;}
h5
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.7in;
  margin-bottom:.0001pt;
  text-indent:-.7in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:5;
  mso-list:l0 level5 lfo1;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#2F5496;
  font-weight:normal;}
h6
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.8in;
  margin-bottom:.0001pt;
  text-indent:-.8in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:6;
  mso-list:l0 level6 lfo1;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#1F3763;
  font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
  {mso-style-priority:9;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:.8in;
  margin-bottom:.0001pt;
  text-indent:-.8in;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  mso-outline-level:7;
  mso-list:l0 level7 lfo1;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#1F3763;
  font-weight:normal;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;
  font-weight:bold;
  font-style:italic;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:6.0pt;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:11.0pt;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;
  font-weight:bold;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
  {mso-style-update:auto;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:22.0pt;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:33.0pt;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoToc5, li.MsoToc5, div.MsoToc5
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:44.0pt;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoToc6, li.MsoToc6, div.MsoToc6
  {mso-style-update:auto;
  mso-style-noshow:yes;
  mso-style-priority:39;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:55.0pt;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
  {mso-style-priority:99;
  mso-style-qformat:yes;
  margin:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  tab-stops:center 3.25in right 6.5in;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
  {mso-style-priority:99;
  mso-style-qformat:yes;
  margin:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  tab-stops:center 3.25in right 6.5in;
  font-size:10.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.MsoCaption, li.MsoCaption, div.MsoCaption
  {mso-style-priority:35;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:10.0pt;
  margin-left:0in;
  mso-pagination:widow-orphan;
  font-size:9.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#44546A;
  font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
  {mso-style-priority:10;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin:0in;
  margin-bottom:.0001pt;
  mso-add-space:auto;
  mso-pagination:widow-orphan;
  font-size:40.0pt;
  font-family:"${primaryFont}",sans-serif;
  color:#4F81BD;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
  {mso-style-priority:11;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-next:Normal;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:0in;
  mso-pagination:widow-orphan;
  font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;}
a:link, span.MsoHyperlink
  {mso-style-priority:99;
  color:#0563C1;
  mso-themecolor:hyperlink;
  text-decoration:underline;
  text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
  {mso-style-noshow:yes;
  mso-style-priority:99;
  color:#954F72;
  mso-themecolor:followedhyperlink;
  text-decoration:underline;
  text-underline:single;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
  {mso-style-priority:34;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin-top:0in;
  margin-right:0in;
  margin-bottom:0in;
  margin-left:0in;
  margin-bottom:.0001pt;
  mso-add-space:auto;
  mso-pagination:widow-orphan;
  font-size:"${primaryFontSize}";
  font-family:"${primaryFont}",sans-serif;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
  {mso-style-priority:39;
  mso-style-qformat:yes;
  mso-style-parent:"Heading 1";
  mso-style-next:Normal;
  margin:0in;
  margin-bottom:.0001pt;
  text-align:center;
  mso-pagination:widow-orphan lines-together;
  page-break-after:avoid;
  font-size:16.0pt;
  font-family:"${primaryFont}",sans-serif;}
p.TableHeader, li.TableHeader, div.TableHeader
  {mso-style-name:"Table Header";
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin:0in;
  margin-left:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:"${primaryFontSize}";
  font-family:"${primaryFont}",sans-serif;
  font-weight:bold;}
p.TableCell, li.TableCell, div.TableCell
  {mso-style-name:"Table Cell";
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin:0in;
  margin-left:0in;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:"${primaryFontSize}";
  font-family:"${primaryFont}",sans-serif;}
ol
  {margin-bottom:0in;}
ul
  {margin-bottom:0in;}
li
  {font-size:${primaryFontSize};
  font-family:"${primaryFont}",sans-serif;}
table 
  {margin-top:2pt;
  border-collapse: collapse;
  table-layout: fixed;}
th, td
  {padding-left: 2pt;
  padding-right: 2pt;
  word-wrap:break-all;}
 th
  {background:$tableHeaderBackgroundColor;}
 /* Page Definitions */
/* Normal Page Definition */
/* 
@page
  {mso-footnote-separator:url("WordTemplate.fld/header.htm") fs;
  mso-footnote-continuation-separator:url("WordTemplate.fld/header.htm") fcs;
  mso-endnote-separator:url("WordTemplate.fld/header.htm") es;
  mso-endnote-continuation-separator:url("WordTemplate.fld/header.htm") ecs;}
@page WordSectionPortrait
  {size:8.5in 11.0in;
  margin:1.0in 1.0in 1.0in 1.0in;
  mso-header-margin:.5in;
  mso-footer-margin:.5in;
  mso-title-page:yes;
  mso-header:url("WordTemplate.fld/header.htm") h1;
  mso-footer:url("WordTemplate.fld/header.htm") f1;
  mso-first-header:url("WordTemplate.fld/header.htm") fh1;
  mso-first-footer:url("WordTemplate.fld/header.htm") ff1;
  mso-paper-source:0;}
*/
/* Header Import Bug Workaround Page Definition */
@page
  {mso-footnote-separator: fs;
  mso-footnote-continuation-separator: fcs;
  mso-endnote-separator: es;
  mso-endnote-continuation-separator: ecs;}
@page WordSectionPortrait
  {size:8.5in 11.0in;
  margin:1.0in .75in 1.0in 0.75in;
  mso-header-margin:.5in;
  mso-footer-margin:.2in;
  mso-title-page:yes;
  mso-header: h1;
  mso-footer: f1;
  mso-first-header: fh1;
  mso-first-footer: ff1;
  mso-paper-source:0;}
div.WordSectionPortrait
  {page:WordSectionPortrait;}
 /* List Definitions */
@list l0
  {mso-list-id:1764108000;
  mso-list-template-ids:1094757160;}
@list l0:level1
  {mso-level-style-link:"Heading 1";
  mso-level-text:%1;
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.3in;
  text-indent:-.3in;}
@list l0:level2
  {mso-level-style-link:"Heading 2";
  mso-level-text:"%1\.%2";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.4in;
  text-indent:-.4in;}
@list l0:level3
  {mso-level-style-link:"Heading 3";
  mso-level-text:"%1\.%2\.%3";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.5in;
  text-indent:-.5in;}
@list l0:level4
  {mso-level-style-link:"Heading 4";
  mso-level-text:"%1\.%2\.%3\.%4";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.6in;
  text-indent:-.6in;}
@list l0:level5
  {mso-level-style-link:"Heading 5";
  mso-level-text:"%1\.%2\.%3\.%4\.%5";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.7in;
  text-indent:-.7in;}
@list l0:level6
  {mso-level-style-link:"Heading 6";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.8in;
  text-indent:-.8in;}
@list l0:level7
  {mso-level-style-link:"Heading 7";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.9in;
  text-indent:-.9in;}
@list l0:level8
  {mso-level-style-link:"Heading 8";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:1.0in;
  text-indent:-1.0in;}
@list l0:level9
  {mso-level-style-link:"Heading 9";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8\.%9";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:1.1in;
  text-indent:-1.1in;}

-->
</style>
#########################################################################################################################
##
##  6. PDF_STYLE_SHEETS
##
#########################################################################################################################
#if( $format != "doc" )
  <style type="text/css">
    
    html, body {
      font-family:"${primaryFont}",sans-serif;         
      font-size: ${primaryFontSize};
      max-width: 7.5in;}
    body 
      {margin-left: 1in;
      counter-reset: h1counter;}
    h1
      {counter-reset: h2counter;}
    h2 
      {counter-reset: h3counter;}
    h3 
      {counter-reset: h4counter;}
    h4 
      {counter-reset: h5counter;}
    h5 
      {counter-reset: h6counter;}
    h1::before 
      {counter-increment: h1counter;
      content: counter(h1counter) "\0000a0\0000a0";}
    h2::before 
      {counter-increment: h2counter;
      content: counter(h1counter) "." counter(h2counter) "\0000a0\0000a0";}
    h3::before 
      {counter-increment: h3counter;
      content: counter(h1counter) "." counter(h2counter) "." counter(h3counter) "\0000a0\0000a0";}
    h4::before 
      {counter-increment: h4counter;
      content: counter(h1counter) "." counter(h2counter) "." counter(h3counter) "." counter(h4counter) "\0000a0\0000a0";}
    h5::before 
      {counter-increment: h5counter;
      content: counter(h1counter) "." counter(h2counter) "." counter(h3counter) "." counter(h4counter) "." counter(h5counter) "\0000a0\0000a0";}
    h6::before 
      {counter-increment: h6counter;
      content: counter(h1counter) "." counter(h2counter) "." counter(h3counter) "." counter(h4counter) "." counter(h5counter) "." counter(h6counter) "\0000a0\0000a0";}
   
  </style>
#end
#########################################################################################################################
##
##  7. TABLE_STYLE_SHEETS
##
#########################################################################################################################
<style>
 /* Style Definitions */
 table.MsoNormalTable
  {mso-style-name:"Table Normal";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-noshow:yes;
  mso-style-priority:99;
  mso-style-parent:"";
  border-collapse:collapse;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-para-margin:0in;
  mso-para-margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;}
table.MsoTableGrid
  {mso-style-name:"Table Grid";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-priority:39;
  mso-style-unhide:no;
  border:solid $tableBorderColor 1.0pt;
  border-collapse:collapse;
  mso-border-alt:solid $tableBorderColor .5pt;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-border-insideh:.5pt solid $tableBorderColor;
  mso-border-insidev:.5pt solid $tableBorderColor;
  mso-para-margin:0in;
  mso-para-margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:11.0pt;
  mso-bidi-font-size:12.0pt;
  font-family:"${primaryFont}",sans-serif;}
table.TableGridwithHeader
  {table-layout:fixed;
  mso-table-layout-alt:fixed;
  border-collapse:collapse;
  border:none;
  mso-style-name:"Table Grid with Header";
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  mso-style-priority:99;
  mso-style-unhide:no;
  mso-style-parent:"Table Grid";
  border:solid $tableBorderColor 1.0pt;
  border-collapse:collapse;
  mso-border-alt:solid $tableBorderColor .5pt;
  mso-padding-alt:0in 5.4pt 0in 5.4pt;
  mso-border-insideh:.5pt solid $tableBorderColor;
  mso-border-insidev:.5pt solid $tableBorderColor;
  mso-para-margin:0in;
  mso-para-margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:11.0pt;
  font-family:"${primaryFont}",sans-serif;}
th.TableHeader
  {border:solid $tableBorderColor .5pt;
  font-size:11.0pt;}
td.TableCell
  {border:solid $tableBorderColor .5pt;
  font-size:11.0pt;}
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext=3D"edit">
  <o:idmap v:ext=3D"edit" data=3D"1"/>
 </o:shapelayout></xml><![endif]-->
##end
</head>
##
#########################################################################################################################
##
##  8. MACROS
##
#########################################################################################################################
##
#########################################################################################################################
##
##  8.1 STANDARD_MACROS
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getContainer                                                           
##          Inputs: $baselineMode - boolean: user selected.  tells the report if the export was from a baseline or not                                        
##          Creates: $containerDoc - document: creates $containerDoc to used for the remainder of the report
#########################################################################################################################
#macro( getContainer $baselineMode )
##
  #set( $firstDocInList = $documentList[0].document )
  #set( $firstDocInListTypeKey = $firstDocInList.documentType.documentTypeKey )
##
  ## export from a baseline
  #if( $baselineMode )
    #### Debug: Baseline Mode
    ## baseline of a set or component will include the set or component as the first item
    #if( $firstDocInListTypeKey == $cmpKey ||
         $firstDocInListTypeKey == $setKey ||
         $firstDocInListTypeKey == "TSTPL" ||
         $firstDocInListTypeKey == "TSTCY" )
      #set( $containerDoc = $firstDocInList )
    ## if the first item is not a set or component, then the baseline is of a filter
    ## and a meaningful parent is not available
    #else
      #set( $containerDoc = false )
    #end
##
  ## export from the project explorer
  #else
    ## Test Plan Mode
    #if( $firstDocInList.documentType.documentTypeKey == "TSTPL" )
      #set( $containerDoc = $firstDocInList )
    ## Test Cycle Mode
    #elseif( $firstDocInList.documentType.documentTypeKey == "TSTRN" )
      #set( $containerDoc = $firstDocInList.testCycle )
    ## Component / Set Mode
    #else
      #set( $docNode = $documentNodeDao.getDocumentNode(5, $documentList[0].document.id) )
      #set( $parentNode = $docNode.getParentNode())
      ## ## Debug: $parentNode.sequence
      ## if the parent is the projec, then assume the user exported from a baseline and forgot
      ## to select Baseline Mode, otherwise get the parent
      #if( $parentNode.globalSortOrder == 1000 )
        #if( $firstDocInListTypeKey == $cmpKey ||
             $firstDocInListTypeKey == $setKey )
          #set( $containerDoc = $firstDocInList )
        #else
          #set( $containerDoc = false )
        #end
      #else
        #set( $parentDoc = $docDao.getDocument($parentNode.refId) )
        #set( $parentTypeKey = $parentDoc.documentType.documentTypeKey )
        #### Debug: $parentTypeKey
        #if( $parentTypeKey == $cmpKey ||
             $parentTypeKey == $setKey )
          #set( $containerDoc = $parentDoc )
        #else
          #set( $containerDoc = false )
        #end
      #end
    #end
  #end
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getDocumentRev                                                          
##          Creates: $documentRev - string: name of the baseline that exists on all items with an asterisk if some items 
##                   have changed since the most recent baseline
##                   $baselineId - number: ID of the identified baseline (only 1, even if the items are all in multiple)
#########################################################################################################################
#macro( getDocumentRev )
  ## Build List of all baselines on active items
  #set( $baselineList = [] )
  #set( $baselineId = false )
  #foreach( $vDoc in $documentList )
    #set( $doc = $vDoc.document)
    #set( $docVersion = $versionDao.getVersionByDocumentId($doc.id) )
    #set( $docBaselines = $docVersion.baseLines )
    #foreach( $baseline in $sortTool.sort($docBaselines, "id:desc") )
      ## #if( !$baseline.name.contains("Review") && !$baseline.name.contains("REVIEW") )
        #set( $addBaseline = true )
        #foreach( $knownBaseline in $baselineList )
          #if( $knownBaseline.id == $baseline.id ) 
            #set( $addBaseline = false )
          #end
        #end
        #if( $addBaseline )
          #if( $baselineList.add( {"id":$baseline.id, "name":$baseline.name} ) ) #end
        #end
      ## #end
    #end
  #end
##
  ##Determine which, if any, baseline exists on all items
  #set( $baselinesOnAllItemsList = [] )
  #foreach( $baseline in $baselineList )
    #set( $baselineOnAllItems = true )
    #foreach( $vDoc in $documentList )
      #set( $doc = $vDoc.document)
      #set( $docVersion = $versionDao.getVersionByDocumentId($doc.id) )
      #set( $docBaselines = $docVersion.baseLines )
      #set( $baselineOnItem = false )
      #foreach( $docBaseline in $docBaselines )
        #if( $docBaseline.id == $baseline.id )
          #set( $baselineOnItem = true )
          #break
        #end
      #end
      #if( !$baselineOnItem )
        #set( $baselineOnAllItems = false )
        #break
      #end
    #end
    #if( $baselineOnAllItems )
      #if( $baselinesOnAllItemsList.add( $baseline ) ) #end
    #end
  #end
##
  ## Determine the Revision info to display
  #if( $baselinesOnAllItemsList.size() > 0 )
    ## default to first baseline if there are no signatures 
    #set( $documentRev = $baselinesOnAllItemsList[0].name )
    #set( $baselineId = $baselinesOnAllItemsList[0].id )
    ## if there is baseline with signatures, choose the first one found
    #foreach( $baseline in $baselinesOnAllItemsList )
      #set( $baseSignatures = $baselineDao.getSignaturesForBaseLine( $baseline.id ))
      #if( $baseSignatures.size() > 0)
        #set( $documentRev = $baseline.name )
        #set( $baselineId = $baseline.id )
        #break
      #end
    #end
  #elseif( $baselineList.size() > 0 )
    #set( $documentRev = "$baselineList[0].name*" )
    ##set( $baselineId = $baselineList[0].id )
  #else
    #set( $documentRev = "N/A" )
  #end
##
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getBaselineRelationships
##          Input: $orginDocId - ID of a current item
##                 $baselineId - ID of a baseline       
##          Creates: $returnBaselineRels - list of relationships with sub-elements of "fromItem" and "toItem" each of type 
##                   item
#########################################################################################################################
#macro( getBaselineRelationships $orginDocId $baselineId )
  #set( $start = 0 )
  #set( $count = 20 )
  #set( $versionedRelationships = [] )
  #set( $returnBaselineRels = [])
  #set( $pageSize = 20)
##
  #set($baseRelsPage = $velocityServiceWrapper.getRelationships($orginDocId,$baselineId,$start,$count))
##
  #set( $totalRels = [])
  #set( $totalRels = $baseRelsPage.getPageInfo().getTotalResults())
  ##DEBUG BASELINE RELATIONSHIP PAGE INFO: $baseRelsPage.getPageInfo()
  ##DEBUG BASELINE RELATIONSHIP COUNT: $baseRelsPage.getPageInfo().getTotalResults()
  #if( $totalRels && $totalRels > 0)
    #set( $page_count = $mathTool.floor($mathTool.div($totalRels,$pageSize)) )
    #foreach( $page in [0..$page_count])
      #set($baseRelsPage = $velocityServiceWrapper.getRelationships($orginDocId,$baselineId,$start,$count))
      ##DEBUG BASELINE RELATIONSHIPS: $baseRelsPage.getResults()
      #set( $addIsSuccessful = $versionedRelationships.addAll($baseRelsPage.getResults()))
      #set( $start = $start + $count)
    #end
  #end
##
  #foreach( $versionedRelationship in $versionedRelationships )
    #set( $fromItemId = $versionedRelationship.getFromItem().getValue().get(0) )
    #set( $fromItemVersion = $versionedRelationship.getFromItem().getValue().get(1) )
    #set( $fromItem = $velocityServiceWrapper.getItem($fromItemId , $fromItemVersion) )
    #set( $toItemId = $versionedRelationship.getToItem().getValue().get(0) )
    #set( $toItemVersion = $versionedRelationship.getToItem().getValue().get(1) )
    #set( $toItem = $velocityServiceWrapper.getItem($toItemId , $toItemVersion) )
    #set( $return = $returnBaselineRels.add({"fromItem":$fromItem,"toItem":$toItem}) )
  #end
##
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getRelationships
##          Inputs: $baselineMode - GLOBAL, tells the report if the export was from a baseline or not 
##                  $baselineId - GLOBAL, ID of a baseline       
##                  $inDoc - current item
##                  $inDownstream - true provides downstream relationships, false provides upstream relationships
##          Creates: $returnRels - list of relationships with sub-elements of "fromItem" and "toItem" each of type 
##                   item
#########################################################################################################################
#macro( getRelationships $inDoc $inDownstream )
  #set( $returnRels = [] )
  #if( $baselineMode )
    #if( $baselineId )
      #set( $currentVersion = $inDoc.currentVersion )
      #set( $orginDocId = $currentVersion.originDocument.id )
      #set( $relatedIds = [] )
      #getBaselineRelationships( $orginDocId, $baselineId ) ## Creates $returnBaselineRels
      ##DEBUG $returnBaselineRels
      #foreach ( $rel in $returnBaselineRels )
        #set($dnDoc = $rel.toItem)
        #set($upDoc = $rel.fromItem)
        #if( $inDownstream )  ## Get Downstream Relationships
          #if( $upDoc.id == $inDoc.id )
            #if( !$relatedIds.contains($dnDoc.id) )
              #set( $success = $relatedIds.add($dnDoc.id) )
              #set( $success = $returnRels.add( {"fromDocument":$upDoc,"toDocument":$dnDoc} ) )
            #end
          #end
        #else                 ## Get Upstream Relationships
          #if( $dnDoc.id == $inDoc.id )
            #if( !$relatedIds.contains($upDoc.id) )
              #set( $success = $relatedIds.add($upDoc.id) )
              #set( $success = $returnRels.add( {"fromDocument":$upDoc,"toDocument":$dnDoc} ) )
            #end
          #end
        #end
      #end
    #end
  #else
    #set( $rels = [] )
    #set ( $rels = $relDao.getRelationshipsForDocument($inDoc.id, $inDownstream) )
    #foreach( $rel in $rels )
      #if( $inDownstream )  ## Get Downstream Relationships
        #if ( $rel.toDocument.active )
          #set( $success = $returnRels.add( $rel ) )
        #end
      #else                 ## Get Upstream Relationships
        #if ( $rel.fromDocument.active )
          #set( $success = $returnRels.add( $rel ) )
        #end
      #end
    #end
  #end
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getReferenceableDocIds
##          Input: documentList
##          Output: getReferenceableDocIds - list of all the doc IDs that will be referenceable in the document
#########################################################################################################################
#macro( getReferenceableDocIds ) 
  #set( $referenceableDocIds = [] )
  #set( $figureList = [] )
  #set( $tableList = [] )
  #set( $equationList = [] )
  #set( $figure_number = 1 )
  #set( $table_number = 1 )
  #set( $equation_number = 1 )
  #foreach( $vDoc in $documentList )
    #set( $doc = $vDoc.document )
    #set( $success = $referenceableDocIds.add($doc.id) )
    #getObjectType( $doc) ## creates $docObjectType, false if there is none
    #if( $docObjectType == $figureObjectType )
      #set( $success = $figureList.add( {"id":$doc.id,"reference":$figure_number} ) )
      #set($figure_number = $figure_number + 1)
    #end
    #if( $docObjectType == $tableObjectType )
      #set( $success = $tableList.add( {"id":$doc.id,"reference":$table_number} ) )
      #set($table_number = $table_number + 1)
    #end
    #if( $docObjectType == $equationObjectType )
      #set( $success = $equationList.add( {"id":$doc.id,"reference":$equation_number} ) )
      #set($equation_number = $equation_number + 1)
    #end
  #end
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getDocumentInfo
##          Input: documentList
##          Output: documentPropertyIds - list of all document information items found
##                  $templateNumber - template revision number
##                  $apnNumber - document APN number
##                  $ecoNumber - document ECO number
##                  $revisionTable - revision table contents
#########################################################################################################################
#macro( getDocumentInfo )
  #set( $documentPropertyIds = [] )
  #set( $templateNumber = "" )
  #set( $apnNumber = "" )
  #set( $ecoNumber = "" )
  #set( $revisionTable = "" )
  #set( $documentInfoParentId = false )
  ## Get document info from Test Plan or Test Cycle Description
  #set( $headerBlock = $containerDoc.description.replaceAll('(?s)^.*(<div.*?>.*?id="header".*?<\/div>).*$','$1') )
  #if( $headerBlock != $containerDoc.description )
    #set( $templateNumber = $headerBlock.replaceAll('(?s)^.*<td.*?id="header_template".*?>(.*?)<\/td>.*$','$1') )
    #if( $templateNumber == $headerBlock ) #set( $templateNumber = "N/A" ) #end
    #set( $templateNumber = $templateNumber.replaceAll('(?s)<\/p>\s*?<p>','<br>') )
    #set( $templateNumber = $templateNumber.replaceAll('<p.*?>','') )
    #set( $templateNumber = $templateNumber.replaceAll('<\/p>','') )
    #set( $apnNumber = $headerBlock.replaceAll('(?s)^.*<td.*?id="header_apn".*?>(.*?)<\/td>.*$','$1') )
    #if( $apnNumber == $headerBlock ) #set( $apnNumber = "" ) #end
    #set( $apnNumber = $apnNumber.replaceAll('(?s)<\/p>\s*?<p>','<br>') )
    #set( $apnNumber = $apnNumber.replaceAll('<p.*?>','') )
    #set( $apnNumber = $apnNumber.replaceAll('<\/p>','') )
    #set( $ecoNumber = $headerBlock.replaceAll('(?s)^.*<td.*?id="header_eco".*?>(.*?)<\/td>.*$','$1') )
    #if( $ecoNumber == $headerBlock ) #set( $ecoNumber = "" ) #end
  #end
  #set( $revisionTable = $containerDoc.description.replaceAll('(?s)^.*<div.*?>(.*?id="revision_history".*?)<\/div>.*$','$1') )
  #if( $revisionTable == $containerDoc.description ) #set( $revisionTable = "" ) #end
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getDate
##          Input: Java Time Zone ID to determine which timezone to display the date in
##          Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDate $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  $dateTool.format( 'MM/dd/yyyy', $inputDate, $locale, $outTz )
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getDateTime
##          Input: Java Time Zone ID to determine which timezone to display the date in
##          Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDateTime $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  $dateTool.format( 'MM/dd/yyyy hh:mm a', $inputDate, $locale, $outTz )
#end
#########################################################################################################################
##          Macro: getHierarchyLevel
##          Input: $doc - document object
##                 $baselineMode - true: export was from a baseline, false: export was from the project
##                 $baselineId   - ID of the baseline that the items are part of, if in baseline mode
##          Output: $hierarchyLevel - number, which heading level this item is in Jama relative to the container
#########################################################################################################################
#macro( getHierarchyLevel $doc $baselineMode $baselineId )
  #set( $seqSubStrings = [] )
  #set( $hierarchyLevel = 1)
  ## Get hierarchy from the baseline
  #if( $baselineMode )
    #set( $docNode = $documentNodeDao.getDocumentNodeForBaseLine(5, $doc.id, $baselineId))
  ## Get hierarchy from the project
  #else
    #set( $docNode = $documentNodeDao.getDocumentNode(5, $doc.id))
  #end
  ##Debug: $docNode
  #set( $seqSubStrings = $docNode.sequence.split("\."))
  ##Debug: $seqSubStrings
  #set( $hierarchyLevel = $seqSubStrings.size())
  #if( !$hierarchyLevelTop )
    #set($hierarchyLevelTop = $hierarchyLevel)
  #end
  #set($hierarchyLevel = $hierarchyLevel - $hierarchyLevelTop + 1)
#end
#########################################################################################################################
##          Macro: getStatus
##          Input: $doc - document object
##          Output: $docStatus - status of the item
#########################################################################################################################
#macro( getStatus $doc )
  #set( $docStatus = false )
  #foreach( $docTypeField in $doc.documentType.documentTypeFields )
    #if( $docTypeField.documentField.name == "status" )
      #set ( $docStatus = $doc.status.name )
      #break
    #end
  #end
#end
#########################################################################################################################
##          Macro: getObjectType
##          Input: $doc - document object
##          Output: $docObjectType - value of object_type
#########################################################################################################################
#macro( getObjectType $doc )
  #set( $docObjectType = false )
  #foreach( $docTypeField in $doc.documentType.documentTypeFields )
    #if( $docTypeField.documentField.name == $objectTypeField )
      #set ( $docObjectType = $velocityReportUtil.getValueForField($doc, $objectTypeField, $dateFormat ) )
      #break
    #end
  #end
#end
#########################################################################################################################
##                         Macro: Returns a source string from a description                                         ###
##                          @sText - string: string you searching                                                     ###
##                          @return - array: an array of image sources (url)                                          ###
#########################################################################################################################
#macro( findSourceMHTML $sText )
  #set( $findSourceMHTMLReturn = [])
  #set( $lastImageIndex = $sText.lastIndexOf("<img"))  ##>             
  #set( $startCheck = $sText.indexOf("<img")) ##>  
  #foreach( $x in [$startCheck..$lastImageIndex])
    #if( $x == $sText.indexOf( "<img", $x))  ##>
      #set($end = $sText.indexOf(">", $mathTool.toInteger($x)))
      #set( $imgString = ( $sText.substring( $mathTool.toInteger($x), $mathTool.toInteger($end))))
      #### Debug: $imgString
      #set( $srcStart = $imgString.indexOf("src="))
      #set( $srcStart = $srcStart + 5)
      #set( $srcEnd = $imgString.indexOf('"', $srcStart))
      #set($imgSrc = $imgString.substring( $srcStart, $srcEnd ))
      #if( $imgString.indexOf( $baseUrl) > -1 && $imgString.indexOf( "blob:http") == -1)
        #set( $success = $findSourceMHTMLReturn.add( $imgSrc))
      #end
    #end
  #end
#end
#########################################################################################################################
##                     Macro: Returns a source with a new cid and appends the base64 image to the end of the file    ###
##                      @sText - array: string of source                                                              ###
##                      @return - array: returns an array of strings of the new image src                             ###
#########################################################################################################################
#macro( imageArrayMTHML $sText )      
  #set( $imageArrayMHTMLReturn = [])
  #set( $imageSizeArrayMHTMLReturn = [])
  #set( $imageBase64ArrayHTMLReturn = [])
  ## Define a figure array if none exists (first image in the doc)
  #if( !$figure ) #set( $figure = [] ) #end
  ## Define a files array if none exists (first image in the doc)
  #if( !$files ) #set( $files = [] ) #end
  ##$return.clear()
  ##set( $sourceArray = [])
  ##SText: $sText<br>
  #foreach( $s in $sText)  
  ##SOURCE: $s, BASEURL: $baseUrl<br>
    #if( $s.indexOf( $baseUrl) > -1)
      #set( $srcEnd = $s.indexOf("attachment/"))
      #if ( $srcEnd < 0 )
        #set( $srcEnd = $s.indexOf("diagram/"))
        #set( $attStart = $srcEnd + 8)
      #else
        #set( $attStart = $srcEnd + 11)
      #end
      #set( $attEnd = $s.indexOf( "/", $attStart))
      #set( $attachmentId = $s.substring( $attStart, $attEnd))
      ##Att. id: $attachmentId<br>
      ##Get file extension
      #set( $fileExtStart = $s.indexOf( ".", $attEnd))
      #set( $fileExtStart = $fileExtStart + 1)
      #set( $fileExt = $s.substring( $fileExtStart, $s.length()))
      #set( $f = "JAMA_IMG_")
      #set( $f = $f.concat($attachmentId))
      #set( $f = $f.concat("."))
      #set( $f = $f.concat($fileExt))
      #set( $file = '<o:File HRef="')
      #set( $file = $file.concat( $f))
      #set( $file = $file.concat('"/>'))
      #if( $files.add( $file)) #end
      #set( $jama_cid = $f)
      #set( $newSourceLink = "cid:")
      #set( $newSourceLink = $newSourceLink.concat( $jama_cid))
      #if( $figure.add( $boundaryString)) #end
      #set( $img_jama_cid = "Content-ID: ")
      #set( $img_jama_cid = $img_jama_cid.concat( $jama_cid))
      #if( $figure.add( $img_jama_cid)) #end
      #if( $figure.add( "Content-Transfer-Encoding: base64 ")) #end
      #set( $contentType =  "Content-Type: image/")
      #set( $contentType = $contentType.concat($fileExt))
      #if( $figure.add( $contentType)) #end
      #if( $figure.add( "")) #end
      #set( $base64Fig = $attachmentService.getBase64Image( $mathTool.toInteger( $attachmentId)))
##
      ## if this a PNG, get the size
      #if( $base64Fig.substring(0, 16) == "iVBORw0KGgoAAAAN")
        #set( $base64ImageHeader = $base64Fig.substring(16, 32) )
        
        #set( $binaryImageHeader = "")
        #foreach( $i in [0..15] )
          #set( $j = $i + 1 )
          #set( $value = $base64ImageHeader.substring($i, $j) )
          ##$value
          #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
          #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
          #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
          #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
          #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
          #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
          #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
          #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
          #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
          #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
          #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
          #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
          #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
          #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
          #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
          #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
          #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
          #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
          #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
          #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
          #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
          #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
          #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
          #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
          #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
          #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
          #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
          #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
          #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
          #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
          #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
          #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
          #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
          #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
          #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
          #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
          #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
          #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
          #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
          #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
          #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
          #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
          #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
          #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
          #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
          #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
          #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
          #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
          #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
          #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
          #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
          #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
          #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
          #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
          #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
          #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
          #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
          #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
          #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
          #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
          #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
          #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
          #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
          #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
        #end
        ##IMAGE HEADER: $binaryImageHeader
        #set( $width = $mathTool.toInteger($binaryImageHeader.substring(32, 33)) * 2147483648 +
                       $mathTool.toInteger($binaryImageHeader.substring(33, 34)) * 1073741824 +
                       $mathTool.toInteger($binaryImageHeader.substring(34, 35)) * 536870912 +
                       $mathTool.toInteger($binaryImageHeader.substring(35, 36)) * 268435456 +
                       $mathTool.toInteger($binaryImageHeader.substring(36, 37)) * 134217728 +
                       $mathTool.toInteger($binaryImageHeader.substring(37, 38)) * 67108864 +
                       $mathTool.toInteger($binaryImageHeader.substring(38, 39)) * 33554432 +
                       $mathTool.toInteger($binaryImageHeader.substring(39, 40)) * 16777216 +
                       $mathTool.toInteger($binaryImageHeader.substring(40, 41)) * 8388608 +
                       $mathTool.toInteger($binaryImageHeader.substring(41, 42)) * 4194304 +
                       $mathTool.toInteger($binaryImageHeader.substring(42, 43)) * 2097152 +
                       $mathTool.toInteger($binaryImageHeader.substring(43, 44)) * 1048576 +
                       $mathTool.toInteger($binaryImageHeader.substring(44, 45)) * 524288 +
                       $mathTool.toInteger($binaryImageHeader.substring(45, 46)) * 262144 +
                       $mathTool.toInteger($binaryImageHeader.substring(46, 47)) * 131072 +
                       $mathTool.toInteger($binaryImageHeader.substring(47, 48)) * 65536 +
                       $mathTool.toInteger($binaryImageHeader.substring(48, 49)) * 32768 +
                       $mathTool.toInteger($binaryImageHeader.substring(49, 50)) * 16384 +
                       $mathTool.toInteger($binaryImageHeader.substring(50, 51)) * 8192 +
                       $mathTool.toInteger($binaryImageHeader.substring(51, 52)) * 4096 +
                       $mathTool.toInteger($binaryImageHeader.substring(52, 53)) * 2048 +
                       $mathTool.toInteger($binaryImageHeader.substring(53, 54)) * 1024 +
                       $mathTool.toInteger($binaryImageHeader.substring(54, 55)) * 512 +
                       $mathTool.toInteger($binaryImageHeader.substring(55, 56)) * 256 +
                       $mathTool.toInteger($binaryImageHeader.substring(56, 57)) * 128 +
                       $mathTool.toInteger($binaryImageHeader.substring(57, 58)) * 64 +
                       $mathTool.toInteger($binaryImageHeader.substring(58, 59)) * 32 +
                       $mathTool.toInteger($binaryImageHeader.substring(59, 60)) * 16 +
                       $mathTool.toInteger($binaryImageHeader.substring(60, 61)) * 8 +
                       $mathTool.toInteger($binaryImageHeader.substring(61, 62)) * 4 +
                       $mathTool.toInteger($binaryImageHeader.substring(62, 63)) * 2 +
                       $mathTool.toInteger($binaryImageHeader.substring(63, 64)) * 1 )
        #set( $height = $mathTool.toInteger($binaryImageHeader.substring(64, 65)) * 2147483648 +
                       $mathTool.toInteger($binaryImageHeader.substring(65, 66)) * 1073741824 +
                       $mathTool.toInteger($binaryImageHeader.substring(66, 67)) * 536870912 +
                       $mathTool.toInteger($binaryImageHeader.substring(67, 68)) * 268435456 +
                       $mathTool.toInteger($binaryImageHeader.substring(68, 69)) * 134217728 +
                       $mathTool.toInteger($binaryImageHeader.substring(69, 70)) * 67108864 +
                       $mathTool.toInteger($binaryImageHeader.substring(70, 71)) * 33554432 +
                       $mathTool.toInteger($binaryImageHeader.substring(71, 72)) * 16777216 +
                       $mathTool.toInteger($binaryImageHeader.substring(72, 73)) * 8388608 +
                       $mathTool.toInteger($binaryImageHeader.substring(73, 74)) * 4194304 +
                       $mathTool.toInteger($binaryImageHeader.substring(74, 75)) * 2097152 +
                       $mathTool.toInteger($binaryImageHeader.substring(75, 76)) * 1048576 +
                       $mathTool.toInteger($binaryImageHeader.substring(76, 77)) * 524288 +
                       $mathTool.toInteger($binaryImageHeader.substring(77, 78)) * 262144 +
                       $mathTool.toInteger($binaryImageHeader.substring(78, 79)) * 131072 +
                       $mathTool.toInteger($binaryImageHeader.substring(79, 80)) * 65536 +
                       $mathTool.toInteger($binaryImageHeader.substring(80, 81)) * 32768 +
                       $mathTool.toInteger($binaryImageHeader.substring(81, 82)) * 16384 +
                       $mathTool.toInteger($binaryImageHeader.substring(82, 83)) * 8192 +
                       $mathTool.toInteger($binaryImageHeader.substring(83, 84)) * 4096 +
                       $mathTool.toInteger($binaryImageHeader.substring(84, 85)) * 2048 +
                       $mathTool.toInteger($binaryImageHeader.substring(85, 86)) * 1024 +
                       $mathTool.toInteger($binaryImageHeader.substring(86, 87)) * 512 +
                       $mathTool.toInteger($binaryImageHeader.substring(87, 88)) * 256 +
                       $mathTool.toInteger($binaryImageHeader.substring(88, 89)) * 128 +
                       $mathTool.toInteger($binaryImageHeader.substring(89, 90)) * 64 +
                       $mathTool.toInteger($binaryImageHeader.substring(90, 91)) * 32 +
                       $mathTool.toInteger($binaryImageHeader.substring(91, 92)) * 16 +
                       $mathTool.toInteger($binaryImageHeader.substring(92, 93)) * 8 +
                       $mathTool.toInteger($binaryImageHeader.substring(93, 94)) * 4 +
                       $mathTool.toInteger($binaryImageHeader.substring(94, 95)) * 2 +
                       $mathTool.toInteger($binaryImageHeader.substring(95, 96)) * 1 )
        #if( $imageSizeArrayMHTMLReturn.add( {"width":$width, "height":$height}) ) #end
      #elseif( $fileExt == "svg" || $fileExt == "SVG" )
        #set( $binaryImageHeader = "")
        #foreach( $i in [0..2000] )
          #set( $j = $i + 1 )
          #set( $value = $base64Fig.substring($i, $j) )
          ##$value
          #if( $value == "A" ) #set( $binaryImageHeader = "${binaryImageHeader}000000")
          #elseif( $value == "B" ) #set( $binaryImageHeader = "${binaryImageHeader}000001")
          #elseif( $value == "C" ) #set( $binaryImageHeader = "${binaryImageHeader}000010")
          #elseif( $value == "D" ) #set( $binaryImageHeader = "${binaryImageHeader}000011")
          #elseif( $value == "E" ) #set( $binaryImageHeader = "${binaryImageHeader}000100")
          #elseif( $value == "F" ) #set( $binaryImageHeader = "${binaryImageHeader}000101")
          #elseif( $value == "G" ) #set( $binaryImageHeader = "${binaryImageHeader}000110")
          #elseif( $value == "H" ) #set( $binaryImageHeader = "${binaryImageHeader}000111")
          #elseif( $value == "I" ) #set( $binaryImageHeader = "${binaryImageHeader}001000")
          #elseif( $value == "J" ) #set( $binaryImageHeader = "${binaryImageHeader}001001")
          #elseif( $value == "K" ) #set( $binaryImageHeader = "${binaryImageHeader}001010")
          #elseif( $value == "L" ) #set( $binaryImageHeader = "${binaryImageHeader}001011")
          #elseif( $value == "M" ) #set( $binaryImageHeader = "${binaryImageHeader}001100")
          #elseif( $value == "N" ) #set( $binaryImageHeader = "${binaryImageHeader}001101")
          #elseif( $value == "O" ) #set( $binaryImageHeader = "${binaryImageHeader}001110")
          #elseif( $value == "P" ) #set( $binaryImageHeader = "${binaryImageHeader}001111")
          #elseif( $value == "Q" ) #set( $binaryImageHeader = "${binaryImageHeader}010000")
          #elseif( $value == "R" ) #set( $binaryImageHeader = "${binaryImageHeader}010001")
          #elseif( $value == "S" ) #set( $binaryImageHeader = "${binaryImageHeader}010010")
          #elseif( $value == "T" ) #set( $binaryImageHeader = "${binaryImageHeader}010011")
          #elseif( $value == "U" ) #set( $binaryImageHeader = "${binaryImageHeader}010100")
          #elseif( $value == "V" ) #set( $binaryImageHeader = "${binaryImageHeader}010101")
          #elseif( $value == "W" ) #set( $binaryImageHeader = "${binaryImageHeader}010110")
          #elseif( $value == "X" ) #set( $binaryImageHeader = "${binaryImageHeader}010111")
          #elseif( $value == "Y" ) #set( $binaryImageHeader = "${binaryImageHeader}011000")
          #elseif( $value == "Z" ) #set( $binaryImageHeader = "${binaryImageHeader}011001")
          #elseif( $value == "a" ) #set( $binaryImageHeader = "${binaryImageHeader}011010")
          #elseif( $value == "b" ) #set( $binaryImageHeader = "${binaryImageHeader}011011")
          #elseif( $value == "c" ) #set( $binaryImageHeader = "${binaryImageHeader}011100")
          #elseif( $value == "d" ) #set( $binaryImageHeader = "${binaryImageHeader}011101")
          #elseif( $value == "e" ) #set( $binaryImageHeader = "${binaryImageHeader}011110")
          #elseif( $value == "f" ) #set( $binaryImageHeader = "${binaryImageHeader}011111")
          #elseif( $value == "g" ) #set( $binaryImageHeader = "${binaryImageHeader}100000")
          #elseif( $value == "h" ) #set( $binaryImageHeader = "${binaryImageHeader}100001")
          #elseif( $value == "i" ) #set( $binaryImageHeader = "${binaryImageHeader}100010")
          #elseif( $value == "j" ) #set( $binaryImageHeader = "${binaryImageHeader}100011")
          #elseif( $value == "k" ) #set( $binaryImageHeader = "${binaryImageHeader}100100")
          #elseif( $value == "l" ) #set( $binaryImageHeader = "${binaryImageHeader}100101")
          #elseif( $value == "m" ) #set( $binaryImageHeader = "${binaryImageHeader}100110")
          #elseif( $value == "n" ) #set( $binaryImageHeader = "${binaryImageHeader}100111")
          #elseif( $value == "o" ) #set( $binaryImageHeader = "${binaryImageHeader}101000")
          #elseif( $value == "p" ) #set( $binaryImageHeader = "${binaryImageHeader}101001")
          #elseif( $value == "q" ) #set( $binaryImageHeader = "${binaryImageHeader}101010")
          #elseif( $value == "r" ) #set( $binaryImageHeader = "${binaryImageHeader}101011")
          #elseif( $value == "s" ) #set( $binaryImageHeader = "${binaryImageHeader}101100")
          #elseif( $value == "t" ) #set( $binaryImageHeader = "${binaryImageHeader}101101")
          #elseif( $value == "u" ) #set( $binaryImageHeader = "${binaryImageHeader}101110")
          #elseif( $value == "v" ) #set( $binaryImageHeader = "${binaryImageHeader}101111")
          #elseif( $value == "w" ) #set( $binaryImageHeader = "${binaryImageHeader}110000")
          #elseif( $value == "x" ) #set( $binaryImageHeader = "${binaryImageHeader}110001")
          #elseif( $value == "y" ) #set( $binaryImageHeader = "${binaryImageHeader}110010")
          #elseif( $value == "z" ) #set( $binaryImageHeader = "${binaryImageHeader}110011")
          #elseif( $value == "0" ) #set( $binaryImageHeader = "${binaryImageHeader}110100")
          #elseif( $value == "1" ) #set( $binaryImageHeader = "${binaryImageHeader}110101")
          #elseif( $value == "2" ) #set( $binaryImageHeader = "${binaryImageHeader}110110")
          #elseif( $value == "3" ) #set( $binaryImageHeader = "${binaryImageHeader}110111")
          #elseif( $value == "4" ) #set( $binaryImageHeader = "${binaryImageHeader}111000")
          #elseif( $value == "5" ) #set( $binaryImageHeader = "${binaryImageHeader}111001")
          #elseif( $value == "6" ) #set( $binaryImageHeader = "${binaryImageHeader}111010")
          #elseif( $value == "7" ) #set( $binaryImageHeader = "${binaryImageHeader}111011")
          #elseif( $value == "8" ) #set( $binaryImageHeader = "${binaryImageHeader}111100")
          #elseif( $value == "9" ) #set( $binaryImageHeader = "${binaryImageHeader}111101")
          #elseif( $value == "+" ) #set( $binaryImageHeader = "${binaryImageHeader}111110")
          #elseif( $value == "/" ) #set( $binaryImageHeader = "${binaryImageHeader}111111") #end
        #end
        ##IMAGE HEADER: $binaryImageHeader
        #set( $byteCount = $binaryImageHeader.length() / 8 -  1 )
        #set( $ascii = "" )
        #foreach( $byte in [0..$byteCount] )
          #set( $i = $byte * 8)
          #set( $j = $i + 8 )
          #set( $value = $binaryImageHeader.substring($i, $j) )
          #if( $value == "00100000") #set($ascii = "${ascii} ")
          #elseif( $value == "00100001") #set($ascii = "${ascii}!")
          #elseif( $value == "00100010") #set($ascii = "${ascii}$escapeTool.getQuote()")
          #elseif( $value == "00100011") #set($ascii = "${ascii}#")
          #elseif( $value == "00100100") #set($ascii = "${ascii}$")
          #elseif( $value == "00100101") #set($ascii = "${ascii}%")
          #elseif( $value == "00100110") #set($ascii = "${ascii}&")
          #elseif( $value == "00100111") #set($ascii = "${ascii}'")
          #elseif( $value == "00101000") #set($ascii = "${ascii}(")
          #elseif( $value == "00101001") #set($ascii = "${ascii})")
          #elseif( $value == "00101010") #set($ascii = "${ascii}*")
          #elseif( $value == "00101011") #set($ascii = "${ascii}+")
          #elseif( $value == "00101100") #set($ascii = "${ascii},")
          #elseif( $value == "00101101") #set($ascii = "${ascii}-")
          #elseif( $value == "00101110") #set($ascii = "${ascii}.")
          #elseif( $value == "00101111") #set($ascii = "${ascii}/")
          #elseif( $value == "00110000") #set($ascii = "${ascii}0")
          #elseif( $value == "00110001") #set($ascii = "${ascii}1")
          #elseif( $value == "00110010") #set($ascii = "${ascii}2")
          #elseif( $value == "00110011") #set($ascii = "${ascii}3")
          #elseif( $value == "00110100") #set($ascii = "${ascii}4")
          #elseif( $value == "00110101") #set($ascii = "${ascii}5")
          #elseif( $value == "00110110") #set($ascii = "${ascii}6")
          #elseif( $value == "00110111") #set($ascii = "${ascii}7")
          #elseif( $value == "00111000") #set($ascii = "${ascii}8")
          #elseif( $value == "00111001") #set($ascii = "${ascii}9")
          #elseif( $value == "00111010") #set($ascii = "${ascii}:")
          #elseif( $value == "00111011") #set($ascii = "${ascii};")
          #elseif( $value == "00111100") #set($ascii = "${ascii}<")
          #elseif( $value == "00111101") #set($ascii = "${ascii}=")
          #elseif( $value == "00111110") #set($ascii = "${ascii}>")
          #elseif( $value == "00111111") #set($ascii = "${ascii}?")
          #elseif( $value == "01000000") #set($ascii = "${ascii}@")
          #elseif( $value == "01000001") #set($ascii = "${ascii}A")
          #elseif( $value == "01000010") #set($ascii = "${ascii}B")
          #elseif( $value == "01000011") #set($ascii = "${ascii}C")
          #elseif( $value == "01000100") #set($ascii = "${ascii}D")
          #elseif( $value == "01000101") #set($ascii = "${ascii}E")
          #elseif( $value == "01000110") #set($ascii = "${ascii}F")
          #elseif( $value == "01000111") #set($ascii = "${ascii}G")
          #elseif( $value == "01001000") #set($ascii = "${ascii}H")
          #elseif( $value == "01001001") #set($ascii = "${ascii}I")
          #elseif( $value == "01001010") #set($ascii = "${ascii}J")
          #elseif( $value == "01001011") #set($ascii = "${ascii}K")
          #elseif( $value == "01001100") #set($ascii = "${ascii}L")
          #elseif( $value == "01001101") #set($ascii = "${ascii}M")
          #elseif( $value == "01001110") #set($ascii = "${ascii}N")
          #elseif( $value == "01001111") #set($ascii = "${ascii}O")
          #elseif( $value == "01010000") #set($ascii = "${ascii}P")
          #elseif( $value == "01010001") #set($ascii = "${ascii}Q")
          #elseif( $value == "01010010") #set($ascii = "${ascii}R")
          #elseif( $value == "01010011") #set($ascii = "${ascii}S")
          #elseif( $value == "01010100") #set($ascii = "${ascii}T")
          #elseif( $value == "01010101") #set($ascii = "${ascii}U")
          #elseif( $value == "01010110") #set($ascii = "${ascii}V")
          #elseif( $value == "01010111") #set($ascii = "${ascii}W")
          #elseif( $value == "01011000") #set($ascii = "${ascii}X")
          #elseif( $value == "01011001") #set($ascii = "${ascii}Y")
          #elseif( $value == "01011010") #set($ascii = "${ascii}Z")
          #elseif( $value == "01011011") #set($ascii = "${ascii}[")
          #elseif( $value == "01011100") #set($ascii = "${ascii}$escapeTool.getBackslash()")
          #elseif( $value == "01011101") #set($ascii = "${ascii}]")
          #elseif( $value == "01011110") #set($ascii = "${ascii}^")
          #elseif( $value == "01011111") #set($ascii = "${ascii}_")
          #elseif( $value == "01100000") #set($ascii = "${ascii}`")
          #elseif( $value == "01100001") #set($ascii = "${ascii}a")
          #elseif( $value == "01100010") #set($ascii = "${ascii}b")
          #elseif( $value == "01100011") #set($ascii = "${ascii}c")
          #elseif( $value == "01100100") #set($ascii = "${ascii}d")
          #elseif( $value == "01100101") #set($ascii = "${ascii}e")
          #elseif( $value == "01100110") #set($ascii = "${ascii}f")
          #elseif( $value == "01100111") #set($ascii = "${ascii}g")
          #elseif( $value == "01101000") #set($ascii = "${ascii}h")
          #elseif( $value == "01101001") #set($ascii = "${ascii}i")
          #elseif( $value == "01101010") #set($ascii = "${ascii}j")
          #elseif( $value == "01101011") #set($ascii = "${ascii}k")
          #elseif( $value == "01101100") #set($ascii = "${ascii}l")
          #elseif( $value == "01101101") #set($ascii = "${ascii}m")
          #elseif( $value == "01101110") #set($ascii = "${ascii}n")
          #elseif( $value == "01101111") #set($ascii = "${ascii}o")
          #elseif( $value == "01110000") #set($ascii = "${ascii}p")
          #elseif( $value == "01110001") #set($ascii = "${ascii}q")
          #elseif( $value == "01110010") #set($ascii = "${ascii}r")
          #elseif( $value == "01110011") #set($ascii = "${ascii}s")
          #elseif( $value == "01110100") #set($ascii = "${ascii}t")
          #elseif( $value == "01110101") #set($ascii = "${ascii}u")
          #elseif( $value == "01110110") #set($ascii = "${ascii}v")
          #elseif( $value == "01110111") #set($ascii = "${ascii}w")
          #elseif( $value == "01111000") #set($ascii = "${ascii}x")
          #elseif( $value == "01111001") #set($ascii = "${ascii}y")
          #elseif( $value == "01111010") #set($ascii = "${ascii}z")
          #elseif( $value == "01111011") #set($ascii = "${ascii}{")
          #elseif( $value == "01111100") #set($ascii = "${ascii}|")
          #elseif( $value == "01111101") #set($ascii = "${ascii}}")
          #elseif( $value == "01111110") #set($ascii = "${ascii}~") #end
        #end
        #set( $height = $ascii.replaceAll('(?s).*?<svg.*?height="(\d*).*?".*?>','$1') )
        #set( $width = $ascii.replaceAll('(?s).*?<svg.*?width="(\d*).*?".*?>','$1') )
        #if( $imageSizeArrayMHTMLReturn.add( {"width":$width, "height":$height}) ) #end
      #else
        #if( $imageSizeArrayMHTMLReturn.add( {"width":false, "height":false}) ) #end
      #end
      #if( $figure.add( $base64Fig)) #end
      #if( $figure.add( "")) #end
      #if( $base64Fig )
        #set( $imageData = "data:image/" )
        #set( $imageData = $imageData.concat($fileExt) )
        #set( $imageData = $imageData.concat(";base64, ") )
        #set( $imageData = $imageData.concat($base64Fig) )
      #else
        #set( $imageData = "" )
      #end
      #if( $imageBase64ArrayHTMLReturn.add( $imageData)) #end
    #else ##Return the same source
      #set( $newSourceLink = "")
    #end
    #if( $imageArrayMHTMLReturn.add( $newSourceLink)) #end
  #end
#end
#########################################################################################################################
##                          Macro: Convert Figures to Word shapes and resize                                          ###
##                           $input - string: string passed to the macro containing img tags                          ###
##                           $maxWidth - number: maximum allowed width of images, resize if greater                   ###
##                           Returns string with images converted to Word shapes                                      ###
##                                                                                                                    ###
#########################################################################################################################
#macro( convertFigures $input $maxWidth )
  ## clear any previous values
  #set( $width = false )
  #set( $height = false )
  #set( $targetWidth = false )
  #set( $targetHeight = false )
##
  ## set a default maximum height if none is specified in the global constants
  #if( !$maxPageHeight )
    #set ($maxHeight = 575)
  #else
    #set ($maxHeight = $maxPageHeight )
  #end

  #* ## Placeholder for future work
  ## Split the string into a substring per image
  #set ( $subs = $inString.split(">"))

  ## If an image is found process each image
  #if( $subs.size() > 1 )
    #foreach( $sub in $subs )
      #if( !$foreach.last) #set( $sub = "${sub}>") #end
      #if( $sub.indexOf("<img") > -1 && $sub.indexOf($baseUrl) > -1 )
    #end
  #end
  *#

  ## Create the initial output string
  #set( $output = $input )
##
  ## process if there is at least one image tag in the string
  #if( $input.indexOf("<img") > -1 && $input.indexOf( "blob:https") == -1 )
##
    ## Create a list of all image Urls in the string
    #findSourceMHTML( $input )
    #set( $imgUrls = $findSourceMHTMLReturn)
    #### Debug imgUrls: $imgUrls
##
    ## Embedded each image in the MTHML output, create a list of the sources
    ## and create a list of the image sizes for PNG images
    #imageArrayMTHML( $imgUrls )
    #set( $imgSources = $imageArrayMHTMLReturn )
    #set( $imageSizes = $imageSizeArrayMHTMLReturn )
    #set( $imageBase64s = $imageBase64ArrayHTMLReturn )
##

    ## For each identified image, replace the HTML image tag with a Word shape 
    ## using the MHTML embedded image as the source
    #foreach( $imgSource in $imgSources)
      ## if the image is not already base64 encoded
      #if( $imgUrls.get($foreach.index).indexOf(";base64") == -1 )
        ## Locate the position of this image
        #set( $sourcePosition = $input.indexOf($imgUrls.get($foreach.index)) )
        #set( $inputStart = $input.lastIndexOf("<img", $sourcePosition) )
        #set( $inputEnd = $input.indexOf(">", $sourcePosition) )
        #if( $inputStart > -1 && $inputEnd > -1 )
          #set( $inputImage = "" )
          #set( $inputImage = $input.substring($inputStart, $inputEnd) )
  ##
          ## Determine the size of the image stored in HTML
          #if( $inputImage.indexOf( "height=") > -1 && $inputImage.indexOf( "width=") > -1)
            #set($height = $inputImage.replaceAll('(?s).*?height="([0-9]*)".*','$1'))
            #set($width = $inputImage.replaceAll('(?s).*?width="([0-9]*)".*','$1'))
          ## If no image size is found in HTML, use the image size extracted directly from the image
          ## Only works for PNGs. Non-PNGs return a height and width of false
          #elseif( $imageSizes.size() > $foreach.index )
            #set( $height = $imageSizes.get($foreach.index).height )
            #set( $width = $imageSizes.get($foreach.index).width )
          #end
          #### Debug: width=$width, height=$height
  ##
          ## if a hight and width are known, resize the image appropriately
          #if( $height && $width )
            #set( $widthInt = $mathTool.toNumber($width) )
            #set( $heightInt = $mathTool.toNumber($height) )
            #### Debug: $widthInt x $heightInt
  ##
            #set ($aspectRatio = 1.5)
            #set ($aspectRatio = $mathTool.toDouble($widthInt) / $mathTool.toDouble($heightInt))
            #### Debug Aspect Ratio: $aspectRatio
  ##
            ## if the image is a formula created by Wiris and less than the max width, reduce the size to 75%
            #if( $input.indexOf("Wirisformula") > -1 && $widthInt <= $maxWidth )
              #set( $targetWidth = $mathTool.mul($widthInt, 0.75) )
              #set( $targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio) )
  ##
            ## if the image is higher than allowed, resize
            #elseif( $heightInt > $maxHeight )
              #set ($targetHeight = $maxHeight)
              #set ($targetWidth = $mathTool.mul($mathTool.toNumber($targetHeight), $aspectRatio))
  ##
              ## if the image is still wider than allowed, resize again
              #if( $targetWidth > $maxWidth )
                #set ($targetWidth = $maxWidth)
                #set ($targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio))
              #end
  ##
            ## if the image is wider than allowed, resize
            #elseif( $widthInt > $maxWidth )
              #set ($targetWidth = $maxWidth)
              #set ($targetHeight = $mathTool.div($mathTool.toNumber($targetWidth), $aspectRatio))
  ##
              ## if the image is still higher than allowed, resize again
              #if( $targetHeight > $maxHeight )
                #set ($targetHeight = $maxHeight)
                #set ($targetWidth = $mathTool.mul($mathTool.toNumber($targetHeight), $aspectRatio))
              #end
            #else
              #set ($targetWidth = $widthInt)
              #set ($targetHeight = $heightInt)
            #end
          #end

          ## find string for use in final replace all
          #set( $find = "(?s)<img{^>}*?$imgUrls.get($foreach.index){^>}*?>" )
          #set( $find = $find.replaceAll("\/", "\\/") )
          #set( $find = $find.replaceAll("\{", "[") )
          #set( $find = $find.replaceAll("\}", "]") )

  ##
 
          ## Update size for PDF output or for Word output
          ## replace the HTML image tags with Word shapes using the images embedded in the MHTML file
          ## if a target size has been idintified, use it, otherwise provide no size at let Word chose a size
          #if( $format == "doc")
            #if( !$targetHeight || !$targetWidth )

              #set( $replace = "<!--[if gte vml 1]><v:shape style='visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]-->" )
            #else
              #if( $input.indexOf("Wirisformula") > -1 )
                #set( $replace = "<span style='position:relative;top:7.0pt;mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]--></span>" )
              #else
                ##SHOULD USE THIS <br>
                #set( $replace = "<!--[if gte vml 1]><v:shape style='width:${targetWidth}pt;height:${targetHeight}pt;visibility:visible;mso-wrap-style:square'><v:imagedata src='$imgSource' o:title='$imgSource' /></v:shape><![endif]-->" )
              #end
            #end
          #elseif( $format == "pdf")
            #set( $replace = "<img src=$imgUrls.get($foreach.index) style='height:${targetHeight}pt;width:${targetWidth}pt' />" )
          #else
            #set( $replace = "<img src='$imageBase64s.get($foreach.index)' style='height:${targetHeight}pt;width:${targetWidth}pt' />" )
          #end
        
          #*FIND: $find <br>
          REPLACE: $replace <br>
          OUTPUT: $output <br>*#
          #set( $output = $output.replaceAll($find, $replace) )
        #end
      #end
    #end
    
  #end
  ##------------------------
  ##  Return String        #
  ##------------------------
  $output
#end
#########################################################################################################################
##          Macro: convertEquals
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( convertEquals $inString )
#set( $string = $inString )
#set( $string = $string.replaceAll("=", "=3D"))
$string
#end
#########################################################################################################################
##          Macro: formatText
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatText $inString )
#set( $string = $inString )
## clear all span satements to remove character formatting
#set( $string = $string.replaceAll("<span.*?>",""))
#set( $string = $string.replaceAll("<\/span>",""))
## clear all embedded headings from rich text fields
##set( $string = $string.replaceAll("<h\d*?.*?>","<p><strong>"))
##set( $string = $string.replaceAll("<\/h\d*?>","</strong></p>"))
$string
#end
#########################################################################################################################
##          Macro: formatTables
##          Input: $inString - input string
##                 $maxWidth - number: maximum allowed width(pts) of tables, resize if greater 
##                 $tableAlign - left, right, center alignment of table              
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatTables $inString $maxWidth $tableAlign )
##
  #if( $inString.contains("<table") )
    ## Clear variables used in the macro
    #set( $output = "" ) ##
    #set( $table = false ) ##
    #set( $tableHeader = false ) ##
    #set( $tableCell = false ) ##
    #set( $tableCellParagraph = false ) ##
##
    ## For tables, each tag that makes up the table needs to be independnetly processed, so split the description into
    ## an array where each each value in the array is a single tag of the HTML, split on '>'
    ## $sub = array of individual tags in the description
    #set ( $subs = $inString.split(">"))##
##
    ## Iterate on each substring
    #foreach ($sub in $subs) ##
      ## append > to each sub except the last one since the split cut it off
      #if( !$foreach.last) #set( $sub = "${sub}>") #end ##
##
      ## Determine where in a table we are
      #if( $sub.contains("<table") ) 
        #set( $table = true )  
        #set( $ogTableWidthPt = false ) ## clear value since this table is new 
        #set( $newTableWidthPt = false ) ## clear value since this table is new 
        #set( $tableScaleFactor = false ) ## clear value since this table is new 
      #end ##
      #if( $sub.contains("<thead") ) #set( $tableHeader = true )  #end ##
      #if( $sub.contains("<td") || $sub.contains("<th") ) #set( $tableCell = true )  #end ##
      #if( $sub.contains("<p") || $sub.contains("<li") ) #set( $tableCellParagraph = true )  #end ##
##
      ###########################################################################
      ## - make sure all table cells include a paragraph with an apropriate class
      ###########################################################################
      #if( $table )
        #set($sub = $sub.replaceAll('<p(.*)','<p class=TableCell$1')) ##
        #set( $sub = $sub.replaceAll('<li(.*?)>','<li class=TableCell$1>'))
      #end
##
      ## cells with no formatting
      #if( $tableCell && !$tableCellParagraph && $sub.matches("\s*[^<\s].*<\/td>") ) ##
        #set( $end = $sub.indexOf("</td>") ) ##
        #set( $contents = $sub.substring(0, $end) ) ##
        #set( $sub = "<p class=TableCell>$contents</p></td>") ##
      #end ##
##
      ## header cells with no formatting
      #if( !$tableCellParagraph && $sub.matches("\s*[^<\s].*<\/th>") ) ##
        #set( $end = $sub.indexOf("</th>") ) ##
        #set( $contents = $sub.substring(0, $end) ) ##
        #set( $sub = "<p class=TableCell>$contents</p></th>") ##
      #end ##
##
      ## cells with strong (bold) text
      #if( $tableCell && !$tableCellParagraph && $sub.matches("\s*[^<\s].*<\/strong>") ) ##
        #set( $end = $sub.indexOf("</strong>") ) ##
        #set( $contents = $sub.substring(0, $end) ) ##
        #set( $sub = "<p class=TableCell>$contents</p></strong>") ##
      #end ##
      ## cells with line breaks
      #if( $tableCell && !$tableCellParagraph && $sub.contains("<br") )
        #set( $end = $sub.indexOf("<br") ) ##
        #set( $contents = $sub.substring(0, $end) ) ##
        #set( $sub = "<p class=TableCell>$contents</p>") ##
      #end
      ###########################################################################
##
      ###########################################################################
      ## - make sure all tables have the borders collapsed
      ###########################################################################
      #if( $sub.contains("<table") && !$sub.contains("border-collapse") )
          #if( $sub.contains("style") )
            #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;border-collapse:collapse$4") )
          #else
            #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='border-collapse:collapse'$3") )
          #end
      #end
      ###########################################################################
##
      ###########################################################################
      ## - add header background color
      ###########################################################################
      #if( ($tableHeader && $sub.contains("<td")) || $sub.matches("(?s).*<th[^e].*") )
        #if( $sub.contains("style") )
          #set( $replace = "$1$2;background-color:$tableHeaderBackgroundColor$3" )
          #set( $sub = $sub.replaceAll("(<t.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)",$replace) )
        #else
          #set( $replace = "$1 style='background-color:$tableHeaderBackgroundColor'$2" )
          #set( $sub = $sub.replaceAll("(<t.*?)(>)",$replace) )
        #end
      #end
      ###########################################################################
##
      ###########################################################################
      ## - add border color
      ###########################################################################
      #*
      #if( $sub.contains("<table") )
          #if( $sub.contains("style") )
            #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;border: 0.5pt solid $tableBorderColor$4") )
          #else
            #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='border: 0.5pt solid $tableBorderColor'$3") )
          #end
      #end
      *#
      #if( $sub.contains("<td") || $sub.matches("(?s).*<th[^e].*") )
        #if( $sub.contains("style") )
          #set( $replace = "$1$2;border-color: $tableBorderColor$3" )
          #set( $sub = $sub.replaceAll("(<t.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)",$replace) )
        #else
          #set( $replace = "$1 style='border-color: $tableBorderColor'$2" )
          #set( $sub = $sub.replaceAll("(<t.*?)(>)",$replace) )
        #end
      #end
      ###########################################################################
##
      ###########################################################################
      ## - resize table widths to fit the page and use only point-based widths
      ###########################################################################
      #if( $sub.contains("<table") )
        ## Try finding a width
        #set( $tableWidth = $sub.replaceAll("(?s).*[\x22\x27; ]width.*?:.*?(\d*.*?)[;\x27\x22].*","$1") )
        ## there is no width already, see if the cells can be added up to calculate a width
        #if( $tableWidth == $sub)
          #set( $calcTableWidth = 0 )
          #set( $rowWidth = 0)
          #set( $start = $foreach.index )
          #set( $end = $subs.size() - 1 )
          ## Iterate through each sub between the current position and the end of the table
          #foreach( $i in [$start..$end] )
            #set( $iSub = $subs.get($i) )
            #if( $iSub.contains("<td") )
              #set( $cellWidth = $iSub.replaceAll("(?s).*[\x22\x27; ]width\s*:\s*(\d*.*?)[;\x27\x22].*","$1") )
              ## cell width found
              #if( $cellWidth != $iSub)
                ## width in pt
                #if( $cellWidth.contains("pt") ) ##
                  #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("pt"))) ) ##
                ## width in px
                #elseif( $cellWidth.contains("px") ) ##
                  #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("px"))) ) ## Extract number part
                  #set( $cellWidth = $cellWidth * 0.75 ) ## Convert px to pt
                ## width in % or other.  Essentially ignoring
                #else
                  #set( $cellWidth = 0 )
                #end
              ## no cell width found
              #else
                #set( $cellWidth = 0 )
              #end
              #set( $rowWidth = $rowWidth + $cellWidth )
            #end
            ## calculate width for each row and take the widest one
            #if( $iSub.contains("</tr") )
              #if( $rowWidth > $calcTableWidth )
                #set( $calcTableWidth = $rowWidth )
              #end
              #set( $rowWidth = 0)
            #end
            ## stop once the end of the table is reached in case there are mutliple tables
            #if( $iSub.contains("</table>") )
              #break
            #end
          #end
##
          ## Save table width in pt for cell processing 
          #set( $ogTableWidthPt = $calcTableWidth ) 
          #set( $newTableWidthPt = $calcTableWidth ) 
##
          ## Resize all tables greater than 100% to 100%
          #if( $ogTableWidthPt > $maxWidth )
            #set( $newTableWidthPt = $maxWidth )
          #end

          ## Resize all tables less than 1% to 100%
          #if( $ogTableWidthPt < 1 )
            #set( $newTableWidthPt = $maxWidth )
          #end
          ## Calculate resize factor for use later
          ## Debug New Table Width (Calc): $newTableWidthPt
          #set( $tableScaleFactor = $newTableWidthPt / $ogTableWidthPt )
          ## Debug Scale Factor (Calc): $tableScaleFactor
##
          ## add a table width to the table
          #if( $newTableWidthPt )
            #if( $sub.contains("style") )
              #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;width:${newTableWidthPt}pt$4") )
            #else
              #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='width:${newTableWidthPt}pt'$3") )
            #end
          #else
            #if( $sub.contains("style") )
              #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;width:${maxWidth}pt$4") )
            #else
              #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='width:${maxWidth}pt'$3") )
            #end
          #end
        ## There is a width, convert it to a point-based width equal or less than maxWidth
        #else
          ## widths in pt
          #if( $tableWidth.contains("pt") ) ##
            #set( $tableWidth = $mathTool.toDouble($tableWidth.substring(0,$tableWidth.indexOf("pt"))) ) ##
            ##<p>DEBUG FOUND TABLE WIDTH (pt) 1: $tableWidth</p>
            #set( $ogTableWidthPt = $tableWidth ) ## Save table width in pt for cell processing 
            ##<p>DEBUG FOUND TABLE WIDTH (pt) 2: $tableWidth</p>
          ## widths in px
          #elseif( $tableWidth.contains("px") ) ##
            #set( $tableWidth = $mathTool.toDouble($tableWidth.substring(0,$tableWidth.indexOf("px"))) ) ## Extract number part
            ##<p>DEBUG FOUND TABLE WIDTH (px) 1: $tableWidth</p>
            #set( $tableWidth = $tableWidth * 0.75 ) ## Convert px to pt
            #set( $ogTableWidthPt = $tableWidth ) ## Save table width in pt for cell processing 
            ##<p>DEBUG FOUND TABLE WIDTH (px) 2: $tableWidth</p>
          ## widths in %
          #elseif( $tableWidth.contains("%") ) ##
            #set( $tableWidth = $mathTool.toDouble($tableWidth.substring(0,$tableWidth.indexOf("%"))) ) ##
            #set( $ogTableWidthPt = $maxWidth * ($tableWidth/100) ) ## Save table width in pt for cell processing
            ##<p>DEBUG FOUND TABLE WIDTH (%) 1: $tableWidth</p>
          ## unknown width, force to 100%
          #else
            #set( $ogTableWidthPt = $maxWidth ) ## Save table width in pt for cell processing
          #end
          ##<p>DEBUG FOUND TABLE WIDTH 3: $tableWidth</p>
          #set( $newTableWidthPt = $ogTableWidthPt )
          ## Resize all tables greater than 100% to 100%
          #if( $ogTableWidthPt > $maxWidth )
            #set( $newTableWidthPt = $maxWidth )
          #end
          ##<p>DEBUG FOUND TABLE WIDTH 4: $tableWidth</p>
          ## Calculate resize factor for use later
          ## Debug New Table Width: $newTableWidthPt
          #set( $tableScaleFactor = $newTableWidthPt / $ogTableWidthPt )
          ##<p>Debug Scale Factor: $tableScaleFactor = $newTableWidthPt divided by $ogTableWidthPt</p>
##
          ## replace width with new value
          #if( $newTableWidthPt )
            #set( $find = "(?s)(.*[\x22\x27; ]width.*?:.*?)(\d*.*?)([;\x27\x22].*)")
            #set( $replace = "$1${newTableWidthPt}pt$3" )
            #set( $sub = $sub.replaceAll($find, $replace) )
          #end
        #end
      #end ##if( $sub.contains("<table") )
      ###########################################################################
##
      ###########################################################################
      ## - resize cell widths to use only point-based widths
      ## - requires the following values from the table width sizing
      ##   $newTableWidthPt
      ##   $tableScaleFactor
      ###########################################################################
      #if( $sub.contains("<td") || $sub.matches("(?s).*<th[^e].*"))
        ## Try finding a width
        #set( $cellWidth = $sub.replaceAll("(?s).*[\x22\x27; ]width\s*:\s*(\d*.*?)[;\x27\x22].*","$1") )
        ##<p>DEBUG cell wdith: |$cellWidth|</p>
        ##<p>DEBUG table scale: |$tableScaleFactor|</p>
        ##<p>DEBUG table width pt: |$newTableWidthPt|</p>
        ## if there is a width, convert to % and scale with table resizing
        #if( $cellWidth != $sub)
          ## widths in pt
          #if( $cellWidth.contains("pt") ) ##
            #if( $tableScaleFactor && $newTableWidthPt)
              #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("pt"))) ) ##
              ## Debug Start Width (pt): $cellWidth
              ## Debug Scale Factor: $tableScaleFactor
              #set( $cellWidthPt = $cellWidth * $tableScaleFactor ) ## Scale cell proportial to table
              ## Debug scaled Width (pt): $cellWidth
            #end
          ## widths in px
          #elseif( $cellWidth.contains("px") ) ##
            #if( $tableScaleFactor && $newTableWidthPt)
              #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("px"))) ) ## Extract number part
              #set( $cellWidth = $cellWidth * 0.75 ) ## Convert px to pt
              #set( $cellWidthPt = $cellWidth * $tableScaleFactor ) ## Scale cell proportial to table
              ##<p>Debug scaled Width (%): $cellWidth</p>
            #end
          ## widths in %
          #elseif( $cellWidth.contains("%") ) ##
            #set( $cellWidth = $mathTool.toDouble($cellWidth.substring(0,$cellWidth.indexOf("%"))) ) ##
            #if( $newTableWidthPt )
              #set( $cellWidthPt = ($cellWidth/100) * $newTableWidthPt ) ## Convert % to pt
            #else
              #set( $cellWidthPt = ($cellWidth/100) * $maxWidth )
            #end
          #else
            ## Ignoring widths uzing unknown units
          #end
          ## replace width with new value
          #if( $cellWidthPt )
            #set( $cellWidthPt = $cellWidthPt - 4 ) ## account for cell padding
            #set( $find = "(?s)(.*[\x22\x27; ]width.*?:.*?)(\d*.*?)([;\x27\x22].*)")
            #set( $replace = "$1${cellWidthPt}pt$3" )
            #set( $sub = $sub.replaceAll($find, $replace) )
          #else
            #set( $cellWidthPt = false )
          #end
        #end
      #end
      ###########################################################################
      ## - resize any images in the table
      ###########################################################################
      #if( $tableCell && $sub.contains("<v:shape") )
        #set( $start = $mathTool.toNumber($sub.indexOf("width")) + 6 )
        #set( $end = $mathTool.toNumber($sub.indexOf("pt",$start)) )
        #set( $width = $mathTool.toDouble($sub.substring($start,$end)) )
        #set( $start = $mathTool.toNumber($sub.indexOf("height")) + 7 )
        #set( $end = $mathTool.toNumber($sub.indexOf("pt",$start)) )
        #set( $height = $mathTool.toDouble($sub.substring($start,$end)) )
        #set( $aspectRatio = $height / $width )
        ##<p>DEUBG cell width: $cellWidthPt</p>
        ##<p>DEUBG img width: $width</p>

        #if( $cellWidthPt )
          #if( $width > ($cellWidthPt - 8) )
            #set( $width = $cellWidthPt - 8 )
            #set( $height = $width * $aspectRatio )
            #set( $replace = "width:${width}pt" )
            #set( $sub = $sub.replaceAll("width:([\d\.]*?)pt",$replace) )
            #set( $replace = "height:${height}pt" )
            #set( $sub = $sub.replaceAll("height:([\d\.]*?)pt",$replace) )
          #end
        #end
      #end
      ###########################################################################
      ## - align table per $tableAlign, remove any align statement coming from Jama
      ###########################################################################
      #if( $sub.contains("<table") )
        #set( $sub = $sub.replaceAll("align=[\x27\x22].*?[\x27\x22] ", "") )
      #end
      #if( $sub.contains("<table") )
        #set( $sub = "<div align=$tableAlign>$sub")
      #end
      #if( $sub.contains("</table") )
        #set( $sub = "$sub</div>")
      #end
      #if( $sub.contains("<table") )
        #set( $sub = $sub.replaceAll("margin-left:.*?[;\x27\x22]", "") )
      #end
      #if( $sub.contains("<td") || $sub.contains("<th") )
        #set( $sub = $sub.replaceAll("padding.*?[;\x27\x22]", "") )
      #end
      #if( $format == "pdf" )
        #set( $sub = $sub.replaceAll("writing-mode:tb-rl","") )
      #end
      ###########################################################################
      ## add the processed sub to the output string
      #set ( $output = "${output}${sub}" ) ##
      ## Determine where in a table we are
      #if( $sub.contains("</p") || $sub.contains("</li") ) #set( $tableCellParagraph = false )  #end ##
      #if( $sub.contains("</thead") ) #set( $tableHeader = false ) #end ##
      #if( $sub.contains("</td") || $sub.contains("</th") ) #set( $tableCell = false ) #end ##
      #if( $sub.contains("</table") ) #set( $table = false ) #end ##
    #end ##foreach ($sub in $subs)
  #else ##
    #set ( $output = $inString )
  #end ##if( $inString.contains("<table") )

  $output
#end
#########################################################################################################################
##          Macro: convertHyperlinks
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( convertHyperlinks $inString )
  ## Reset variables used in the macro
  #set( $subs = [] )
  #set( $output = "" )
  #set( $destDoc = false )
  #set( $deleteNextSub = false )
##
  ## split the string by > to break it up into HTML tags
  #set ( $subs = $inString.split(">"))
##
  ## Parse each substring
  #foreach ($sub in $subs) ##
    ## split removes the split character, so all subs are missing a > except for the last one
    #if( !$foreach.last) #set( $sub = "${sub}>") #end
    ## Hyperlinks are made up of two HTML tags.  If replacing a hyperlink weas just replaced, delete the second part of it
    #if( !$deleteNextSub )
      ## only process strings that contain a docID and the current Jama base URL, indicating they are hyperinks to a Jama item
      #if( $sub.contains("docId=") && $sub.contains($baseUrl) )
        ##Locate the doc ID in the string
        #set( $docIdStart = $sub.indexOf("docId=") + 6 )
        ## the doc ID might before or after the project ID, so check for & or " as the next character
        #set( $docIdEnd = $sub.indexOf( "&", $docIdStart))
        #if( $docIdEnd == -1 )
          #set( $docIdEnd = $sub.indexOf( '"', $docIdStart))
        #end
        ## Extract the doc ID from the string
        #set( $docId = $sub.substring( $docIdStart, $docIdEnd))
        ## Get the document corresponding to the docID
        #set ( $destDoc = $docDao.getDocument( $mathTool.toInteger($docId) ))
        
        ## Validate that the destination Doc was found
        #if ( $destDoc && $referenceableDocIds.contains($destDoc.id) )
          ## Find out the $objectTypeField of the destination item, if it has one
          #set( $destObjectType = false )
          #foreach( $destTypeField in $destDoc.documentType.documentTypeFields )
            #if( $destTypeField.documentField.name == $objectTypeField )
              #set ( $destObjectType = $velocityReportUtil.getValueForField($destDoc, $objectTypeField, $dateFormat ) )
              #break
            #end
          #end
  ##
          ## Replace the hyperink with a Word cross-reference appropriate for the type of destination item
          #if( $format == "doc" )
            #if( $destObjectType == "Figure" )
              #set( $referenceLabel = "Figure ?" )
              #foreach( $figure in $figureList)
                #if( $figure.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "Figure $figure.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<span style='color:blue'><!--[if supportFields]><span style='mso-element:field-begin'></span>REF _API${docId} \\h \\* CHARFORMAT <span style='mso-element:field-separator'></span><![endif]-->$referenceLabel<!--[if supportFields]><span style='mso-element:field-end'></span><![endif]--></span>") )
              #set( $deleteNextSub = true )
            #elseif( $destObjectType == "Table" )
              #set( $referenceLabel = "Table ?" )
              #foreach( $table in $tableList)
                #if( $table.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "Table $table.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<span style='color:blue'><!--[if supportFields]><span style='mso-element:field-begin'></span>REF _API${docId} \\h \\* CHARFORMAT <span style='mso-element:field-separator'></span><![endif]-->$referenceLabel<!--[if supportFields]><span style='mso-element:field-end'></span><![endif]--></span>") )
              #set( $deleteNextSub = true )
            #elseif( $destObjectType == "Equation" )
              #set( $referenceLabel = "eq. ?" )
              #foreach( $equation in $equationList)
                #if( $equation.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "eq. $equation.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<span style='color:blue'><!--[if supportFields]><span style='mso-element:field-begin'></span>REF _API${docId} \\h \\* CHARFORMAT <span style='mso-element:field-separator'></span><![endif]-->$referenceLabel<!--[if supportFields]><span style='mso-element:field-end'></span><![endif]--></span>") )
              #set( $deleteNextSub = true )
            #else
              #set ($sub = $sub.replaceAll("(?s)<a.*?docId=.*?>", "<span style='color:blue'><!--[if supportFields]><span style='mso-element:field-begin'></span>REF _API${docId} \\h \\* CHARFORMAT <span style='mso-element:field-separator'></span><![endif]--><span style='mso-no-proof:yes'>$destDoc.name</span><!--[if supportFields]><span style='mso-element:field-end'></span><![endif]--></span>") )
              #set( $deleteNextSub = true )
            #end
          #else
            #if( $destObjectType == "Figure" )
              #set( $referenceLabel = "Figure ?" )
              #foreach( $figure in $figureList)
                #if( $figure.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "Figure $figure.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<a href='#_API${docId}'>$referenceLabel</a>") )
              #set( $deleteNextSub = true )
            #elseif( $destObjectType == "Table" )
              #set( $referenceLabel = "Table ?" )
              #foreach( $table in $tableList)
                #if( $table.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "Table $table.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<a href='#_API${docId}'>$referenceLabel</a>") )
              #set( $deleteNextSub = true )
            #elseif( $destObjectType == "Equation" )
              #set( $referenceLabel = "eq. ?" )
              #foreach( $equation in $equationList)
                #if( $equation.id == $mathTool.toInteger($docId) ) 
                  #set( $referenceLabel = "eq. $equation.reference" )
                  #break
                #end
              #end
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<a href='#_API${docId}'>$referenceLabel</a>") )
              #set( $deleteNextSub = true )
            #else
              #set ($sub = $sub.replaceAll("(?s)<a.*docId=([0-9]*).*>", "<a href='#_API${docId}'>$destDoc.name</a>") )
              #set( $deleteNextSub = true )
            #end
          #end
        #end
      #end
      ## append the converted sub to the output string
      #set ( $output = "${output}${sub}" ) ##
    #else
      #if( $sub.indexOf("</a>") > -1 )
        #set( $deleteNextSub = false )
      #end
    #end
  #end ##
  ## return the string with hyperlinks replaced with Word cross-references
  $output
#end
#########################################################################################################################
##          Macro: stripProjectKey
##          Input: $inKey - input documentKey
##          Output: string
#########################################################################################################################
#macro( stripProjectKey $inKey )
  #set( $string = $inKey.toString() )
  #if( $string.indexOf("-") > -1 )
    #set( $start = $string.indexOf("-") + 1 )
    #set( $end = $string.length() )
    $string.substring($start,$end)
  #end
#end
#########################################################################################################################
##          Macro: formatTableCell
##          Input: $inString - input string
##                 $justification - string, justification to apply to output. (left, right, center)
##                 $$maxImageWidth - number, maximum wide of any image in the cell
##          Output: string, ready for opening in Word
#########################################################################################################################
#macro( formatTableCell $inString $justification $maxImageWidth)
  #if( $inString && $justification && $maxImageWidth )
    #set( $string = $inString.toString() )
    ## Re-format text for consistent look and feel
    #set( $string = "#formatText($string)" )                                        
    ## Prep figures for Word, use defined maximum width
    #set( $string = "#convertFigures($string, $maxImageWidth)" )                    
    ## Re-format tables for consistent look and feel
    #set( $string = "#formatTables($string, $maxImageWidth, 'left')" )               
    ## Convert hyperlinks in Jama to Word cross-references
    #set( $string = "#convertHyperlinks($string)" )                                 
    ## format lists appropriately
    #set( $string = $string.replaceAll('<li>','<li class=TableCell>') )             
    #set( $string = $string.replaceAll('<li\s([^c].*?)>','<li class=TableCell $1>') ) 
    ## Make sure all cells are contained in a paragraph with the appropriate style
    #if( !$string.contains("<p"))
      #set( $string = "<p class=TableCell style='text-align:$justification'>$string</p>" )
    #else
      #set( $string = $string.replaceAll("<p>","<p class=TableCell style='text-align:$justification'>") )
      #set( $string = $string.replaceAll("<p\s([^c].*?)>","<p class=TableCell $1 style='text-align:$justification'>") )
    #end
    $string
  #end
#end
#########################################################################################################################
##          Macro: formatRichText
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatRichText $inString )
  #if( $inString )
    #set( $string = $inString.toString() )
    ## Re-format text for consistent look and feel
    #set( $string = "#formatText($string)" )
    ## Prep figures for Word, use globally defined maximum width
    #set( $string = "#convertFigures($string, $maxPageWidth)" )
    ## Re-format tables for consistent look and feel
    #set( $string = "#formatTables($string, $maxPageWidth, 'center')" )
    ## Convert hyperlinks in Jama to Word cross-references
    #set( $string = "#convertHyperlinks($string)" )
    ## format lists appropriately
    #set( $string = $string.replaceAll('<li>','<li class=MsoListParagraph>'))
    #set( $string = $string.replaceAll('<li\s([^c].*?)>','<li class=MsoListParagraph $1>'))
    ## Make sure all content that is not already in a paragraph with a class is in a paragraph with class Normal
    #if( !$string.contains("<p"))
      #set( $string = "<p class=MsoNormal>$string</p>" )
    #else
      #set( $string = $string.replaceAll("<p>","<p class=MsoNormal>") )
      #set( $string = $string.replaceAll("<p\s([^c].*?)>","<p class=MsoNormal $1>") )
    #end
    $string
  #end
#end
#########################################################################################################################
## **********************************************************************************************************************
##
##  8.2 ITEM_TYPE_MACROS: Item Type Formatting Macros
##
##  >>>> Create one macro for each item format <<<<
##
##  Macros can be used for one or more Jama item types
##
## **********************************************************************************************************************
#########################################################################################################################
##
## Create a heading with the name of the document object and a bookmark named by the Jama API ID 
## bookmarks are used for cross-references
#macro( formatHeading $doc $hierarchyLevel $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.originDocument.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #if( $hierarchyLevel < 7 )
      <h$hierarchyLevel>
        <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
      </h$hierarchyLevel>
    #else
      <p class=MsoHeading$hierarchyLevel>
        <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
      </p>
    #end
  #end
#end
##
## Simple Name and Description, suitable for Text Items similar item types
#macro( formatNameDescription $doc $hierarchyLevel $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.originDocument.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #if( $hierarchyLevel < 7 )
      <h$hierarchyLevel>
        <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
      </h$hierarchyLevel>
    #else
      <p class=MsoHeading$hierarchyLevel>
        <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
      </p>
    #end
    #formatRichText($doc.description)
  #end
#end
##
## Description Only
#macro( formatDescription $doc $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #formatRichText($doc.description)
  #end
#end
##
## Figures
#macro( formatFigureObject $doc $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.originDocument.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #set( $referenceNumber = 0 )
    #foreach( $figure in $figureList)
      #if( $figure.id == $docID ) 
        #set( $referenceNumber = $figure.reference )
        #break
      #end
    #end
    #formatRichText($doc.description)
    
    <p class=MsoCaption style='margin-top:6pt;page-break-after:avoid'>
      <a name="_API${docID}"><span style='mso-bookmark:_API${docID}'>Figure </span></a>
      #*
      <span style='mso-bookmark:_API${docID}'>
        <span style='mso-no-proof:yes'>$referenceNumber</span>
      </span>
      *#
      <!--[if supportFields]>
        <span style='mso-bookmark:_API${docID}'></span>
        <span style='mso-element:field-begin'></span>
        <span style='mso-bookmark:_API${docID}'>
          <span style=3D'mso-spacerun:yes'></span>SEQ Figure \* ARABIC 
            <span style=3D'mso-element:field-separator'></span>
          </span>
      <![endif]-->
      <!--[if supportFields]>
        <span style='mso-bookmark:_API${docID}'></span>
        <span style='mso-element:field-end'></span>
      <![endif]-->
      <span style='mso-bookmark:_API${docID}'></span>. $doc.name
    </p>
    
  #end
#end
##
## Tables
#macro( formatTableObject $doc $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.originDocument.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #set( $referenceNumber = 0 )
    #foreach( $table in $tableList)
      #if( $table.id == $docID ) 
        #set( $referenceNumber = $table.reference )
        #break
      #end
    #end
    <p class=MsoCaption style='margin-top:6pt;page-break-after:avoid'><a name="_API${docID}">Table </a><!--[if supportFields]><span
        style='mso-bookmark:_API${docID}'></span><span style='mso-element:field-begin'></span><span
        style='mso-bookmark:_API${docID}'>SEQ Table
        \* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span
        style='mso-bookmark:_API${docID}'><span style='mso-no-proof:yes'>$referenceNumber</span></span><!--[if supportFields]><span
        style='mso-bookmark:_API${docID}'></span><span style='mso-element:field-end'></span><![endif]--><span
        style='mso-bookmark:_API${docID}'></span>. $doc.name
    </p>
    #formatRichText($doc.description)
  #end
#end
##
## Equations
#macro( formatEquationObject $doc $docStatus )
  #if( !$excludedStatuses.contains($docStatus) )
    #if( $baselineMode ) 
      #set($docID = $doc.currentVersion.originDocument.id) 
    #else 
      #set($docID = $doc.id)
    #end

    #set( $referenceNumber = 0 )
    #foreach( $equation in $equationList)
      #if( $equation.id == $docID ) 
        #set( $referenceNumber = $equation.reference )
        #break
      #end
    #end
    #set( $output = $doc.description )
    #set( $output = "#formatRichText($output)" )
    #if( $format == "doc" )
      #if( $output.indexOf("<p") > -1 )
        #set( $output = $output.replaceAll('(?s)<p.*?>','<p class=MsoCaption style="tab-stops:right 7.0in">'))
        #set( $output = $output.replaceAll('<\/p>',''))
      #else
        #set( $output = '<p class=MsoCaption style="tab-stops:right 7.0in">$output' )
      #end
      $output
      <span style='mso-tab-count:1'><a name="_API${docID}">eq.</a><span style='mso-spacerun:yes'> </span><!--[if supportFields]><span
        style='mso-bookmark:_API${docID}'></span><span style='mso-element:field-begin'></span><span
        style='mso-bookmark:_API${docID}'><span style='mso-spacerun:yes'> </span>SEQ Equation
        \* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span
        style='mso-bookmark:_API${docID}'><span style='mso-no-proof:yes'>$referenceNumber</span></span><!--[if supportFields]><span
        style='mso-bookmark:_API${docID}'></span><span style='mso-element:field-end'></span><![endif]--><span
        style='mso-bookmark:_API${docID}'></span>
      </span></p>
    #else
      <div style="float:left;width:368pt">$output</div>
      <div class=MsoCaption style="float:left;width:90pt;text-align:right"><a name="_API${docID}">eq. $referenceNumber</a></div>
    #end
  #end
#end
##

##
#########################################################################################################################
##  8.3 BODY_MACRO - Creates the body of the report
##          Input: None
##          Return: body of the report
#########################################################################################################################
#macro( createBody )

<body lang=EN-US link=blue vlink="#954F72" style='tab-interval:.5in'>

<div class=WordSectionPortrait>

#########################################################################################################################
## **********************************************************************************************************************
##
##  8.3.1 TITLE_PAGE: Title Page
##
##  >>>> Customize this section to replace the title page <<<< 
##
## **********************************************************************************************************************
#########################################################################################################################
##
## Get information from the document container
#if( $containerDoc ) ##
  #set( $title = $containerDoc.name) ##
  #set( $docNumber = $velocityReportUtil.getValueForField( $containerDoc, "document_id", $dateFormat )) ##
  #set( $docStatus = $velocityReportUtil.getValueForField( $containerDoc, "document_status", $dateFormat )) ##
  #set( $docAuthors = $velocityReportUtil.getValueForField( $containerDoc, "authors", $dateFormat )) ##
  #set( $docApprovers = $velocityReportUtil.getValueForField( $containerDoc, "approvers", $dateFormat )) ##
  #set( $docChangeHistory = $velocityReportUtil.getValueForField( $containerDoc, "change_history", $dateFormat )) ##
#else ##
  #set( $title = "NOT FOUND" ) ##
#end ##
 ##


##Get test plan
#set ($testPlan = $contourItemDao.getContourItem($mathTool.toInteger($report_testPlanId)))

<p class=MsoNormal>&nbsp;</p>

## Main Title Page Content
<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 align=right
 width="80%" style='width:80.0%;border-collapse:collapse;border:none;
 mso-border-left-alt:solid #4F81BD 2.25pt;mso-table-overlap:never;mso-yfti-tbllook:
 1184;mso-table-lspace:9.35pt;margin-left:6.35pt;mso-table-rspace:9.35pt;
 margin-right:6.35pt;mso-table-anchor-vertical:page;mso-table-anchor-horizontal:
 column;mso-table-left:right;mso-table-top:216.05pt;mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
  <td width=384 valign=top style='width:383.6pt;border:none;border-left:solid #4F81BD 2.25pt;
  padding:.15in 5.75pt .15in 5.75pt'>
  <p class=ColorfulList-Accent21 style='mso-element:frame;mso-element-frame-hspace:
  9.35pt;mso-element-wrap:around;mso-element-anchor-vertical:page;mso-element-anchor-horizontal:
  column;mso-element-left:right;mso-element-top:216.05pt;mso-height-rule:exactly'><span
  style='font-size:11.0pt;mso-bidi-font-family:Calibri'>$project.name</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=383 valign=top style='width:383.4pt;border:none;border-left:solid #4F81BD 2.25pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=ColorfulList-Accent21 style='mso-element:frame;mso-element-frame-hspace:
  9.35pt;mso-element-wrap:around;mso-element-anchor-vertical:page;mso-element-anchor-horizontal:
  column;mso-element-left:right;mso-element-top:216.05pt;mso-height-rule:exactly'><span
  style='font-size:28.0pt;mso-bidi-font-family:Calibri;color:#4F81BD'>
    Test Report: $testPlan.name
  </span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2;mso-yfti-lastrow:yes'>
  <td width=384 valign=top style='width:383.6pt;border:none;border-left:solid #4F81BD 2.25pt;
  padding:.15in 5.75pt .15in 5.75pt'>
  <p class=ColorfulList-Accent21 style='mso-element:frame;mso-element-frame-hspace:
  9.35pt;mso-element-wrap:around;mso-element-anchor-vertical:page;mso-element-anchor-horizontal:
  column;mso-element-left:right;mso-element-top:216.05pt;mso-height-rule:exactly'><span
  style='font-size:11.0pt;mso-bidi-font-family:Calibri'>Produced on $dateTool.get('MMMM dd, yyyy')</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style="margin-top:5in">&nbsp;</p>

## Approvers Table (shown only if there is a baseline)
#if( $baselineId )
  #set( $baseSignatures = $baselineDao.getSignaturesForBaseLine( $baselineId))
  #if( $baseSignatures.size() > 0)
    <p class=MsoSubtitle>Signature Approval</p>
    <table style="width:6.5in;border-collapse: collapse;">
      <thead>
        <tr>
          <th class=TableHeader style="background:$tableHeaderBackgroundColor;width:3.25in"><p class=TableHeader>Signed By</p></th>
          <th class=TableHeader style="background:$tableHeaderBackgroundColor;width:3.25in"><p class=TableHeader>Signed On (Pacific Time)</p></th>
        </tr>
      </thead>
      #foreach( $sig in $baseSignatures)
        <tr>
          <td class=TableCell style="width:3.25in;"><p class=TableCell style="text-align: center">$sig.user.fullName</p></td>
          <td class=TableCell style="width:3.25in;"><p class=TableCell style="text-align: center;">#getDateTime($sig.createdDate $timeZone)</p></td>
        </tr>
      #end
    </table>
  #end
#end
#########################################################################################################################
##
##  WORK_AROUND_HEADER_FOOTER
##
#########################################################################################################################
##--------------------------------------------------------------
##  Headers and Footers                                        #
##--------------------------------------------------------------
#if( $format == "doc" )
  <table style='margin-left:15in'>
    <tr style='height:.1in;mso-height-rule:exactly'>
      <td>
        <div style='mso-element:footnote-separator' id=fs>

        <p class=MsoNormal><span style='mso-special-character:footnote-separator'><![if !supportFootnotes]>

        <hr align=left size=1 width="33%">

        <![endif]></span></p>

        </div>

        <div style='mso-element:footnote-continuation-separator' id=fcs>

        <p class=MsoNormal><span style='mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

        <hr align=left size=1>

        <![endif]></span></p>

        </div>

        <div style='mso-element:endnote-separator' id=es>

        <p class=MsoNormal><span style='mso-special-character:footnote-separator'><![if !supportFootnotes]>

        <hr align=left size=1 width="33%">

        <![endif]></span></p>

        </div>

        <div style='mso-element:endnote-continuation-separator' id=ecs>

        <p class=MsoNormal><span style='mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

        <hr align=left size=1>

        <![endif]></span></p>

        </div>

        <div style='mso-element:header' id=h1>

          <div align=center>

          <table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0 width="100%"
           style='width:100.0%;border-collapse:collapse;border:none;mso-yfti-tbllook:
           1184;mso-padding-alt:0in 5.75pt 0in 5.75pt;mso-border-insideh:none;mso-border-insidev:
           none'>
           <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes;'>
            <td style='padding:0in 5.75pt 0in 5.75pt;'>
            <p class=MsoNormal>$project.name</p>
            </td>
            <td style='padding:0in 5.75pt 0in 5.75pt;'>
            <p class=MsoNormal align=right style='text-align:right'>Test Plan: $testPlan.name</p>
            </td>
           </tr>
          </table>

          </div>

          <p class=MsoNormal><o:p>&nbsp;</o:p></p>

        </div>

        <![if !supportTextWrap]><br clear=ALL>
        <![endif]>

        <p class=MsoFooter style='margin-right:.25in'><o:p>&nbsp;</o:p></p>

        </div>

        <div style='mso-element:footer' id=f1>
                    
          <table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=522
           style='width:100%;border-collapse:collapse;mso-yfti-tbllook:
           1184;mso-padding-alt:0in 5.4pt 0in 5.4pt;border-top: solid #000 1.0pt;'>
            
            <td valign=top style='padding:0in 5.4pt 0in 5.4pt'>
            <p class=MsoFooter>$project.organization.name</p>
            </td>

            <td valign=top style='padding:0in 5.4pt 0in 5.4pt'>
            <p class=MsoFooter>CONFIDENTIAL</p>
            </td>

            <td valign=top style='padding:0in 5.4pt 0in 5.4pt'>
            <p class=MsoNormal align=right style='text-align:right'><span
            style='font-family:"Calibri",sans-serif'>Page </span><!--[if supportFields]><span
            style='font-family:"Calibri",sans-serif'><span style='mso-element:field-begin'></span><span
            style='mso-spacerun:yes'> </span>PAGE <span style='mso-element:field-separator'></span></span><![endif]--><span
            style='font-family:"Calibri",sans-serif'><span style='mso-no-proof:yes'>3</span></span><!--[if supportFields]><span
            style='font-family:"Calibri",sans-serif;mso-no-proof:yes'><span
            style='mso-element:field-end'></span></span><![endif]--><span
            style='font-family:"Calibri",sans-serif'> of </span><!--[if supportFields]><span
            style='font-family:"Calibri",sans-serif'><span style='mso-element:field-begin'></span><span
            style='mso-spacerun:yes'> </span>NUMPAGES<span style='mso-spacerun:yes'> 
            </span><span style='mso-element:field-separator'></span></span><![endif]--><span
            style='font-family:"Calibri",sans-serif'><span style='mso-no-proof:yes'>3</span></span><!--[if supportFields]><span
            style='font-family:"Calibri",sans-serif;mso-no-proof:yes'><span
            style='mso-element:field-end'></span></span><![endif]--><span
            style='font-family:"Calibri",sans-serif'><o:p></o:p></span></p>
            </td>
           </tr>
          </table>

        </div>

        <div style='mso-element:header' id=fh1>

          <p class=MsoHeader><o:p>&nbsp;</o:p></p>

          <p class=MsoHeader align=right style='margin-right:-.25in;text-align:right'><o:p>&nbsp;</o:p></p>

        </div>

        <div style='mso-element:footer' id=ff1>

          <p class=MsoFooter align=center style='margin-right:-.25in;text-align:center'><span
          style='mso-bidi-font-size:10.0pt;background:white'>© $dateTool.get('yyyy') $project.organization.name, All Right Reserved. This document may not in any form be
          reproduced, distributed or utilized, in whole or in part without prior, express
          written consent of $project.organization.name.</p>

        </div>
      </td>
    </tr>
  </table>
#end
#########################################################################################################################

## Page Break
<br clear=all style='mso-special-character:line-break;page-break-before:always'>

#if( $format == "doc" )
#########################################################################################################################
##
##  8.3.2 TABLE_OF_CONTENTS
##
#########################################################################################################################

## Title
<p class=MsoTocHeading>Table of Contents</p>

## Word field for a table of contents
<div>
  <p class=MsoNormal>
    <!--[if supportFields]><span style='mso-element:field-begin'></span> 
    TOC \h \o 1-7 \* MERGEFORMAT <span
    style='mso-element:field-separator'></span><![endif]--><span
    style='color:red;mso-no-proof:yes'>Select the entire document (Windows: Ctrl+a) (Mac: Command+a) and press F9 to update the TOC and Cross-References</span><!--[if supportFields]><span
    style='mso-element:field-end'></span><![endif]--></p>
</div>

## Page Break
<br clear=all style='mso-special-character:line-break;page-break-before:always'>

#########################################################################################################################
##
##  Determine if there are figures and tables in the document
##  Hide Table of Figures or Tables if nothing to list
##  
##  Creates 
##  -$tableOfFigures - boolean
##  -$tableOfTables  - boolean
##
#########################################################################################################################

#set( $tableOfFigures = false )
#set( $tableOfTables = false )
#foreach( $vDoc in $documentList )
  #set( $doc = $vDoc.document)
  #getObjectType($doc) ## creates $docObjectType, false if there is none
  #if( $docObjectType == $figureObjectType) #set( $tableOfFigures = true ) #end
  #if( $docObjectType == $tableObjectType) #set( $tableOfTables = true ) #end
  #if( $tableOfFigures && $tableOfTables )
    #break
  #end
#end

#########################################################################################################################
##
##  8.3.3 TABLE_OF_FIGURES
##
#########################################################################################################################

#if( $tableOfFigures )

## Title
<p class=MsoTocHeading>Table of Figures</p>

## Word field for a table of figures
<p class=MsoNormal>
  <!--[if supportFields]><span style='mso-element:field-begin'></span>TOC \h \z \c &quot;Figure&quot;
  <span style='mso-element:field-separator'></span></span></b><![endif]-->
  <span style='color:red;mso-no-proof:yes'>Select the entire document (Windows: Ctrl+a) (Mac: Command+a) and press F9 to update the TOC and Cross-References</span>
  <!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->
</p>

## Page Break
<br clear=all style='mso-special-character:line-break;page-break-before:always'>

#end

#########################################################################################################################
##
##  8.3.4 TABLE_OF_TABLES
##
#########################################################################################################################

#if( $tableOfTables )
## Title
<p class=MsoTocHeading>Table of Tables</p>

## Word field for a table of tables
<p class=MsoNormal>
  <!--[if supportFields]><span style='mso-element:field-begin'></span>TOC \h \z \c &quot;Table&quot; 
  <span style='mso-element:field-separator'></span><![endif]-->
  <span style='color:red;mso-no-proof:yes'>Select the entire document (Windows: Ctrl+a) (Mac: Command+a) and press F9 to update the TOC and Cross-References</span>
  <!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->
</p>

## Page Break
<br clear=all style='mso-special-character:line-break;page-break-before:always'>
#end

#end ##if( $format == "doc" )

#########################################################################################################################
##
##  8.3.5 CHANGE_HISTORY
##
#########################################################################################################################

#if( $docChangeHistory && $docChangeHistory != "" )
  <p class=MsoTocHeading>Change History</p>
  #formatRichText($docChangeHistory)

  <p class=MsoNormal>&nbsp;</p>

  ## Page Break
  <br clear=all style='mso-special-character:line-break;page-break-before:always'>
#end




#########################################################################################################################
##
##  8.3.6 OUTPUT_DOCUMENT_LIST: Generate each item in DocumentList
##
#########################################################################################################################



#################################################################
##
## Test Runs Per Test Cycle ~~ Data Gathering & Organization
##
#################################################################


## Gather Test Plan
#set($testPlanID = $mathTool.toInteger($report_testPlanId))

## Fetch Test Plan & Test Plans Test Sets
#set($testPlan = $testPlanDao.getTestPlan($testPlanID))
#set($testSets = $testPlan.testSets)

## Gather all Test Plan Test Case IDs
#set($testCaseIds = [])

#foreach($testSet in $testSets)
  #set($testSetCases = $testSet.testSetCases)

  #foreach($testSetCase in $testSetCases)
    #set($testCaseID = $mathTool.toInteger($testSetCase.testCase.id))
    #set($success = $testCaseIds.add($testCaseID))
  #end
#end

## Gather all test runs from each test case id
#set( $testCaseTestRunIDs = $tRunDao.getTestRunIdsForTestCases($testCaseIds) )

## From all test runs gather only active test runs of test plan test cases 
#set( $activeTestRuns = [])

#foreach($testRunID in $testCaseTestRunIDs)
  #set($testRunID = $mathTool.toInteger($testRunID))
  #set($testRun = $tRunDao.getTestRun($mathTool.toInteger($testRunID)))
  
  #if($testRun.active)
    #set($success = $activeTestRuns.add($testRun))
  #end
#end

## Sort all active test runs by ID to set runs in correct order in line with cycles
#set( $activeTestRuns = $sortTool.sort($activeTestRuns, "id:asc"))

## Gather test runs grouped by their test case (orgnaize data into usable format for test run tables)
#set($finalTestRunCollection = [])
#set($collectedTestCases = [])

#foreach($run in $activeTestRuns)
  #set($testCase = $run.testCase)

  #if(!$collectedTestCases.contains($testCase.id))
    #set($caseGroupedTestRuns = [])
    #set($success = $collectedTestCases.add($testCase.id))

    #foreach($checkRun in $activeTestRuns)
      #if($checkRun.testCase.id == $testCase.id)
        #set($success = $caseGroupedTestRuns.add($checkRun))
      #end
    #end

    #set($success = $finalTestRunCollection.add({"TestCase": $testCase, "TestRuns": $caseGroupedTestRuns}))

  #end
#end




########### Display Test Plan ###########################
<h1>$testPlan.name ($testPlan.documentKey)</h1>
#if( $testPlan.description)  
 <p class=MsoNormal>#formatRichText($testPlan.description)</p>
#end


########### Display Test Results #########################

<h1>Detailed Results</h1>

#foreach($testData in $finalTestRunCollection)
  #set($testCase = $testData.get("TestCase"))
  #set($testRuns = $testData.get("TestRuns"))

  <h2>$testCase.name ($testCase.documentKey)</h2>

  #foreach($testRun in $testRuns)

    <h3>$testRun.documentKey</h3>

    <table class=MsoNormalTable cellpadding="0" cellspacing="0" border="1" width="100%" style='border-collapse:collapse;border:none;mso-border-alt:solid black .5pt; mso-yfti-tbllook:1184;mso-padding-alt:0in 5.4pt 0in 5.4pt;mso-border-insideh:.5pt solid black;mso-border-insidev:.5pt solid black'>

        ## Test Run Description
        <tr bgcolor="ffffff">
            <td colspan="6"><p class=MsoNormal><b>Description:</b></p><p class=MsoNormal>#formatTableCell($testRun.description, "left", 325)</p></td>
        </tr>

        ## Test Runs Test Cycle
        <tr bgcolor="ffffff">
            <td width="15%"><p class=MsoNormal><b>Test Cycle:</b></p></td>
            <td colspan="5" width="85%"><p class=MsoNormal>$testRun.testCycle.name</p></td>
        </tr>

        ## Test Runs Test Group
        <tr bgcolor="ffffff">
            <td width="15%"><p class=MsoNormal><b>Test Group:</b></p></td>
            <td colspan="5" width="85%"><p class=MsoNormal>$testRun.testRunSet.name</p></td>
        </tr>

        ## Test Runs Test Case
        <tr bgcolor="ffffff">
            <td width="15%"><p class=MsoNormal><b>Test Case:</b></p></td>
            <td colspan="5" width="85%"><p class=MsoNormal>$testCase.name [$testCase.documentKey]</p></td>
        </tr>

        ## Test Run Creation Date
        <tr bgcolor="ffffff">
            <td width="15%"><p class=MsoNormal><b>Run Created on:</b></p></td>
            <td colspan="5" width="85%"><p class=MsoNormal>$dateTool.format('MMM d, yyyy, h:mm a z', $testRun.createdDate)</p></td>
        </tr>

        ## Test Run Created By User
        <tr bgcolor="ffffff">
            <td width="15%"><p class=MsoNormal><b>Created By:</b></p></td>
            <td colspan="5" width="85%"><p class=MsoNormal>$userDao.getUser($testRun.createdBy).fullName</p></td>
        </tr>

        ## Test Run Steps
        <tr bgcolor="ffffff">
            <td colspan="6"><p class=MsoNormal><b>Steps</b></p></td>
        </tr>
        <tr bgcolor="ffffff">
          <td width="10%" style='background:#D9D9D9'><p class=MsoNormal ><b>#</b></p></td>
          <td width="20%" style='background:#D9D9D9'><p class=MsoNormal><b>Action</b></p></td>
          <td width="20%" style='background:#D9D9D9'><p class=MsoNormal><b>Expected Result</b></p></td>
          <td width="20%" style='background:#D9D9D9'><p class=MsoNormal><b>Notes</b></p></td>
          <td width="10%" style='background:#A6A6A6'><p class=MsoNormal><b>Status</b></p></td>
          <td width="20%" style='background:#A6A6A6'><p class=MsoNormal><b>Result</b></p></td>
        </tr>

        #foreach( $step in $testRun.testRunSteps)
          <tr bgcolor="ffffff">
            <td width="10%"><p class=MsoNormal>#if($step.stepIndex) #formatTableCell($step.stepIndex, "left", 100) #end</p></td>
            <td width="20%"><p class=MsoNormal>#if($step.action) #formatTableCell($step.action, "left", 200) #end</p></td>
            <td width="20%"><p class=MsoNormal>#if($step.expectedResult) #formatTableCell($step.expectedResult, "left", 200) #end</p></td>
            <td width="20%"><p class=MsoNormal>#if($step.notes) #formatTableCell($step.notes, "left", 200) #end</p></td>
            <td width="10%"><p class=MsoNormal>#if($step.status) #formatTableCell($step.status, "left", 100) #end</p></td>
            <td width="20%">#if($step.result) #formatTableCell($step.result , "left", 200)  #end</td>
          </tr>
        #end

        ## Actual Results
        <tr bgcolor="ffffff">
            <td width="15%"><p class=MsoNormal><b>Actual Results:</b></p></td>
            <td colspan="5" width="85%"><p class=MsoNormal>#if($testRun.actualResults) #formatTableCell($testRun.actualResults , "left", 325)#end</p></td>
        </tr>

        ## Test Run Execution Date
        <tr bgcolor="ffffff">
            <td width="15%"><p class=MsoNormal><b>Executed on:</b></p></td>
            <td colspan="5" width="85%"><p class=MsoNormal>#if($testRun.executionDate) #getDateTime($testRun.executionDate $timeZone) #end</p></td>
        </tr>

        ## Test Run Executed By
        <tr bgcolor="ffffff">
            <td width="15%"><p class=MsoNormal><b>Test Executed By:</b></p></td>
            <td colspan="5" width="85%"><p class=MsoNormal>#if($testRun.assignedTo) $testRun.assignedTo.fullName #end</p></td>
        </tr>

        ## Test Run Status
        <tr bgcolor="ffffff">
            <td width="15%"><p class=MsoNormal><b>Test Status:</b></p></td>
            <td colspan="5" width="85%"><p class=MsoNormal>#if($testRun.testRunStatus) $testRun.testRunStatus #end</p></td>
        </tr>

        ## Pass with Errors
        <tr bgcolor="ffffff">
            <td width="15%"><p class=MsoNormal><b>Pass with Errors:</b></p></td>
            <td colspan="5" width="85%"><p class=MsoNormal>#if($testRun.forcePassed) $testRun.forcePassed #end</p></td>
        </tr>
    </table>

    <p class=MsoNormal></p>

  #end ## #foreach($testRun in $testRuns)
    
#end ## #foreach($testData in $finalTestRunCollection)

#########################################################################################################################
## **********************************************************************************************************************
#########################################################################################################################

</div>

</body>
#end
#########################################################################################################################
## **********************************************************************************************************************
#########################################################################################################################
##
#########################################################################################################################
##
##  9. DOCUMENT_INITIALIZATION
##
##  All code the executes before the report loops through $documentList goes here.
##
##  Outputs the following information for use in the rest of the report:
##  --> $containerDoc - Set or Component that contains the items in the document.  Used for Headers, Footers and Title page.
##  --> $documentRev - Name of the baseline that all items are part of. Appended with an asterisk if some items have 
##                     changed since latest baseline.
##  --> $referenencableDocIds - List of all items that will have bookmark references available in the doc
##
#########################################################################################################################
###getContainer( $baselineMode ) ## Creates: $containerDoc
#### Debug: $containerDoc.documentKey: $containerDoc.name
## Only show a revision if exporting from a baseline
#if( $baselineMode )
  #getDocumentRev() ## Creates: $documentRev, $baselineId
  #### Debug $documentRev
#else
  #set( $documentRev = "N/A" )
  #set( $baselineId = false )
#end
#getReferenceableDocIds() ## Creates: $referenencableDocIds
##
#########################################################################################################################

#########################################################################################################################
##
##  10. REPORT_BODY
##
#########################################################################################################################

#set( $body = "#createBody()")
#if( $format == "doc" )
  #convertEquals( $body )
#else
  $body
#end

#########################################################################################################################
##
##  11. PDF_HEADER_FOOTER
##
#########################################################################################################################
#if( $format == "pdf" )
  ##---------------------------------------------------------------------------
  ## Get information from the document container
  ##---------------------------------------------------------------------------
  #if( $containerDoc )
    #set( $title = $containerDoc.name)
  #else
    #set( $title = "NOT FOUND" )
  #end
  ##---------------------------------------------------------------------------
  <jamaheader>
    <style type="text/css">
      div
      {float:left;
       width: 3.25in;
       max-width: 3.25in;}
      p
      {font-size:9pt;
       font-family:"${primaryFont}",sans-serif;}
      div.left
        {margin-left:1in;}
      p.left
      {text-align: left;}
      p.right
        {text-align: right;}
    </style>
    <div class=left><p class=left>$project.name</p></div>
    <div><p class=right>$title</p></div>
  </jamaheader>
  <jamafooter>
    <style type="text/css">
      div
      {float:left;
       width: 2.16in;
       max-width: 2.16in;}
      p
      {font-size:9pt;
       font-family:"${primaryFont}",sans-serif;}
      div.left
        {margin-left:1in;}
      p.left
      {text-align: left;}
      p.middle
        {text-align: center;
        color:gray;}
      p.right
        {text-align: right;}
    </style>
    <div class=left><p class=left>$project.name</p></div>
    <div><p class=middle>Confidential. $project.organization.name</p></div>
    <div><p class=right>Page $$PAGEOF$$</p></div>
  </jamafooter>
#end

</html>

#########################################################################################################################
##
##  12. MS_WORD_OBJECTS
##
#########################################################################################################################

#if( $format == "doc" )
#########################################################################################################################
##  Embed images
#########################################################################################################################

#foreach( $f in $figure)
$f
#end

#########################################################################################################################

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/item0001.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<b:Sources xmlns:b=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography" xmlns=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography" SelectedStyle=3D"/APASixthEditionOfficeOnline.xsl" StyleName=3D"APA" Version=3D"6"/>

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/props001.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?>
<ds:datastoreItem ds:itemID=3D"{A1D0A804-CF3A-234A-AB79-452ECE125E33}" xmlns:ds=3D"http://schemas.openxmlformats.org/officeDocument/2006/customXml"><ds:schemaRefs><ds:schemaRef ds:uri=3D"http://schemas.openxmlformats.org/officeDocument/2006/bibliography"/></ds:schemaRefs></ds:datastoreItem>

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/themedata.thmx
Content-Transfer-Encoding: base64
Content-Type: application/vnd.ms-officetheme

UEsDBBQABgAIAAAAIQDp3g+//wAAABwCAAATAAAAW0NvbnRlbnRfVHlwZXNdLnhtbKyRy07DMBBF
90j8g+UtSpyyQAgl6YLHjseifMDImSQWydiyp1X790zSVEKoIBZsLNkz954743K9Hwe1w5icp0qv
8kIrJOsbR12l3zdP2a1WiYEaGDxhpQ+Y9Lq+vCg3h4BJiZpSpXvmcGdMsj2OkHIfkKTS+jgCyzV2
JoD9gA7NdVHcGOuJkTjjyUPX5QO2sB1YPe7l+Zgk4pC0uj82TqxKQwiDs8CS1Oyo+UbJFkIuyrkn
9S6kK4mhzVnCVPkZsOheZTXRNajeIPILjBLDsAyJX89nIBkt5r87nons29ZZbLzdjrKOfDZezE7B
/xRg9T/oE9PMf1t/AgAA//8DAFBLAwQUAAYACAAAACEApdan58AAAAA2AQAACwAAAF9yZWxzLy5y
ZWxzhI/PasMwDIfvhb2D0X1R0sMYJXYvpZBDL6N9AOEof2giG9sb69tPxwYKuwiEpO/3qT3+rov5
4ZTnIBaaqgbD4kM/y2jhdj2/f4LJhaSnJQhbeHCGo3vbtV+8UNGjPM0xG6VItjCVEg+I2U+8Uq5C
ZNHJENJKRds0YiR/p5FxX9cfmJ4Z4DZM0/UWUtc3YK6PqMn/s8MwzJ5PwX+vLOVFBG43lExp5GKh
qC/jU72QqGWq1B7Qtbj51v0BAAD//wMAUEsDBBQABgAIAAAAIQBreZYWgwAAAIoAAAAcAAAAdGhl
bWUvdGhlbWUvdGhlbWVNYW5hZ2VyLnhtbAzMTQrDIBBA4X2hd5DZN2O7KEVissuuu/YAQ5waQceg
0p/b1+XjgzfO3xTVm0sNWSycBw2KZc0uiLfwfCynG6jaSBzFLGzhxxXm6XgYybSNE99JyHNRfSPV
kIWttd0g1rUr1SHvLN1euSRqPYtHV+jT9yniResrJgoCOP0BAAD//wMAUEsDBBQABgAIAAAAIQC2
9GeYkwcAAMkgAAAWAAAAdGhlbWUvdGhlbWUvdGhlbWUxLnhtbOxZzYsbyRW/B/I/NH2X9dWtj8Hy
ok/P2jO2sWSHPdZIpe7yVHeJqtKMxWII3lMugcAm5JCFve0hhCzswi655I8x2CSbPyKvqlvdVVLJ
nhkcMGFGMHSXfu/Vr9579d5T1d3PXibUu8BcEJb2/Pqdmu/hdM4WJI16/rPZpNLxPSFRukCUpbjn
b7DwP7v361/dRUcyxgn2QD4VR6jnx1KujqpVMYdhJO6wFU7huyXjCZLwyqPqgqNL0JvQaqNWa1UT
RFLfS1ECah8vl2SOvZlS6d/bKh9TeE2lUANzyqdKNbYkNHZxXlcIsRFDyr0LRHs+zLNglzP8Uvoe
RULCFz2/pv/86r27VXSUC1F5QNaQm+i/XC4XWJw39Jw8OismDYIwaPUL/RpA5T5u3B63xq1Cnwag
+RxWmnGxdbYbwyDHGqDs0aF71B416xbe0N/c49wP1cfCa1CmP9jDTyZDsKKF16AMH+7hw0F3MLL1
a1CGb+3h27X+KGhb+jUopiQ930PXwlZzuF1tAVkyeuyEd8Ng0m7kyksUREMRXWqKJUvloVhL0AvG
JwBQQIokST25WeElmkMUDxElZ5x4JySKIfBWKGUChmuN2qTWhP/qE+gn7VF0hJEhrXgBE7E3pPh4
Ys7JSvb8B6DVNyBvf/75zesf37z+6c1XX715/fd8bq3KkjtGaWTK/fLdH/7zzW+9f//w7S9f/zGb
ehcvTPy7v/3u3T/++T71sOLSFG//9P27H79/++ff/+uvXzu09zk6M+EzkmDhPcKX3lOWwAId/PEZ
v57ELEbElOinkUApUrM49I9lbKEfbRBFDtwA23Z8ziHVuID31y8swtOYryVxaHwYJxbwlDE6YNxp
hYdqLsPMs3UauSfnaxP3FKEL19xDlFpeHq9XkGOJS+UwxhbNJxSlEkU4xdJT37FzjB2r+4IQy66n
ZM6ZYEvpfUG8ASJOk8zImRVNpdAxScAvGxdB8Ldlm9Pn3oBR16pH+MJGwt5A1EF+hqllxvtoLVHi
UjlDCTUNfoJk7CI53fC5iRsLCZ6OMGXeeIGFcMk85rBew+kPIc243X5KN4mN5JKcu3SeIMZM5Iid
D2OUrFzYKUljE/u5OIcQRd4TJl3wU2bvEPUOfkDpQXc/J9hy94ezwTPIsCalMkDUN2vu8OV9zKz4
nW7oEmFXqunzxEqxfU6c0TFYR1Zon2BM0SVaYOw9+9zBYMBWls1L0g9iyCrH2BVYD5Adq+o9xQJ6
JdXc7OfJEyKskJ3iiB3gc7rZSTwblCaIH9L8CLxu2nwMpS5xBcBjOj83gY8I9IAQL06jPBagwwju
g1qfxMgqYOpduON1wy3/XWWPwb58YdG4wr4EGXxtGUjspsx7bTND1JqgDJgZgi7DlW5BxHJ/KaKK
qxZbO+WW9qYt3QDdkdX0JCT9YAe00/uE/7veBzqMt3/5xrEPPk6/41ZsJatrdjqHksnxTn9zCLfb
1QwZX5BPv6kZoXX6BEMd2c9Ytz3NbU/j/9/3NIf2820nc6jfuO1kfOgwbjuZ/HDl43QyZfMCfY06
8MgOevSxT3Lw1GdJKJ3KDcUnQh/8CPg9s5jAoJLTJ564OAVcxfCoyhxMYOEijrSMx5n8DZHxNEYr
OB2q+0pJJHLVkfBWTMChkR526lZ4uk5O2SI77KzX1cFmVlkFkuV4LSzG4aBKZuhWuzzAK9RrtpE+
aN0SULLXIWFMZpNoOki0t4PKSPpYF4zmIKFX9lFYdB0sOkr91lV7LIBa4RX4we3Bz/SeHwYgAkJw
HgfN+UL5KXP11rvamR/T04eMaUUANNjbCCg93VVcDy5PrS4LtSt42iJhhJtNQltGN3gihp/BeXSq
0avQuK6vu6VLLXrKFHo+CK2SRrvzPhY39TXI7eYGmpqZgqbeZc9vNUMImTla9fwlHBrDY7KC2BHq
NxeiEdy8zCXPNvxNMsuKCzlCIs4MrpNOlg0SIjH3KEl6vlp+4Qaa6hyiudUbkBA+WXJdSCufGjlw
uu1kvFziuTTdbowoS2evkOGzXOH8VovfHKwk2RrcPY0Xl94ZXfOnCEIsbNeVARdEwN1BPbPmgsBl
WJHIyvjbKUx52jVvo3QMZeOIrmKUVxQzmWdwncoLOvqtsIHxlq8ZDGqYJC+EZ5EqsKZRrWpaVI2M
w8Gq+2EhZTkjaZY108oqqmq6s5g1w7YM7NjyZkXeYLU1MeQ0s8JnqXs35Xa3uW6nTyiqBBi8sJ+j
6l6hIBjUysksaorxfhpWOTsftWvHdoEfoHaVImFk/dZW7Y7dihrhnA4Gb1T5QW43amFoue0rtaX1
rbl5sc3OXkDyGEGXu6ZSaFfCyS5H0BBNdU+SpQ3YIi9lvjXgyVtz0vO/rIX9YNgIh5VaJxxXgmZQ
q3TCfrPSD8NmfRzWa6NB4xUUFhkn9TC7sZ/ABQbd5Pf2enzv7j7Z3tHcmbOkyvTdfFUT13f39cbh
u3uPQNL5stWYdJvdQavSbfYnlWA06FS6w9agMmoN26PJaBh2upNXvnehwUG/OQxa406lVR8OK0Gr
puh3upV20Gj0g3a/Mw76r/I2BlaepY/cFmBezevefwEAAP//AwBQSwMEFAAGAAgAAAAhAA3RkJ+2
AAAAGwEAACcAAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFnZXIueG1sLnJlbHOEj00KwjAU
hPeCdwhvb9O6EJEm3YjQrdQDhOQ1DTY/JFHs7Q2uLAguh2G+mWm7l53JE2My3jFoqhoIOumVcZrB
bbjsjkBSFk6J2TtksGCCjm837RVnkUsoTSYkUiguMZhyDidKk5zQilT5gK44o49W5CKjpkHIu9BI
93V9oPGbAXzFJL1iEHvVABmWUJr/s/04GolnLx8WXf5RQXPZhQUoosbM4CObqkwEylu6usTfAAAA
//8DAFBLAQItABQABgAIAAAAIQDp3g+//wAAABwCAAATAAAAAAAAAAAAAAAAAAAAAABbQ29udGVu
dF9UeXBlc10ueG1sUEsBAi0AFAAGAAgAAAAhAKXWp+fAAAAANgEAAAsAAAAAAAAAAAAAAAAAMAEA
AF9yZWxzLy5yZWxzUEsBAi0AFAAGAAgAAAAhAGt5lhaDAAAAigAAABwAAAAAAAAAAAAAAAAAGQIA
AHRoZW1lL3RoZW1lL3RoZW1lTWFuYWdlci54bWxQSwECLQAUAAYACAAAACEAtvRnmJMHAADJIAAA
FgAAAAAAAAAAAAAAAADWAgAAdGhlbWUvdGhlbWUvdGhlbWUxLnhtbFBLAQItABQABgAIAAAAIQAN
0ZCftgAAABsBAAAnAAAAAAAAAAAAAAAAAJ0KAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFn
ZXIueG1sLnJlbHNQSwUGAAAAAAUABQBdAQAAmAsAAAAA

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/colorschememapping.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"yes"?>
<a:clrMap xmlns:a=3D"http://schemas.openxmlformats.org/drawingml/2006/main" bg1=3D"lt1" tx1=3D"dk1" bg2=3D"lt2" tx2=3D"dk2" accent1=3D"accent1" accent2=3D"accent2" accent3=3D"accent3" accent4=3D"accent4" accent5=3D"accent5" accent6=3D"accent6" hlink=3D"hlink" folHlink=3D"folHlink"/>

#########################################################################################################################
##
##  13. WORD_HEADER_FOOTER: MS Word Header / Footer Definition
##  Removed due to Word for Mac bug
##
#########################################################################################################################
#*
------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/header.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="utf-8"

        ##   $foreach.index == 328  works with word and generates images  -> P1G3-TSTRN-5158 User Account Profile
<html xmlns:v=3D"urn:schemas-microsoft-com:vml"
xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns:dt=3D"uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml"
xmlns=3D"http://www.w3.org/TR/REC-html40">

##---------------------------------------------------------------------------
## Get information from the document container
##---------------------------------------------------------------------------
#if( $containerDoc )
  #set( $title = $containerDoc.name)
#else
  #set( $title = "NOT FOUND" )
#end
##---------------------------------------------------------------------------

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 15">
<meta name=3DOriginator content=3D"Microsoft Word 15">
<link id=3DMain-File rel=3DMain-File href=3D"../WordTemplate.htm">
<![if IE]>
<base href=3D"file:///C:/D993472D/WordTemplate.fld/header.htm" id=3D"webarch_temp_base_tag">
<![endif]><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"2049"/>
</xml><![endif]-->
</head>

<body lang=3DEN-US link=3Dblue vlink=3D"#954F72">

<div style=3D'mso-element:footnote-separator' id=3Dfs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1 width=3D"33%">

<![endif]></span></p>

</div>

<div style=3D'mso-element:footnote-continuation-separator' id=3Dfcs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1>

<![endif]></span></p>

</div>

<div style=3D'mso-element:endnote-separator' id=3Des>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1 width=3D"33%">

<![endif]></span></p>

</div>

<div style=3D'mso-element:endnote-continuation-separator' id=3Decs>

<p class=3DMsoNormal><span style=3D'mso-special-character:footnote-continuation-separator'><![if !supportFootnotes]>

<hr align=3Dleft size=3D1>

<![endif]></span></p>

</div>

<div style=3D'mso-element:header' id=3Dh1>

  <p class=3DMsoHeader>$project.name
  <w:PTab Alignment=3D"CENTER" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>
  <w:PTab Alignment=3D"RIGHT" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>$title</p>

</div>

<![if !supportTextWrap]><br clear=3DALL>
<![endif]>

<p class=3DMsoFooter style=3D'margin-right:.25in'><o:p>&nbsp;</o:p></p>

</div>

<div style=3D'mso-element:footer' id=3Df1>

  <p class=3DMsoFooter>$project.name
    <w:PTab Alignment=3D"CENTER" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab><span style=3D'color:gray'>Confidential. $project.organization.name</span>
    <w:PTab Alignment=3D"RIGHT" RelativeTo=3D"MARGIN" Leader=3D"NONE"></w:PTab>
    Page&nbsp;<!--[if supportFields]><span style=3D'mso-element:field-begin'></span>PAGE <span style=3D'mso-element:field-separator'></span>
    <![endif]-->2<!--[if supportFields]><span style=3D'mso-element:field-end'></span><![endif]-->&nbsp;of&nbsp;<span style=3D'mso-field-code:" NUMPAGES  "'>4</span></p>
  </p>

</div>

<div style=3D'mso-element:header' id=3Dfh1>

<p class=3DMsoHeader><o:p>&nbsp;</o:p></p>

<p class=3DMsoHeader align=3Dright style=3D'text-align:right'><o:p>&nbsp;</o:p></p>

</div>

<div style=3D'mso-element:footer' id=3Dff1>

<p class=3DMsoFooter style=3D'text-align:center'>
  &copy; $project.organization.name, All Right Reserved. This document may not in any form be reproduced, distributed or utilized, in whole or in part without prior, express written consent of $project.organization.name.
</p>

</div>

</body>

</html>
*#


#########################################################################################################################

#########################################################################################################################
##
##  14. WORD_EMBEDDED_FILE_LIST
##
#########################################################################################################################

------=_NextPart_01D506B0.1F52D2B0
Content-Location: file:///C:/D993472D/WordTemplate.fld/filelist.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml; charset="utf-8"

<xml xmlns:o=3D"urn:schemas-microsoft-com:office:office">
 <o:MainFile HRef=3D"../WordTemplate.htm"/>
 <o:File HRef=3D"item0001.xml"/>
 <o:File HRef=3D"props001.xml"/>
 <o:File HRef=3D"themedata.thmx"/>
 <o:File HRef=3D"colorschememapping.xml"/>
##<o:File HRef=3D"header.htm"/>
 #foreach( $file in $files)
 #convertEquals($file)
 #end
 <o:File HRef=3D"filelist.xml"/>
</xml>
------=_NextPart_01D506B0.1F52D2B0--
#end